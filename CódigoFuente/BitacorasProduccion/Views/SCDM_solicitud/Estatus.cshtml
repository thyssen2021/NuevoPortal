@using Clases.Util;
@model IEnumerable<Portal_2_0.Models.SCDM_solicitud>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Estatus de Solicitudes de Maestro de Materiales";
    ViewBag.PrimerNivel = "scdm_mm";
    ViewBag.SegundoNivel = "estatus_solicitudes_mm";
    ViewBag.ControllerName = ViewContext.RouteData.Values["controller"];

    ViewBag.nav_style = "nav-sm";

    Clases.Util.MensajesSweetAlert mensajeAlerta = (Clases.Util.MensajesSweetAlert)ViewBag.MensajeAlert;

    //obtiene los filtros
    Portal_2_0.Models.Paginacion paginacionFiltros = (Portal_2_0.Models.Paginacion)ViewBag.Paginacion;

    List<Portal_2_0.Models.SCDM_cat_departamentos_asignacion> departamentos = (List<Portal_2_0.Models.SCDM_cat_departamentos_asignacion>)ViewBag.ListadoDepartamentos;
    List<DateTime> listDiasFestivos = (List<DateTime>)ViewBag.ListDiasFestivos;

    DateTime fecha_inicio = (DateTime)ViewBag.Fecha_inicio;
    DateTime fecha_fin = (DateTime)ViewBag.Fecha_fin;

}

@section estilos
{
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")

    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">

    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!--Handsontable -->
    <link href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" rel="stylesheet">
    <link href="~/Content/css/HansontableHeaderColors.css" rel="stylesheet" />


    <style>
        .glow {
            color: #e00202;
            /* animation: glow 0.7s ease-in-out infinite alternate;*/
            /*background-color: #f7c3bd;*/
            font-weight: bold;
        }

        @@-webkit-keyframes glow {
            from {
                text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 6px #f5a8a8, 0 0 8px #f5a8a8, 0 0 10px #f5a8a8, 0 0 12px #f5a8a8, 0 0 14px #f5a8a8;
            }

            to {
                text-shadow: 0 0 4px #fff, 0 0 6px #faccc6, 0 0 8px #faccc6, 0 0 10px #faccc6, 0 0 12px #faccc6, 0 0 14px #faccc6, 0 0 16px #faccc6;
            }
        }

        .handsontable .negritas {
            font-weight: bold;
            color: #413e3e;
        }

         .pendiente {
            background-color: #ffd800;
        }

         .cerrada {
            background-color: #9ddc82;
        }

         .rechazada {
            background-color: #f1a097;
        }

         .incorrecta {
            background-color: #8abded;
        }

         .handsontable .pendiente {
            background-color: #ffd800;
        }

        .handsontable .cerrada {
            background-color: #9ddc82;
        }

        .handsontable .rechazada {
            background-color: #f1a097;
        }

        .handsontable .incorrecta {
            background-color: #8abded;
        }

        .handsontable .pendiente-excedido {
            background: repeating-linear-gradient( -50deg, #ffd800 10px, #FFD814 22px, #EF7270 33px, #EF7283 33px );
        }
        .handsontable .critico {
            color:red;
            font-weight:500;
        }
        .handsontable .htCommentCell:after {
            border-top: 4px solid #009ff7 !important
        }
        .htCommentTextArea {
            background-color: #fffbe4 !important;        
        }
    </style>
}

@*Para SweetAlert*@
@if (mensajeAlerta != null)
{
    <input type="hidden" value="@mensajeAlerta.Mensaje" id="mensajeAlert" />
    <input type="hidden" value="@mensajeAlerta.getTipoMensaje()" id="mensajeAlertTipo" />
}


<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            @*Utilizado para mover a la derecha los iconos del card*@
                            <span style="visibility:hidden">_______</span>
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box">
                                    @*<div class="form-group">
            @if (User.IsInRole(TipoRoles.SCDM_MM_CREACION_SOLICITUDES) || User.IsInRole(TipoRoles.SCDM_MM_ADMINISTRADOR))
            {
                <a href="@Url.Action("create", ViewBag.ControllerName)" class="btn btn-success" style="color:white">
                    <i class="fa fa-plus-square"></i>
                    Crear Nueva Solicitud
                </a>
            }
        </div>
        <div class="ln_solid"></div>*@

                                    <div class="form-group">
                                        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "buscarForm", @class = "form-horizontal form-label-left" }))
                                        {
                                            <div class="form-group row">
                                                <label class="control-label col-md-1 col-sm-1" for="id_estatus" style="text-align:right">Estatus:</label>
                                                <div class="col-md-6 col-sm-6 ">
                                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                                        @{string valorEstatus = (Request.QueryString["estatus"] != null ? Request.QueryString["estatus"] : string.Empty);
                                                            Dictionary<string, int> estatusAmountDictionary = (Dictionary<string, int>)ViewBag.estatusAmount;
                                                        }
                                                        @foreach (KeyValuePair<string, string> kvp in (Dictionary<string, string>)ViewBag.estatusMap)
                                                        {
                                                            <label class="btn @(kvp.Key == valorEstatus? "active": string.Empty)" role="button">
                                                                <input type="radio" name="estatus" value="@kvp.Key">@kvp.Value
                                                                <span class="badge  @(kvp.Key == valorEstatus? "bg-red": "bg-secondary")" style="color:white">@estatusAmountDictionary[kvp.Key]</span>
                                                            </label>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="control-label col-md-1 col-sm-1 label-align" for="fecha_inicio">Fecha Inicio:</label>
                                                <div class="col-md-2 col-sm-2">
                                                    <input type="date" class="form-control" name="fecha_inicio" id="fecha_inicio" value="@(fecha_inicio.ToString("yyyy-MM-dd"))" autocomplete="off">
                                                </div>                                                
                                                 <label class="control-label col-md-1 col-sm-1 label-align" for="fecha_fin">Fecha Inicio:</label>
                                                <div class="col-md-2 col-sm-2">
                                                    <input type="date" class="form-control" name="fecha_fin" id="fecha_fin" value="@(fecha_fin.ToString("yyyy-MM-dd"))" autocomplete="off">
                                                </div>                                                
                                                <div class="col-md-1 col-sm-1">
                                                    <input type="submit" value="buscar" class="btn btn-info" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="ln_solid"></div>
                                   
                                    <div class="form-group">
                                        <div class="col-md-12 col-sm-12">
                                            <button id="btn-codigo-colores" class="btn btn-info btn float-lg-right">
                                                <svg width="20px" height="20px" viewBox="0 0 73 73" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>design-and-ux/color-theory</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="design-and-ux/color-theory" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="container" transform="translate(2.000000, 2.000000)" fill="#FFFFFF" fill-rule="nonzero" stroke="#878787" stroke-width="2"> <rect id="mask" x="-1" y="-1" width="71" height="71" rx="14"> </rect> </g> <g id="rgb" transform="translate(11.000000, 11.000000)" fill-rule="nonzero"> <path d="M41.1835937,15.234375 C41.1835937,23.6200256 34.3856506,30.4179687 26,30.4179687 C17.6143494,30.4179687 10.8164062,23.6200256 10.8164062,15.234375 C10.8164062,6.84872439 17.6143494,0.05078125 26,0.05078125 C34.3856506,0.05078125 41.1835937,6.84872439 41.1835937,15.234375 Z" id="Shape" fill="#42C0E2"> </path> <path d="M52,34.8280029 C52,43.2136535 45.2020569,50.0115967 36.8164062,50.0115967 C28.4307556,50.0115967 21.6328125,43.2136535 21.6328125,34.8280029 C21.6328125,26.4423523 28.4307556,19.6444092 36.8164062,19.6444092 C45.2020569,19.6444092 52,26.4423523 52,34.8280029 Z" id="Shape" fill="#FFD061"> </path> <path d="M22.4195252,29.9922791 C23.5676574,30.2695922 24.7665711,30.4179687 26,30.4179687 C32.6947937,30.4179687 38.377533,26.0849 40.3968811,20.0700989 C39.2487488,19.7923889 38.0498352,19.6444092 36.8164062,19.6444092 C30.1216125,19.6444092 24.4388733,23.9774781 22.4195252,29.9922791 Z" id="Shape" fill="#49BD90"> </path> <path d="M30.3671875,34.8280029 C30.3671875,43.2136535 23.5692444,50.0115967 15.1835937,50.0115967 C6.79794314,50.0115967 0,43.2136535 0,34.8280029 C0,26.4423523 6.79794314,19.6444092 15.1835937,19.6444092 C23.5692444,19.6444092 30.3671875,26.4423523 30.3671875,34.8280029 Z" id="Shape" fill="#FA70B2"> </path> <path d="M11.6031189,20.0700989 C13.622467,26.0849 19.3052063,30.4179687 26,30.4179687 C27.2334289,30.4179687 28.4323426,30.2695922 29.5804748,29.9922791 C27.5611267,23.9774781 21.8783875,19.6444092 15.1835937,19.6444092 C13.9501648,19.6444092 12.7512512,19.7923889 11.6031189,20.0700989 Z" id="Shape" fill="#AF7BC6"> </path> <path d="M21.6328125,34.8280029 C21.6328125,38.9797668 23.2998657,42.7415467 26,45.4825439 C28.7001343,42.7415467 30.3671875,38.9797668 30.3671875,34.8280029 C30.3671875,30.676239 28.7001343,26.9144592 26,24.1734619 C23.2998657,26.9144592 21.6328125,30.676239 21.6328125,34.8280029 Z" id="Shape" fill="#EF6122"> </path> <path d="M29.5804748,29.9934692 C28.4323426,30.2703857 27.2330322,30.4179687 26,30.4179687 C24.7669678,30.4179687 23.5676574,30.2703857 22.4195252,29.9934692 C23.162201,27.7817078 24.3995972,25.7984619 26,24.1734619 C27.6004028,25.7984619 28.837799,27.7817078 29.5804748,29.9934692 Z" id="Shape" fill="#FFFFFF"> </path> </g> </g> </g></svg>
                                                Código de Colores
                                            </button>
                                            <button id="btn-borrar-filtro" class="btn btn-danger btn float-lg-right">
                                                <i class="fa-solid fa-filter-circle-xmark"></i>
                                                Borrar filtros
                                            </button>
                                        </div>                                        
                                    </div>
                                     <div class="form-group">
                                        <div class="form-group row">
                                            <div class="col-md-12 col-sm-12">
                                                <div id="estatus_hot"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>     
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Finalizar Solicitud -->
<div class="modal fade" id="codigoColoresModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Código de colores</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="col-md-2 col-sm-2">

                </div>
                <div class="col-md-8 col-sm-8">
                    <div id="codigo_colores_hot" class="h"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Aceptar</button>
            </div>

        </div>
    </div>
</div>
@section scripts
{
    <!-- SweetAlert2 -->
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render(Url.Content("~/Scripts/AlertasSweetAlert.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")
    <script src="~/Content/vendors/twbs-toggle-buttons/jquery.twbs-toggle-buttons.min.js"></script>
    <!-- Handsontable-->
    <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/languages/es-MX.js"></script>

    <script>

        var headers = ['Acciones','Folio', 'Tipo Solicitud', 'Planta', 'Nombre Solicitante', 'Prioridad', 'Solicitante', 'Solicitante_estatus',
            'Aprobación', 'Aprobación_estatus', 'Facturación', 'Facturacion_estatus', 'Compras', 'Compras_estatus', 'Controlling', 'Controlling_estatus',
            'Ingeniería', 'Ingeniería_estatus', 'Calidad', 'Calidad_estatus', 'C. MRO','Compras_MRO_estatus'
            ,'Ventas','Ventas_estatus', 'SCDM','SCDM_estatus', 'Estado'
        ];

        $(document).ready(function () {

            //inicializa hansontable
            inicializaHandsontable();

            //inicializaliza hansontable status
            inicializaHandsontableEstatus();

            //cargaDatosIniciales();

            //inicializa los data table
            /*
            var tabla = $('#datatable_1').DataTable({
                "paging": false,
                "ordering": false,
                "searching": false,
                "scrollX": true,
                "info": false
            });
            */

            //inicializa radio toogle
            $(".btn-group-toggle").twbsToggleButtons();

            //detecta el cambio en el radio de estatus
            $('input[type=radio][name=estatus]').change(function () {
                EnviaBusqueda()
            });

            var form = document.getElementById("buscarForm");


            $("#btn-codigo-colores").on("click", function () {
                $('#codigoColoresModal').modal('show');
            });

            $("#btn-borrar-filtro").on("click", function () {
                hotStatus.getPlugin('Filters').clearConditions();
                hotStatus.getPlugin('Filters').filter();
                hotStatus.render();
            });


            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })


        });

        function inicializaHandsontableEstatus() {
            const container = document.querySelector('#estatus_hot');

            //obtiene el index de la columna con porcentaje
            hotStatus = new Handsontable(container, {
                autoWrapRow: true,

                colHeaders: headers,
                afterGetColHeader: function (col, TH) {

                    var TR = TH.parentNode;
                    var THEAD = TR.parentNode;
                    var headerLevel = (-1) * THEAD.childNodes.length + Array.prototype.indexOf.call(THEAD.childNodes, TR);

                    function applyClass(elem, className) {
                        if (!Handsontable.dom.hasClass(elem, className)) {
                            Handsontable.dom.addClass(elem, className);
                        }
                    }

                    if (col == -1) {
                        applyClass(TH, 'HTthyssen');
                    } else if (headerLevel === -2) {
                        applyClass(TH, 'HTthyssen');
                    } else {
                        applyClass(TH, 'HTthyssen');
                    }
                    //remueve el boton de filtro
                    if (col > 4 && col != GetColFromName("Estado")) {
                        const button = TH.querySelector('.changeType');

                        if (!button) {
                            return;
                        }

                        button.parentElement.removeChild(button);
                    }
                },
                columns: [
                    { readOnly: true, renderer: "html", disableVisualSelection: true },  //Acciones
                    { readOnly: true }, //Folio
                    { readOnly: true },  //Tipo Solicitud
                    { readOnly: true },  //Planta
                    { readOnly: true },  //Nombre Solicitante
                    { readOnly: true },  //Prioridad
                    { readOnly: true },  //Solicitante
                    { readOnly: true },  //Solicitante Estatus
                    { readOnly: true },  //Aprobación
                    { readOnly: true },  //Aprobación Estatus
                    { readOnly: true },  //Facturación
                    { readOnly: true },  //Facturación Estatus
                    { readOnly: true },  //Compras
                    { readOnly: true },  //Compras Estatus
                    { readOnly: true },  //Controlling
                    { readOnly: true },  //Controlling Estatus
                    { readOnly: true },  //Ingeniería
                    { readOnly: true },  //Ingeniería Estatus
                    { readOnly: true },  //Calidad
                    { readOnly: true },  //Calidad Estatus
                    { readOnly: true },  //C. MRO
                    { readOnly: true },  //C. MRO Estatus
                    { readOnly: true },  //Ventas
                    { readOnly: true },  //Ventas Estatus
                    { readOnly: true },  //SCDM
                    { readOnly: true },  //SCDM Estatus
                    { readOnly: true },  //Estado
                ],
                colWidths: [
                    135,  //Acciones
                    55, //Folio
                    170,  //Tipo Solicitud
                    85,  //Planta
                    150,  //Nombre Solicitante
                    75,  //Prioridad
                    68,  //Solicitante
                    80,  //Solicitante Estatus
                    76,  //Aprobación
                    80,  //Aprobación Estatus
                    73,  //Facturación
                    70,  //Facturación Estatus
                    65,  //Compras
                    80,  //Compras Estatus
                    72,  //Controlling
                    80,  //Controlling Estatus
                    65,  //Ingeniería
                    80,  //Ingeniería Estatus
                    65,  //Calidad
                    80,  //Calidad Estatus
                    65,  //C. MRO
                    80,  //C. MRO Estatus
                    70,  //Ventas
                    80,  //Ventas Estatus
                    60,  //SCDM
                    80,  //SCDM Estatus
                    130,  //Estado
                ],
                hiddenColumns: {
                    // specify columns hidden by default
                    columns: [GetColFromName("Solicitante_estatus"), GetColFromName("Aprobación_estatus"), GetColFromName("Facturacion_estatus"), GetColFromName("Compras_estatus")
                        , GetColFromName("Controlling_estatus"), GetColFromName("Ingeniería_estatus"), GetColFromName("Calidad_estatus"), GetColFromName("Compras_MRO_estatus")
                        , GetColFromName("Ventas_estatus"), GetColFromName("SCDM_estatus")
                    ], //contains ID
                },
                licenseKey: 'non-commercial-and-evaluation',
                //rowHeaders: true,
                autoColumnSize: true,
                //width: '100%',
                height: '650px',
                manualColumnResize: true,
                data: [], //para que muestre la tabla vacia
                filters: true,
                dropdownMenu: {
                    items: {
                        filter_by_condition: {
                            // hide the 'Filter by value' list from all columns but the first one
                            hidden() {
                                return this.getSelectedRangeLast().to.col > 4 && this.getSelectedRangeLast().to.col != GetColFromName("Estado");
                            },
                        },
                        //filter_by_value: {
                        //    // hide the 'Filter by value' list from all columns but the first one
                        //    hidden() {
                        //        return this.getSelectedRangeLast().to.col > 0;
                        //    },
                        //},
                        filter_action_bar: {
                            // hide the 'OK' and 'Cancel' buttons from all columns but the first one
                            hidden() {
                                return this.getSelectedRangeLast().to.col > 4 && this.getSelectedRangeLast().to.col != GetColFromName("Estado");
                            },
                        },

                    },
                },
                licenseKey: 'non-commercial-and-evaluation',
                outsideClickDeselects: false,
               // contextMenu: ['row_above', 'row_below', '---------', 'undo', 'redo', '---------', 'cut', 'copy'],
                language: 'es-MX',
            });

            cargaDatosIniciales();


            //aplica los estilos
            hotStatus.updateSettings({
                cells(row, col) {
                    const cellProperties = {};

                    if (col == 0) {
                        cellProperties.className = 'htCenter negritas';

                    }

                    if (col == GetColFromName("Solicitante")
                        || col == GetColFromName("Aprobación")
                        || col == GetColFromName("Facturación")
                        || col == GetColFromName("Compras")
                        || col == GetColFromName("Controlling")
                        || col == GetColFromName("Ingeniería")
                        || col == GetColFromName("Calidad")
                        || col == GetColFromName("C. MRO")
                        || col == GetColFromName("Ventas")
                        || col == GetColFromName("SCDM")
                    ) {
                        let estatus = hotStatus.getDataAtCell(hotStatus.toVisualRow(row), col + 1); //busca en la col siguiente
                        switch (estatus) {
                            case '@(Portal_2_0.Models.SCMD_solicitud_estatus_asignacion.CERRADA)':
                                cellProperties.className = 'cerrada htCenter negritas';
                                break;
                            case '@(Portal_2_0.Models.SCMD_solicitud_estatus_asignacion.ABIERTA)':
                                cellProperties.className = 'pendiente htCenter negritas';
                                break;
                            case '@(Portal_2_0.Models.SCMD_solicitud_estatus_asignacion.ABIERTA_TIEMPO_EXCEDIDO)':
                                cellProperties.className = 'pendiente-excedido htCenter negritas';
                                break;
                            case '@(Portal_2_0.Models.SCMD_solicitud_estatus_asignacion.RECHAZADA)':
                                cellProperties.className = 'rechazada htCenter negritas';
                                break;
                           case '@(Portal_2_0.Models.SCMD_solicitud_estatus_asignacion.ASIGNACION_INCORRECTA)':
                                cellProperties.className = 'incorrecta htCenter negritas';
                                break;
                            default:
                                cellProperties.className = 'htCenter';
                                break;
                        }
                    }

                    if (col == GetColFromName("Prioridad")
                        || col == 1 // folio
                        || col == GetColFromName("Tipo Solicitud")
                        || col == GetColFromName("Planta")
                        || col == GetColFromName("Nombre Solicitante")
                    ) {
                        let estatus = hotStatus.getDataAtCell(hotStatus.toVisualRow(row), GetColFromName("Prioridad")); //busca en la col siguiente

                        if (estatus == 'Crítico')
                            cellProperties.className += " critico";

                    }

                    //alinea verticalmente
                    cellProperties.className += " htMiddle";

                    return cellProperties;
                },
            });

            //congela la primera columna
            hotStatus.getPlugin('manualColumnFreeze').freezeColumn(1);
            hotStatus.render()
       
        }

        function cargaDatosIniciales() {
            BloqueaPantalla();

            //llamada ajax para obtener el detalle del item  seleccionado
            $.ajax({
                type: 'POST',
                url: '/SCDM_solicitud/CargaEstatus' ,
                data: { estatus: '@(Request.Params["estatus"])', fecha_inicio: '@(fecha_inicio.ToString("dd/MM/yyyy"))', fecha_fin: '@(fecha_fin.ToString("dd/MM/yyyy"))' },
                success: function (data) {
                    try {
                        hotStatus.loadData(data[0]);

                        //obtiene los comentarios
                        hotStatus.updateSettings({
                            comments: true,
                            cell: data[1]
                        })
                    }
                    catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error obteniendo la información: ' + error,
                            confirmButtonText: 'Aceptar',
                        })
                    }
                },
                error: function (errorMsg) {
                    //Execute this function when the request fails
                    Swal.fire({
                        icon: 'error',
                        text: 'Ocurrió un error al obtener la información.',
                    })
                },
                async: true
            });
        }


        function inicializaHandsontable() {
            const container = document.querySelector('#codigo_colores_hot');

            //obtiene el index de la columna con porcentaje
            hot = new Handsontable(container, {
                autoWrapRow: true,
                nestedHeaders: [
                    [{ label: 'Código de Colores', colspan: 2 }],
                    ['Estado de Asignación', 'Color']
                ],
                afterGetColHeader: function (col, TH) {
                    var TR = TH.parentNode;
                    var THEAD = TR.parentNode;
                    var headerLevel = (-1) * THEAD.childNodes.length + Array.prototype.indexOf.call(THEAD.childNodes, TR);

                    function applyClass(elem, className) {
                        if (!Handsontable.dom.hasClass(elem, className)) {
                            Handsontable.dom.addClass(elem, className);
                        }
                    }

                    if (col == -1) {
                        applyClass(TH, 'HTblue');
                    } else if (headerLevel === -2) {
                        applyClass(TH, 'HTblue');
                    } else {
                        applyClass(TH, 'HTblue');
                    }
                },
                data: [
                    ['Asignada (En tiempo)', ''],
                    ['Asignada (Tiempo excedido)', ''],
                    ['Actividad Finalizada', ''],
                    ['Rechazada', ''],
                    ['Asignacón Incorrecta', ''],
                ],
                colWidths: [
                    200, //Folio
                    80, //Folio
                ],
                height: 'auto',
                width: 'auto',
                colHeaders: true,
                autoWrapRow: true,
                readOnly: true,
                autoWrapCol: true,
                disableVisualSelection: true,
                licenseKey: 'non-commercial-and-evaluation'
            });

            //aplica estilo
            hot.setCellMeta(0, 0, 'className', 'negritas');
            hot.setCellMeta(1, 0, 'className', 'negritas');
            hot.setCellMeta(2, 0, 'className', 'negritas');
            hot.setCellMeta(3, 0, 'className', 'negritas');
            hot.setCellMeta(4, 0, 'className', 'negritas');

            hot.setCellMeta(0, 1, 'className', 'pendiente');
            hot.setCellMeta(1, 1, 'className', 'pendiente-excedido');
            hot.setCellMeta(2, 1, 'className', 'cerrada');
            hot.setCellMeta(3, 1, 'className', 'rechazada');
            hot.setCellMeta(4, 1, 'className', 'incorrecta');

        }


        function EnviaBusqueda() {
            $("#buscarForm").submit();
            BloqueaPantalla();
        }
        function GetColFromName(name) {
            // console.log(headers)
            var n_cols = headers.length;
            var i = 1;

            for (i = 1; i <= n_cols; i++) {
                if (headers[i] === undefined) {
                    console.log(headers[i] + ' - ' + name)
                }
                if (name.toLowerCase() == headers[i].toLowerCase()) {
                    return i;
                }
            }
            return -1; //return -1 if nothing can be found
        }


    </script>

}

