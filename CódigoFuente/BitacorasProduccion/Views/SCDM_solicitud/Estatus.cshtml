@using Clases.Util;
@model IEnumerable<Portal_2_0.Models.SCDM_solicitud>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Estatus de Solicitudes de Maestro de Materiales";
    ViewBag.PrimerNivel = "scdm_mm";
    ViewBag.SegundoNivel = "estatus_solicitudes_mm";
    ViewBag.ControllerName = ViewContext.RouteData.Values["controller"];

    ViewBag.nav_style = "nav-sm";

    Clases.Util.MensajesSweetAlert mensajeAlerta = (Clases.Util.MensajesSweetAlert)ViewBag.MensajeAlert;

    //obtiene los filtros
    Portal_2_0.Models.Paginacion paginacionFiltros = (Portal_2_0.Models.Paginacion)ViewBag.Paginacion;

    List<Portal_2_0.Models.SCDM_cat_departamentos_asignacion> departamentos = (List<Portal_2_0.Models.SCDM_cat_departamentos_asignacion>)ViewBag.ListadoDepartamentos;
    List<DateTime> listDiasFestivos = (List<DateTime>)ViewBag.ListDiasFestivos;
}

@section estilos
{
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")

    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">

    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!--Handsontable -->
    <link href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" rel="stylesheet">
    <link href="~/Content/css/HansontableHeaderColors.css" rel="stylesheet" />


    <style>
        .glow {
            color: red;
            animation: glow 0.7s ease-in-out infinite alternate;
            /*background-color: #f7c3bd;*/
            font-weight: bold;
        }

        @@-webkit-keyframes glow {
            from {
                text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 6px #f5a8a8, 0 0 8px #f5a8a8, 0 0 10px #f5a8a8, 0 0 12px #f5a8a8, 0 0 14px #f5a8a8;
            }

            to {
                text-shadow: 0 0 4px #fff, 0 0 6px #faccc6, 0 0 8px #faccc6, 0 0 10px #faccc6, 0 0 12px #faccc6, 0 0 14px #faccc6, 0 0 16px #faccc6;
            }
        }
        .handsontable .negritas {
            font-weight: bold;
            background-color: #ffffff;
        }

        .pendiente {
            background-color: #ffd800;
            font-weight: bold;
        }

        .cerrada {
            background-color: #9ddc82;
            font-weight: bold;
        }

        .rechazada {
            background-color: #f1a097;
            font-weight: bold;
        }

        .incorrecta {
            background-color: #8abded;
            font-weight: bold;
        }

        .handsontable .pendiente {
            background-color: #ffd800;
        }

        .handsontable .cerrada {
            background-color: #9ddc82;
        }
        .handsontable .rechazada {
            background-color: #f1a097;
        }
        .handsontable .incorrecta {
            background-color: #8abded;
        }
    </style>
}

@*Para SweetAlert*@
@if (mensajeAlerta != null)
{
    <input type="hidden" value="@mensajeAlerta.Mensaje" id="mensajeAlert" />
    <input type="hidden" value="@mensajeAlerta.getTipoMensaje()" id="mensajeAlertTipo" />
}


<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            @*Utilizado para mover a la derecha los iconos del card*@
                            <span style="visibility:hidden">_______</span>
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box">
                                    @*<div class="form-group">
                                            @if (User.IsInRole(TipoRoles.SCDM_MM_CREACION_SOLICITUDES) || User.IsInRole(TipoRoles.SCDM_MM_ADMINISTRADOR))
                                            {
                                                <a href="@Url.Action("create", ViewBag.ControllerName)" class="btn btn-success" style="color:white">
                                                    <i class="fa fa-plus-square"></i>
                                                    Crear Nueva Solicitud
                                                </a>
                                            }
                                        </div>
                                        <div class="ln_solid"></div>*@
                                    <div class="form-group">
                                        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "buscarForm", @class = "form-horizontal form-label-left" }))
                                        {
                                            <div class="form-group row">
                                                <label class="control-label col-md-1 col-sm-1" for="id_estatus" style="text-align:right">Estatus:</label>
                                                <div class="col-md-6 col-sm-6 ">
                                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                                        @{string valorEstatus = (Request.QueryString["estatus"] != null ? Request.QueryString["estatus"] : string.Empty);
                                                            Dictionary<string, int> estatusAmountDictionary = (Dictionary<string, int>)ViewBag.estatusAmount;
                                                        }
                                                        @foreach (KeyValuePair<string, string> kvp in (Dictionary<string, string>)ViewBag.estatusMap)
                                                        {
                                                            <label class="btn @(kvp.Key == valorEstatus? "active": string.Empty)" role="button">
                                                                <input type="radio" name="estatus" value="@kvp.Key">@kvp.Value
                                                                <span class="badge  @(kvp.Key == valorEstatus? "bg-red": "bg-secondary")" style="color:white">@estatusAmountDictionary[kvp.Key]</span>
                                                            </label>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="control-label col-md-1 col-sm-1 label-align" for="id_solicitud">Núm Solicitud:</label>
                                                <div class="col-md-2 col-sm-2">
                                                    <input type="text" class="form-control" name="id_solicitud" id="id_solicitud" value="@Request.Params["id_solicitud"]" autocomplete="off">
                                                </div>

                                                <div class="col-md-1 col-sm-1">
                                                    <input type="button" value="borrar" class="btn btn-danger" id="borrarForm" />
                                                </div>
                                                <div class="col-md-1 col-sm-1">
                                                    <input type="submit" value="buscar" class="btn btn-info" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="ln_solid"></div>
                                    <button id="btn-codigo-colores" class="btn btn-info btn float-lg-right">
                                        <svg width="20px" height="20px" viewBox="0 0 73 73" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>design-and-ux/color-theory</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="design-and-ux/color-theory" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="container" transform="translate(2.000000, 2.000000)" fill="#FFFFFF" fill-rule="nonzero" stroke="#878787" stroke-width="2"> <rect id="mask" x="-1" y="-1" width="71" height="71" rx="14"> </rect> </g> <g id="rgb" transform="translate(11.000000, 11.000000)" fill-rule="nonzero"> <path d="M41.1835937,15.234375 C41.1835937,23.6200256 34.3856506,30.4179687 26,30.4179687 C17.6143494,30.4179687 10.8164062,23.6200256 10.8164062,15.234375 C10.8164062,6.84872439 17.6143494,0.05078125 26,0.05078125 C34.3856506,0.05078125 41.1835937,6.84872439 41.1835937,15.234375 Z" id="Shape" fill="#42C0E2"> </path> <path d="M52,34.8280029 C52,43.2136535 45.2020569,50.0115967 36.8164062,50.0115967 C28.4307556,50.0115967 21.6328125,43.2136535 21.6328125,34.8280029 C21.6328125,26.4423523 28.4307556,19.6444092 36.8164062,19.6444092 C45.2020569,19.6444092 52,26.4423523 52,34.8280029 Z" id="Shape" fill="#FFD061"> </path> <path d="M22.4195252,29.9922791 C23.5676574,30.2695922 24.7665711,30.4179687 26,30.4179687 C32.6947937,30.4179687 38.377533,26.0849 40.3968811,20.0700989 C39.2487488,19.7923889 38.0498352,19.6444092 36.8164062,19.6444092 C30.1216125,19.6444092 24.4388733,23.9774781 22.4195252,29.9922791 Z" id="Shape" fill="#49BD90"> </path> <path d="M30.3671875,34.8280029 C30.3671875,43.2136535 23.5692444,50.0115967 15.1835937,50.0115967 C6.79794314,50.0115967 0,43.2136535 0,34.8280029 C0,26.4423523 6.79794314,19.6444092 15.1835937,19.6444092 C23.5692444,19.6444092 30.3671875,26.4423523 30.3671875,34.8280029 Z" id="Shape" fill="#FA70B2"> </path> <path d="M11.6031189,20.0700989 C13.622467,26.0849 19.3052063,30.4179687 26,30.4179687 C27.2334289,30.4179687 28.4323426,30.2695922 29.5804748,29.9922791 C27.5611267,23.9774781 21.8783875,19.6444092 15.1835937,19.6444092 C13.9501648,19.6444092 12.7512512,19.7923889 11.6031189,20.0700989 Z" id="Shape" fill="#AF7BC6"> </path> <path d="M21.6328125,34.8280029 C21.6328125,38.9797668 23.2998657,42.7415467 26,45.4825439 C28.7001343,42.7415467 30.3671875,38.9797668 30.3671875,34.8280029 C30.3671875,30.676239 28.7001343,26.9144592 26,24.1734619 C23.2998657,26.9144592 21.6328125,30.676239 21.6328125,34.8280029 Z" id="Shape" fill="#EF6122"> </path> <path d="M29.5804748,29.9934692 C28.4323426,30.2703857 27.2330322,30.4179687 26,30.4179687 C24.7669678,30.4179687 23.5676574,30.2703857 22.4195252,29.9934692 C23.162201,27.7817078 24.3995972,25.7984619 26,24.1734619 C27.6004028,25.7984619 28.837799,27.7817078 29.5804748,29.9934692 Z" id="Shape" fill="#FFFFFF"> </path> </g> </g> </g></svg>
                                        Código de Colores
                                    </button>
                                    <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.id)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.id_tipo_solicitud)
                                                </th>
                                                <th>
                                                    Planta
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.id_solicitante)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.id_prioridad)
                                                </th>
                                                @foreach (var departamento in departamentos)
                                                {
                                                    <th>
                                                        @departamento.descripcion
                                                    </th>
                                                }
                                                <th>
                                                    @Html.DisplayNameFor(model => model.EstatusSolicitud)
                                                </th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.id)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.SCDM_cat_tipo_solicitud.descripcion)
                                                    </td>
                                                    <td>
                                                        @String.Join(", ", item.SCDM_rel_solicitud_plantas.Select(x => x.plantas.descripcion).Distinct().ToList())
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.empleados.ConcatNombre)
                                                    </td>
                                                    <td class="@(item.id_prioridad == 2? "glow":string.Empty)">
                                                        @Html.DisplayFor(modelItem => item.SCDM_cat_prioridad.descripcion)
                                                    </td>
                                                    @foreach (var departamento in departamentos)
                                                    {
                                                        TimeSpan? tiempoAsignacionAbierta = item.GetTiempoAsignacion(departamento.id, listDiasFestivos);
                                                        TimeSpan? tiempoAsignacionCerrada = null;
                                                        TimeSpan? tiempoAsignacionRechazada = null;
                                                        TimeSpan? tiempoAsignacionIncorrecta = null;
                                                        if (tiempoAsignacionAbierta == null)
                                                        {
                                                            tiempoAsignacionCerrada = item.GetTiempoAsignacionAprobada(departamento.id, listDiasFestivos);
                                                        }
                                                        if (tiempoAsignacionAbierta == null && tiempoAsignacionCerrada == null)
                                                        {
                                                            tiempoAsignacionRechazada = item.GetTiempoAsignacionRechazada(departamento.id, listDiasFestivos);
                                                        }
                                                        if (tiempoAsignacionRechazada == null && tiempoAsignacionAbierta == null && tiempoAsignacionCerrada == null)
                                                        {
                                                            tiempoAsignacionIncorrecta = item.GetTiempoAsignacionIncorrecta(departamento.id, listDiasFestivos);
                                                        }

                                                        <td nowrap class="@(tiempoAsignacionAbierta.HasValue? "pendiente":
                                                            tiempoAsignacionCerrada.HasValue? "cerrada":
                                                            tiempoAsignacionRechazada.HasValue? "rechazada":
                                                            tiempoAsignacionIncorrecta.HasValue? "incorrecta":
                                                            string.Empty)">
                                                            @(tiempoAsignacionAbierta.HasValue? string.Format("{0}h {1}m", (int)tiempoAsignacionAbierta.Value.TotalHours, tiempoAsignacionAbierta.Value.Minutes) :
                                                            tiempoAsignacionCerrada.HasValue ? string.Format("{0}h {1}m", (int)tiempoAsignacionCerrada.Value.TotalHours, tiempoAsignacionCerrada.Value.Minutes) :
                                                            tiempoAsignacionRechazada.HasValue ? string.Format("{0}h {1}m", (int)tiempoAsignacionRechazada.Value.TotalHours, tiempoAsignacionRechazada.Value.Minutes) :
                                                            tiempoAsignacionIncorrecta.HasValue ? string.Format("{0}h {1}m", (int)tiempoAsignacionIncorrecta.Value.TotalHours, tiempoAsignacionIncorrecta.Value.Minutes) :
                                                            "--")
                                                        </td>
                                                    }
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.estatusTexto)
                                                    </td>
                                                    <td nowrap>
                                                        @if (User.IsInRole(TipoRoles.SCDM_MM_ADMINISTRADOR))
                                                        {
                                                            <a href="@Url.Action("AsignarTareas", ViewBag.ControllerName, new { id = item.id })" class="btn btn-success btn-sm" data-toggle="tooltip" data-placement="top" title="Editar Asignaciones">
                                                                <i class="fa-solid fa-user-tag"></i>
                                                            </a>
                                                            <a href="@Url.Action("EditarSolicitud", ViewBag.ControllerName, new { id = item.id, viewUser = (int)Bitacoras.Util.SCDM_tipo_view_edicionENUM.SCDM })" class="btn btn-primary btn-sm" data-toggle="tooltip" data-placement="top" title="Editar/Aprobar">
                                                                <svg width="21px" height="21px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M911.720735 295.765658l-42.761546-42.764618c-20.537092-20.537092-53.844081-20.777705-74.322812-0.329691l-57.726655 57.729726c-9.368551-28.12613-35.62609-48.60486-66.916025-48.60486h-186.224263c-18.070552 0-56.282976-58.602077-118.802438-58.602077H166.156111c-39.030509 0-70.829315 31.740445-70.829316 70.829315v474.085527c0 38.244165 30.534308 69.324204 68.418066 70.647063 0.484298 0 0.903067 0.240613 1.44675 0.240613h630.108243c39.08887 0 70.887677-31.798807 70.887677-70.887676V415.921673l45.894636-45.894636c20.416273-20.388628 20.237093-53.664902-0.361432-74.261379z" fill="#27323A"></path><path d="M819.330443 398.724495L618.68066 599.434687l-51.074472-2.28736-2.288384-51.072423 200.64876-200.683572z" fill="#cdb27a"></path><path d="M478.468779 686.616475c-3.854928-3.854928-10.118035-4.397587-17.163389-2.892476 16.442574-43.242773 41.916841-99.467388 43.00216-103.259859l1.384293-1.44675c8.91497 1.023885 18.729934 2.109204 23.608747 2.59043l0.36348 0.422865 1.322859 51.765594 51.73795 1.203065 0.119794 0.120819a2329.963684 2329.963684 0 0 0 2.76961 23.790999l-1.445726 1.387365c-3.552882 1.082247-59.625962 26.98245-102.686483 43.60318 1.442654-7.108836 0.841634-13.430304-3.013295-17.285232z" fill="#FFFFFF"></path><path d="M181.03214 464.674996v284.096438c0 12.467852-4.940247 22.94527-20.118322 23.066088-13.367847-0.119795-19.331979-10.237829-19.331979-23.728542V274.022429c0-13.55317 11.021102-24.573248 24.574272-24.573247H364.966996c24.151407 0 44.812389 16.864415 63.061097 31.709728 16.89206 13.8245 32.974227 26.892348 55.740317 26.892348h186.223239c13.55317 0 24.574272 11.021102 24.574272 24.574272v10.901307H530.687955c-37.041099 0-68.723183 50.292223-82.512871 50.292223H251.919817c-39.027437-0.001024-70.887677 31.767066-70.887677 70.855936z" fill="#cdb27a"></path><path d="M819.931464 748.10898c0 13.611532-11.079463 24.632633-24.632633 24.632633H223.614507c1.32286-7.10474 3.672677-13.370918 3.672677-21.619339V464.674996c0-13.550098 11.082535-24.601917 24.632633-24.601916h196.255267c23.368135 0 38.96498-14.456237 54.143056-28.490633 7.22863-6.684947 22.224455-20.596477 28.851041-21.80159h126.388405L486.539044 560.830115l0.119794 0.298975-2.950837 2.950837a4.265506 4.265506 0 0 0-1.32286 2.170637l-64.535492 171.798742c-0.360408 0.903067-0.119795 1.926952 0 2.950838 0.240613 1.748796 0.721839 3.373702 1.986337 4.699634 1.085318 0.962452 2.469611 1.686339 3.974723 1.926952 1.206137 0.422865 2.532068 0.601021 3.73411 0.119794l170.959157-65.469275c0.783272-0.17918 1.505111-0.721839 2.167565-1.203065l2.889404-2.831043h0.422865l215.947654-216.039804v285.905643z" fill="#F4CE73"></path><path d="M850.95007 367.134561l-53.362856-53.301422 29.091654-29.119299 53.301422 53.301422z" fill="#FFFFFF"></path></g></svg>
                                                            </a>
                                                        }
                                                        <a href="@Url.Action("Details", ViewBag.ControllerName, new { id = item.id})" class="btn btn-info btn-sm" data-toggle="tooltip" data-placement="top" title="Editar">
                                                            <i class="fa-solid fa-circle-info"></i>
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                </div>
                                <br />
                                @if (Model.Count() > 0)
                                {
                                    <nav id="nav_paginacion" aria-label="...">
                                        @{Html.RenderPartial("_Paginacion", Model);}
                                    </nav>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Finalizar Solicitud -->
<div class="modal fade" id="codigoColoresModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Código de colores</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="col-md-2 col-sm-2">

                </div>
                <div class="col-md-8 col-sm-8">
                    <div id="codigo_colores_hot" class="h"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Aceptar</button>
            </div>

        </div>
    </div>
</div>
@section scripts
{
    <!-- SweetAlert2 -->
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render(Url.Content("~/Scripts/AlertasSweetAlert.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")
    <script src="~/Content/vendors/twbs-toggle-buttons/jquery.twbs-toggle-buttons.min.js"></script>
    <!-- Handsontable-->
    <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/languages/es-MX.js"></script>

    <script>

        $(document).ready(function () {

            //inicializa hansontable
            inicializaHandsontable();

            //inicializa los data table
            var tabla = $('#datatable_1').DataTable({
                "paging": false,
                "ordering": false,
                "searching": false,
                "scrollX": true,
                "info": false
            });

            //inicializa radio toogle
            $(".btn-group-toggle").twbsToggleButtons();

            //detecta el cambio en el radio de estatus
            $('input[type=radio][name=estatus]').change(function () {
                EnviaBusqueda()
            });

            var form = document.getElementById("buscarForm");

            //borra los campos antes de enviarlos
            $("#borrarForm").click(function () {
                $('#id_solicitud').val("");
                form.submit();
            });


            $("#btn-codigo-colores").on("click", function () {
                $('#codigoColoresModal').modal('show');
            });


            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })


        });

        function inicializaHandsontable() {
            const container = document.querySelector('#codigo_colores_hot');

            //obtiene el index de la columna con porcentaje

            hot = new Handsontable(container, {
                autoWrapRow: true,
                nestedHeaders: [
                    [{ label: 'Código de Colores', colspan: 2 }],
                    ['Asignación', 'Color']
                ],
                afterGetColHeader: function (col, TH) {
                    var TR = TH.parentNode;
                    var THEAD = TR.parentNode;
                    var headerLevel = (-1) * THEAD.childNodes.length + Array.prototype.indexOf.call(THEAD.childNodes, TR);

                    function applyClass(elem, className) {
                        if (!Handsontable.dom.hasClass(elem, className)) {
                            Handsontable.dom.addClass(elem, className);
                        }
                    }

                    if (col == -1) {
                        applyClass(TH, 'HTblue');
                    } else if (headerLevel === -2) {
                        applyClass(TH, 'HTblue');
                    } else {
                        applyClass(TH, 'HTblue');
                    }
                },
                data: [
                    ['Asignada', ''],
                    ['Actividad Finalizada', ''],
                    ['Rechazada', ''],
                    ['Asignacón Incorrecta', ''],
                ],
                height: 'auto',
                width: 'auto',
                colHeaders: true,
                autoWrapRow: true,
                readOnly: true,
                autoWrapCol: true,
                disableVisualSelection: true,
                licenseKey: 'non-commercial-and-evaluation'
            });

            //aplica estilo
            hot.setCellMeta(0, 0, 'className', 'negritas');
            hot.setCellMeta(1, 0, 'className', 'negritas');
            hot.setCellMeta(2, 0, 'className', 'negritas');
            hot.setCellMeta(3, 0, 'className', 'negritas');

            hot.setCellMeta(0, 1, 'className', 'pendiente');
            hot.setCellMeta(1, 1, 'className', 'cerrada');
            hot.setCellMeta(2, 1, 'className', 'rechazada');
            hot.setCellMeta(3, 1, 'className', 'incorrecta');

        }
        function EnviaBusqueda() {
            $("#buscarForm").submit();
            BloqueaPantalla();
        }



    </script>

}

