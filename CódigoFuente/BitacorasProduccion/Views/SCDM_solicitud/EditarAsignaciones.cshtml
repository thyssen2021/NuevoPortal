@model Portal_2_0.Models.SCDM_solicitud
@using Clases.Util;

@{
    ViewBag.Title = "Editar Solicitud aSIGNACIONES";
    ViewBag.PrimerNivel = "scdm_mm";
    ViewBag.SegundoNivel = "mis_solicitudes_mm";

    ViewBag.ControllerName = ViewContext.RouteData.Values["controller"];
    Clases.Util.MensajesSweetAlert mensajeAlerta = (Clases.Util.MensajesSweetAlert)ViewBag.MensajeAlert;

    ViewBag.nav_style = "nav-sm";


}

@section estilos
{
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/flat/green.css")" rel="stylesheet">
    <!--Handsontable -->
    <link href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" rel="stylesheet">
    <link href="~/Content/css/HansontableHeaderColors.css" rel="stylesheet" />

    <style>

        dl {
            border: 3px double #ccc;
            padding: 0.5em;
            background-color: #fffdf0
        }

        dt {
            font-weight: bold;
            color: green;
        }

        dd {
            font-weight: bold;
            color: #454545;
        }

        dt::after {
            content: ":";
        }

        .fondo_verde > td {
            background-color: green;
            color: #fffdf0;
            font-weight: bolder;
        }

        .fondo_amarillo > td {
            background-color: orange;
            color: #221f1f;
            font-weight: bolder;
        }

        .fondo_rojo > td {
            background-color: red;
            color: #fffdf0;
            font-weight: bolder;
        }

        input {
            text-align: right;
        }

        /**
        * Accordion example styles
        */

        /**
         * Accordion example styles
         */

        .wf-accordion-group {
            margin-top: 15px;
        }

            /* All elements succeeding an accordion group use margin-top to create white space */
            .wf-accordion-group + * {
                margin-top: 30px;
            }

        /* All accordions have borders… */
        .wf-accordion {
            border-top: 1px solid #bfbfbf;
            border-bottom: 1px solid #bfbfbf;
            border-left: 1px solid #bfbfbf;
            border-right: 1px solid #bfbfbf;
        }

            /* …unless they directly succeed another accordion, in which case we reset the top-border
          to avoid duplicate white space */
            .wf-accordion + .wf-accordion {
                border-top-width: 0;
            }

        .wf-accordion__header {
            color: #616163;
        }

        /* Please note: The trigger element is a <button> create via JS. To achieve consistent aesthetics,
           the native button styles have to be resetted here */
        .wf-accordion__trigger {
            /* baseline resets */
            background: transparent;
            border-width: 0;
            border-radius: 0;
            box-sizing: border-box;
            color: white;
            font-weight: bold;
            cursor: pointer;
            display: inline-block;
            font-size: inherit;
            letter-spacing: inherit;
            line-height: inherit;
            margin: 0;
            padding: 0;
            text-align: left;
            text-decoration: none;
            /* end of baseline resets */
            /* additional styles for the demo */
            display: block;
            padding: 10px 1.25em 10px 8px;
            position: relative;
            width: 100%;
        }

            .wf-accordion__trigger::after {
                content: '';
                border: solid #fff;
                border-width: 0 2px 2px 0;
                height: 0.5em;
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-60%) rotate(45deg);
                width: 0.5em;
            }

            .wf-accordion__trigger[aria-disabled=true] {
                cursor: not-allowed;
                opacity: 0.5;
            }

            .wf-accordion__trigger[aria-expanded=true]::after {
                transform: translateY(-30%) rotate(-135deg);
            }

            .wf-accordion__trigger:hover,
            .wf-accordion__trigger:focus {
                opacity: 0.8;
                /*  background: #f5f5f5;
                color: #161616;*/
            }

                .wf-accordion__trigger:hover::after,
                .wf-accordion__trigger:focus::after {
                    border-color: #fff;
                }

        .wf-accordion__panel {
            background-color: #fff;
            padding: 10px 8px;
        }

            .wf-accordion__panel[aria-hidden=true] {
                display: none;
            }

        .fondo-pendiente {
            background-color: #009ff5;
        }

        .fondo-completado {
            background-color: #009ff5;
        }

        #example {
            width: 100%;
        }

        .alert {
            border-left: 4px solid #ef0101 !important;
            border-top: 1px solid #ef0101 !important;
            border-right: 1px solid #ef0101 !important;
            border-bottom: 1px solid #ef0101 !important;
            background-color: #ef01010d !important;
            margin-bottom: 2px !important;
        }

        .alert-warning {
            border-left: 4px solid #ff9924 !important;
            border-top: 1px solid #ff9924 !important;
            border-right: 1px solid #ff9924 !important;
            border-bottom: 1px solid #ff9924 !important;
            background-color: #ff99240d !important;
            margin-bottom: 2px !important;
            color: dimgrey;
        }


        .alert-warning-content {
            margin: 0;
            font-size: 14px;
            color: #de0000 !important;
        }
    </style>

}

@{Html.RenderPartial("_BlockUI", Model);}

@*Para SweetAlert*@
@if (mensajeAlerta != null)
{
    <input type="hidden" value="@mensajeAlerta.Mensaje" id="mensajeAlert" />
    <input type="hidden" value="@mensajeAlerta.getTipoMensaje()" id="mensajeAlertTipo" />
}

<div class="right_col" role="main">
    <div class="">

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="col-sm-12">
                            <div class="card-box ">
                                <dl class="row">
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.id)</dd>
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_tipo_solicitud)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.SCDM_cat_tipo_solicitud.descripcion)</dd>
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_solicitante)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.ConcatNombre)</dd>
                                    @if (Model.SCDM_rel_solicitud_materiales_solicitados.Count > 0 && (Model.id_tipo_solicitud == 1 || Model.id_tipo_solicitud == 2 || Model.id_tipo_solicitud == 5))
                                    {
                                        <dt class="col-sm-2">Tipo de Materiales</dt>
                                        <dd class="col-sm-2">@String.Join(", ", @Model.SCDM_rel_solicitud_materiales_solicitados.Select(x => x.SCDM_cat_tipo_materiales_solicitud.descripcion).Distinct().ToList())</dd>
                                    }
                                    @if (Model.id_tipo_solicitud == 3)
                                    {
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_tipo_cambio)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.SCDM_cat_tipo_cambio.descripcion)</dd>
                                    }
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_prioridad)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.SCDM_cat_prioridad.descripcion)</dd>
                                    <dt class="col-sm-2">Plantas</dt>
                                    <dd class="col-sm-2">@String.Join(", ", @Model.SCDM_rel_solicitud_plantas.Select(x => x.plantas.descripcion).Distinct().ToList())</dd>
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.descripcion)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.descripcion)</dd>
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.justificacion)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.justificacion)</dd>
                                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.fecha_creacion)</dt>
                                    <dd class="col-sm-2">@Html.DisplayFor(model => model.fecha_creacion)</dd>
                                </dl>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <h4 style="color:#7c7c7c"><b>Asignaciones Activas de la Solicitud</b></h4>
                            </div>
                        </div>

                        <table id="table_asignaciones" class="table table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Departamento</th>
                                    <th>Primario</th>
                                    <th>Fecha Asignación</th>
                                    <th>Tiempo Transcurrido</th>
                                    <th nowrap>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int c = 0; }
                                @foreach (var item in Model.SCDM_solicitud_asignaciones.Where(x => x.fecha_cierre == null && x.fecha_rechazo == null))
                                {
                                    <tr>
                                        <td>@(++c)</td>
                                        <td>@Html.DisplayFor(model => item.SCDM_cat_departamentos_asignacion.descripcion)</td>
                                        <td>@Html.DisplayFor(model => item.empleados.ConcatNombre)</td>
                                        <td>@Html.DisplayFor(model => item.fecha_asignacion)</td>
                                        @{TimeSpan? tiempo = Model.GetTiempoAsignacion(item.id_departamento_asignacion);}
                                        <td nowrap class="@(tiempo.HasValue? "pendiente":string.Empty)">
                                            @(tiempo.HasValue? string.Format("{0}h {1}m", (int)tiempo.Value.TotalHours, tiempo.Value.Minutes) : "--")
                                        </td>
                                        <td><button onclick="EliminaAsignacion(@item.id)" class="btn btn-danger btn-sm"><i class="fa-solid fa-ban"></i> Elimina Asignación</button></td>
                                    </tr>
                                }

                            </tbody>

                        </table>

                        <p>
                            <br />
                            <a href="@Url.Action("AsignarTareas", ViewBag.ControllerName, new { id = Model.id })" class="btn btn-success float-lg-right" style="color:white">
                                <i class="fa-solid fa-user-tag"></i>
                                Asignar
                            </a>
                        </p>



                    </div>
                </div>
                <div>
                    <br />
                    <a href="@Url.Action("Index", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Modal Rechazar Departamento -->
@*<div class="modal fade" id="modalRechazarDepartamento" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Rechazar</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("RechazarSolicitudDepartamento", null, FormMethod.Post, new { }))
                {
                    <div class="modal-body">
                        <div class="form-group row">
                            <h6>¿Realmente desea rechazar esta solicitud?</h6>
                            <br />
                            <div class="col-md-12">
                                <h6>Razón de rechazo:</h6>
                            </div>
                            <div class="col-md-12">

                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.id)

                                <div class="form-group row">
                                    <div class="col-md-12">
                                        @Html.DropDownList("id_motivo_rechazo_departamento", (SelectList)ViewBag.id_motivo_rechazo, null, htmlAttributes: new { @class = "select2bs4 col-md-12", @style = "width:100%", @required = "required" })
                                        <span class="field-validation-valid text-danger" data-valmsg-for="id_motivo_rechazo_departamento" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <h6>Comentario:</h6>
                                </div>

                                @Html.TextAreaFor(model => model.comentario_rechazo_departamento, new { @class = "form-control", @rows = "4", @autocomplete = "off", @required = "required" })
                                @Html.ValidationMessageFor(model => model.comentario_rechazo_departamento, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-warning">Rechazar</button>
                    </div>
                }
            </div>
        </div>
    </div>*@




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/jquery-iu/jquery-ui.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <!-- SweetAlert2 (css incluido) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.all.min.js" integrity="sha512-/iBgV43zPirSC0tue+PT/1VHGs7En24twBmT+sVMgn9PTaOpKfbgIyL5YsGKlbAIxcwz9S8W/YEnYjpIYj2Axw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    @Scripts.Render(Url.Content("~/Scripts/AlertasSweetAlert.js"))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")


    <script>
        //variable para saber si ha cambiado el formulario y asi no se detenga por doble submit
        var documento_soporte_cambios = 1;

        $(document).ready(function () {

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            //inicializa icheck
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });

            // DataTable
            table = $('#table_asignaciones').DataTable({

            });


            //$("#btn-finalizar-solicitud").on("click", function () {
            //    $('#modalFinalizar').modal('show');
            //});



            $.unblockUI();
        });

        function EliminaAsignacion(id) {
            Swal.fire({
                title: "¿Estás seguro?",
                text: "Se eliminará este departamento de la lista de asignaciones.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Continuar",
                cancellButtonText: "Cancelar",
            }).then((result) => {
                if (result.isConfirmed) {

                    $.ajax({
                        type: 'POST',
                        url: '/SCDM_solicitud/eliminaAsignacion',
                        data: { id: id },
                        success: function (data) {
                            try {

                                if (data[0].correcto == true)
                                    Swal.fire({
                                        title: "¡Borrado!",
                                        text: "Se ha borrado la solicitud de la lista de asiganciones:" + id,
                                        icon: "success"
                                    });
                            }
                            catch (error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Ocurrió un error obteniendo la información: ' + error,
                                    confirmButtonText: 'Aceptar',
                                })
                            }
                        },
                        error: function (textStatus, errorThrown) {
                            //en caso de error en la llamada ajax
                            Swal.fire({
                                icon: 'error',
                                title: 'Ocurrió un error',
                                text: 'Intente nuevamente.'
                            })
                        },
                        async: true
                    });



                }
            });
        }

    </script>

}
