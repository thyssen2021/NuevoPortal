@model List<Portal_2_0.Models.BG_Forecast_item>
@using Portal_2_0.Models

@{
    ViewBag.Title = "Editar Reporte de Forecast";
    ViewBag.PrimerNivel = "budget_forecast";
    ViewBag.SegundoNivel = "listado_forecast";
    ViewBag.ControllerName = "BG_Forecast_reporte";

    string id = ViewContext.RouteData.Values["id"].ToString();

    List<BG_IHS_item> vehicleListIHS = (List<BG_IHS_item>)ViewBag.vehicleListIHS;
    List<BG_IHS_combinacion> vehicleListCombinacion = (List<BG_IHS_combinacion>)ViewBag.vehicleListCombinacion;
    List<BG_IHS_rel_division> vehicleListDivision = (List<BG_IHS_rel_division>)ViewBag.vehicleListDivision;

}

@section estilos
{
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")
    <!--fixed columns css-->
    <link href="@Url.Content("~/Content/vendors/datatables.net-fixedcolumns/dataTables.fixedColumns.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">

    <style>
        .numero-positivo::placeholder {
            color: #c8c8c8;
        }
    </style>
}

@{Html.RenderPartial("_HeaderLoading");}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>@ViewBag.Title</h3>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            @*Utilizado para mover a la derecha los iconos del card*@
                            <span style="visibility:hidden">_______</span>
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box ">
                                    <div class="form-group">
                                        <div class="form-group">
                                            <a href="@Url.Action("ReemplazarReporte", ViewBag.ControllerName, new { id = id})" class="btn btn-info float-left">
                                                <i class="fa-solid fa-arrow-right-arrow-left"></i>
                                                Reemplazar Reporte
                                            </a>
                                            <button type="button" class="btn btn-success float-right" onclick="BuscaReferenciasIHS()">
                                                <i class="fa-solid fa-rotate-right"></i>
                                                Buscar referencias IHS Autom&aacute;ticamente
                                            </button>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", @id = "formulario" }))
                                        {
                                            @Html.AntiForgeryToken()

                                            if (!Html.ViewData.ModelState.IsValid)
                                            {
                                                <div class="alert alert-danger" role="alert">
                                                    @Html.ValidationSummary("", "Advertencia:")
                                                </div>
                                            }

                                            foreach (var item in Model)
                                            {
                                                int index = Model.IndexOf(item);
                                                @Html.HiddenFor(modelItem => Model[index].id)
                                                @Html.HiddenFor(modelItem => Model[index].id_bg_forecast_reporte)
                                                @Html.HiddenFor(modelItem => Model[index].pos)
                                                @Html.HiddenFor(modelItem => Model[index].cat_1)
                                                @Html.HiddenFor(modelItem => Model[index].cat_3)
                                                @Html.HiddenFor(modelItem => Model[index].cat_4)

                                                //temporal
                                                @Html.HiddenFor(modelItem => Model[index].id_ihs_combinacion)
                                                @Html.HiddenFor(modelItem => Model[index].id_ihs_item)
                                                @Html.HiddenFor(modelItem => Model[index].id_ihs_rel_division)

                                            }
                                            <table id="datatable_1" class="table data-table table-striped table-bordered nowrap" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().pos)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().vehicle)
                                                        </th>
                                                        <th>
                                                            IHS Asociado
                                                        </th>
                                                        <th>
                                                            IHS Asociado (Tipo)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().business_and_plant)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().vehicle)
                                                        </th>

                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().cat_2)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().calculo_activo)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().sap_invoice_code)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().invoiced_to)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().number_sap_client)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().shipped_to)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().own_cm)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().route)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().plant)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().external_processor)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().mill)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().sap_master_coil)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().part_description)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().part_number)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().production_line)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().parts_auto)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().strokes_auto)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().material_type)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().shape)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().initial_weight_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().net_weight_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().scrap_consolidation)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().ventas_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().material_cost_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().cost_of_outside_processor)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().additional_material_cost_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().outgoing_freight_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().freights_income)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().outgoing_freight)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().freights_income_usd_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().maniobras_usd_part)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.FirstOrDefault().customs_expenses)
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model)
                                                    {
                                                        int index = Model.IndexOf(item);

                                                        <tr>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.pos)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.vehicle)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ElementoIHS.descripcion)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ElementoIHS.descripcionTipo)
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].business_and_plant, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "30" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].business_and_plant, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].vehicle, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "150" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].vehicle, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].cat_2, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "20" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].cat_2, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].calculo_activo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].calculo_activo, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].sap_invoice_code, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "25" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].sap_invoice_code, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].invoiced_to, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].invoiced_to, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].number_sap_client, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "8" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].number_sap_client, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].shipped_to, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].shipped_to, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].own_cm, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "5" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].own_cm, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].route, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "25" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].route, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].plant, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "4" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].plant, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].external_processor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "25" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].external_processor, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].mill, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].mill, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].sap_master_coil, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "12" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].sap_master_coil, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].part_description, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].part_description, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].part_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].part_number, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].production_line, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "15" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].production_line, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].parts_auto, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].parts_auto, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].strokes_auto, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].strokes_auto, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].material_type, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "20" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].material_type, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].shape, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "5" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].shape, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].initial_weight_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].initial_weight_part, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].net_weight_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].net_weight_part, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].scrap_consolidation, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].scrap_consolidation, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].ventas_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].ventas_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].material_cost_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].material_cost_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].cost_of_outside_processor, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].cost_of_outside_processor, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].additional_material_cost_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].additional_material_cost_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].outgoing_freight_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].outgoing_freight_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].freights_income, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].freights_income, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                @Html.EditorFor(modelItem => Model[index].outgoing_freight, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = "100" } })
                                                                @Html.ValidationMessageFor(modelItem => Model[index].outgoing_freight, "", new { @class = "text-danger" })
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].freights_income_usd_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].freights_income_usd_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].maniobras_usd_part, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].maniobras_usd_part, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="item form-group">
                                                                    <label class="col-form-label col-md-1 col-sm-1 label-align">$</label>
                                                                    <div class="col-md-11 col-sm-11">
                                                                        @Html.EditorFor(modelItem => Model[index].customs_expenses, new { htmlAttributes = new { @class = "form-control decimal", @autocomplete = "off" } })
                                                                        @Html.ValidationMessageFor(modelItem => Model[index].customs_expenses, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                            </table>

                                            <br />
                                            <div class="form-group">
                                                <div>
                                                    <input id="enviar-btn" type="button" value="Guardar Cambios" class="btn btn-success btn-lg float-right" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <br />
                    <a href="@Url.Action("Index", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/dataTables_js")
    <!-- SweetAlert2 -->
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/inputmask/inputmask.extensions.js"))


    <script>
        $(document).ready(function () {

            //inicializa los data table
            var tabla = $('.data-table').removeAttr('width').DataTable({
                "paging": true,
                "ordering": false,
                "searching": true,
                "scrollX": true,
                "info": true,
                "pageLenght": 25,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    { width: 300, targets: 2 }, //business % plant
                    { width: 550, targets: 3 }, //vehicle
                    { width: 600, targets: 4 }, //IHS asociado
                    { width: 200, targets: 5 },  //po in hand
                    { width: 150, targets: 7 }, //sap invoice code
                    { width: 400, targets: 8 }, //invoiced to
                    { width: 400, targets: 10 }, //shipped to
                    { width: 100, targets: 11 }, //cm/own
                    { width: 200, targets: 12 }, //route
                    { width: 100, targets: 13 }, //plant
                    { width: 350, targets: 15 }, //mill
                    { width: 150, targets: 16 }, //sap master coil
                    { width: 450, targets: 17 }, //part description
                    { width: 350, targets: 18 }, //part number
                    { width: 200, targets: 19 }, //production line
                    { width: 200, targets: 22 }, //material type
                    { width: 100, targets: 23 }, //shape
                    { width: 150, targets: 27 }, //ventas/part
                    { width: 400, targets: 32 }, //freights income
                    { width: 400, targets: 33 }, //outgoing freights
                ],
            });


            //$('form').submit(function () {
            //    var data = $(this).serialize();
            //    var data_table = tabla.$('hidden,input, select').serialize();

            //    data.push(data_table);

            //    $(this).append(data);
            //    //$(this).append('--------------------------------------------------');
            //    //$(this).append(tabla.$('hidden,input, select').serialize())
            //    return true;
            //});

            $('#enviar-btn').click(function () {
                var data = $('#formulario').serializeArray();
                var data_table = tabla.$('input, select').serializeArray();

                var dataUnion = data.concat(data_table);

                $.ajax({
                    type: 'POST',
                    url: this.action,
                    data: dataUnion,
                    dataType: 'json',
                    success: function (data) {
                        try {
                            //convierte la respuesta en archivo json
                            let estatus = data[0].status;

                            //verifica si se leyó correctamente el archivo xlsx
                            if (estatus == "ERROR") {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Ocurrió un error obteniendo la información: ' + data[0].value,
                                    confirmButtonText: 'Aceptar',
                                })
                            } else if (estatus == "OK") {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Mensaje',
                                    text: data[0].value,
                                    confirmButtonText: 'Aceptar',
                                })
                            }

                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Ocurrió un error obteniendo la información: ' + error,
                                confirmButtonText: 'Aceptar',
                            })
                        }

                    },
                    error: function (textStatus, errorThrown) {
                        //en caso de error en la llamada ajax
                        Swal.fire({
                            icon: 'error',
                            title: 'Ocurrió un error: ' + errorThrown,
                            text: 'Intente nuevamente.'
                        })
                    },
                    async: true
                });

                return false;
            });

            //inicializa input mask
            $('.decimal').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 8, 'digitsOptional': true, 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true });


        });

         function BuscaReferenciasIHS() {

            let mensaje = "Se buscarán referencias de IHS automáticamente para este reporte. Al dar clic en 'Continuar' se perderán los datos no guardados.";


            Swal.fire({
                title: 'Mensaje',
                html: mensaje+"<br><br><b>¿Desea continuar?</b>",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Continuar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */

                if (result.isConfirmed) {
                    BloqueaPantalla();
                    window.location.replace('/BG_Forecast_reporte/ActualizaReferencias/'+@id);
                }
            });

        }

        //agranda el tamaño de la barra
        window.onload = function () {
            document.getElementById('menu_toggle').click();
            $('#loading').hide();
        }

        $(window).resize(function () {

            console.log('entra resize')
            table_doc = $('#datatable_1').DataTable();
            table_doc.columns.adjust();

        });

        // Warning
        $(window).on('beforeunload', function () {
            return "Any changes will be lost";
        });

    </script>

}
