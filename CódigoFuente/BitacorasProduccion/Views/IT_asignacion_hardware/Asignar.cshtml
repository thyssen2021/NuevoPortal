@model Portal_2_0.Models.IT_asignacion_hardware

@{
    //obtiene el tipo de harware a asignar
    Portal_2_0.Models.IT_inventory_hardware_type tipoHardware = (Portal_2_0.Models.IT_inventory_hardware_type)ViewBag.TipoHardware;

    ViewBag.Title = "Crear Asignación de Hardware (" + tipoHardware.descripcion + ")";
    ViewBag.PrimerNivel = "sistemas";
    ViewBag.SegundoNivel = "it_asignacion_hardware";
    ViewBag.ControllerName = "IT_asignacion_hardware";

}

@section estilos
{

    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">

    <style>

        dl {
            border: 3px double #ccc;
            padding: 0.5em;
            background-color: #fffdf0
        }

        dt {
            font-weight: bold;
            color: green;
        }

        dd {
            font-weight: bold;
            color: #454545;
        }

        dt::after {
            content: ":";
        }
    </style>
}

<div class="right_col" role="main">
    <div class="">

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="form-group row">
                            <span style="color:black"><b>DATOS DEL EMPLEADO</b></span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box ">
                                    <dl class="row">
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.nombre)</dt>
                                        <dd class="col-sm-6">@Html.DisplayFor(model => model.empleados.ConcatNombre)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.numeroEmpleado)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.numeroEmpleado)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.C8ID)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.C8ID)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.correo)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.correo)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.planta_clave)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.plantas.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.id_area)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.Area.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.puesto)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.puesto1.descripcion)</dd>
                                        @foreach (var linea in Model.empleados.IT_asignacion_cellular_line.Where(x => x.es_asignacion_actual == true))
                                        {
                                            <dt class="col-sm-2">@Html.DisplayNameFor(model => linea.IT_inventory_cellular_line.numero_celular)</dt>
                                            <dd class="col-sm-2">@Html.DisplayFor(model => linea.IT_inventory_cellular_line.numero_celular)</dd>
                                        }
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.activo)</dt>
                                        <dd class="col-sm-2">
                                            @if (Model.empleados.activo.HasValue && Model.empleados.activo.Value)
                                            {
                                                <span>Activo</span>
                                            }
                                            else
                                            {
                                                <span>Inactivo</span>
                                            }
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <div class="ln_solid"></div>

                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()

                            @Html.HiddenFor(model => model.id_empleado)
                            @Html.HiddenFor(model => model.id_sistemas)
                            @Html.HiddenFor(model => model.id_responsable_principal)

                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            <div id="aviso" class="alert alert-warning" role="alert" style="color:#454545; display:none">
                                <i class="fa-solid fa-warning"></i> Este equipo ya se encuentra asociado a otro usuario. La asignaci&oacute;n se anexar&aacute; a la responsiva actual.
                            </div>

                            <div id="aviso_nuevo_responsable" class="alert alert-warning" role="alert" style="color:#454545; display:none">
                                <i class="fa-solid fa-warning"></i> Actualmente este equipo tiene una responsiva activa, pero el responsable principal ya no está asociado a esta.
                                Al continuar (Si se trata de una asignación actual), se crear&aacute; una nueva responsiva para todos los usuarios asociados actualmente a este equipo, con este usuario como Responsable Principal.
                            </div>

                            <div class="form-group row">
                                <span style="color:black"><b>INFORMACI&Oacute;N GENERAL</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_sistemas, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados2.ConcatNombre)" readonly />
                                </div>
                                @Html.LabelFor(model => model.fecha_asignacion, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-2 col-sm-2 ">
                                    @Html.EditorFor(model => model.fecha_asignacion, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_empleado, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input id="empleado" type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados.ConcatNombre)" readonly />
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_responsable_principal, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input id="responsable" type="text" class="form-control" value="PENDIENTE" readonly />
                                </div>
                            </div>

                            <div class="item form-group">
                                <label class="control-label col-md-2 col-sm-2" for="tipo_hardware" style="text-align:right">Type:</label>
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.DropDownList("tipo_hardware", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.tipo_hardware, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            if (tipoHardware.descripcion == Bitacoras.Util.IT_Tipos_Hardware.SMARTPHONE)
                            {
                                <div class="item form-group">
                                    @Html.LabelFor(model => model.id_inventory_cellular_line, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                    <div class="col-md-6 col-sm-6 ">
                                        @Html.DropDownList("id_inventory_cellular_line", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.id_inventory_cellular_line, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="item form-group">

                                @Html.LabelFor(model => model.id_it_inventory_item, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    @Html.DropDownList("id_it_inventory_item", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @required = "required"  })
                                    @Html.ValidationMessageFor(model => model.id_it_inventory_item, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 col-sm-1">
                                    <button type="button" id="btn-info-cell" class="btn btn-primary btn-sm" style="@(Model.id_it_inventory_item>0?"display:block":"display:none")"> <i class="fa-solid fa-eye"></i></button>
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.es_asignacion_actual, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    @Html.EditorFor(model => model.es_asignacion_actual, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="button" class="btn btn-success float-right" onclick="showDialog()"><i class="fa-regular fa-floppy-disk"></i> Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <div class="col-md-12 col-sm-12">
                        <a href="@Url.Action( "ListadoAsignaciones", ViewBag.ControllerName, new { id = Model.id_empleado })" class="btn btn-round btn-info btm-sm" title="Volver">
                            <i class="fa fa-arrow-circle-left"></i> Volver al listado
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render(Url.Content("~/Content/vendors/jquery-iu/jquery-ui.min.js"))
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    <script>
        $(document).ready(function () {
            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });

            $('input').on('ifChecked', function (event) {
                $("#@Html.IdFor(model => model.id_it_inventory_item)").change();
            });

            $('input').on('ifUnchecked', function (event) {
                $('#aviso').hide(600);
                $('#aviso_nuevo_responsable').hide(600);
                $('#responsable').val($('#empleado').val());
            });

            //funcion para aactualizar el combo de descripcion de hardware
            $("#@Html.IdFor(model => model.tipo_hardware)").change(function () {
                //llamada ajax para obtener los items disponibles
                $.ajax({
                    type: 'POST',
                    url: '/Combos/obtieneDescripcionInventoryItem',
                    data: { id_tipo_hardware: $(this).val() },
                    success: function (data) {
                        console.log(data);
                        populateDropdown($("#id_it_inventory_item"), data);
                        //funcion para comprobar si alguién ya esta asignado al harware
                        $("#@Html.IdFor(model => model.id_it_inventory_item)").change();
                    },
                    async: false
                });
            });

            //funcion para comprobar si alguién ya esta asignado al harware
            $("#@Html.IdFor(model => model.id_it_inventory_item)").change(function () {

                //llamada ajax para obtener el detalle del item  seleccionado
                $.ajax({
                    type: 'POST',
                    url: '/Combos/InventoryItemDetails',
                    data: { id: $(this).val() },
                    success: function (data) {
                        try {

                            tieneUsuario = data[0].existe;
                            if (data[0].existe == true && data[0].id_responsable != "0") { //existe y hay una asignación actual

                                $('#aviso').show(600);
                                $('#aviso_nuevo_responsable').hide(600);
                                $('#responsable').val(data[0].nombre_responsable);
                            } else if (data[0].existe == true && data[0].id_responsable == "0") {

                                $('#aviso_nuevo_responsable').show(600);
                                $('#aviso').hide(600);
                                $('#responsable').val($('#empleado').val());

                            } else{ //no existe asignacion asociada al item

                                $('#aviso').hide(600);
                                $('#aviso_nuevo_responsable').hide(600);
                                $('#responsable').val($('#empleado').val());
                            }

                        }
                        catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Ocurrió un error obteniendo la información: ' + error,
                                confirmButtonText: 'Aceptar',
                            })
                        }
                    },
                    async: false
                });

            });

            $("#@Html.IdFor(model => model.id_it_inventory_item)").change();

            //activa desactiva info_device
            $("#@Html.IdFor(model => model.id_it_inventory_item)").change(function () {
                verificaInfo();
            });

            //muestra el modal con la info
            $("#btn-info-cell").click(function () {
                var id_cel = $("#@Html.IdFor(model => model.id_it_inventory_item) option:selected").val();
                window.open('/IT_Inventory_items/Details/'+id_cel+'', 'popup', "width=" + screen.width *.80 + ",height=" + screen.height *.80 + "");
            });
        });

        function verificaInfo() {
            var id_cel = $("#@Html.IdFor(model => model.id_it_inventory_item) option:selected").val();
            //si material esta vacia
            if (id_cel == "") {
                $("#btn-info-cell").prop("disabled", true);
                $("#btn-info-cell").hide('explode', 400);
            }
            else {
                $("#btn-info-cell").prop("disabled", false);
                $("#btn-info-cell").show('explode', 350);

            }
        }

        function showDialog(text) {

            Swal.fire({
                title: 'Confirmación',
                text: "¿Realmente desea asignar este equipo al usuario seleccionado?",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Continuar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */

                if (result.isConfirmed) {
                    /*  Swal.fire('Saved!', '', 'success')*/
                    $('#formulario').submit();
                } else if (result.isDismissed) {
                    /*Swal.fire('Los cambios no han sido guardados.', '', 'info')*/
                }
            });

        }

        //completa el selec con los datos recibidos
        function populateDropdown(select, data) {

            select.html('');
            $.each(data, function (id, option) {

                select.append($('<option></option>').val(option.value).html(option.name));
            });
        }
        window.onload = function () {
            clicMenu(1);
        }

    </script>
}
