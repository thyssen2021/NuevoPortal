@model Portal_2_0.Models.IT_asignacion_hardware

@{
    ViewBag.Title = "Cargar Responsiva";
    ViewBag.PrimerNivel = "sistemas";
    ViewBag.SegundoNivel = "it_asignacion_hardware";
    ViewBag.ControllerName = "IT_asignacion_hardware";
}

@section estilos
{

    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">

    <style>

        dl {
            border: 3px double #ccc;
            padding: 0.5em;
            background-color: #fffdf0
        }

        dt {
            font-weight: bold;
            color: green;
        }

        dd {
            font-weight: bold;
            color: #454545;
        }

        dt::after {
            content: ":";
        }
    </style>
}

<div class="right_col" role="main">
    <div class="">

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="form-group row">
                            <span style="color:black"><b>DATOS DEL EMPLEADO</b></span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box ">
                                    <dl class="row">
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.nombre)</dt>
                                        <dd class="col-sm-6">@Html.DisplayFor(model => model.empleados.ConcatNombre)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.numeroEmpleado)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.numeroEmpleado)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.C8ID)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.C8ID)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.correo)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.correo)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.planta_clave)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.plantas.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.id_area)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.Area.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.puesto)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.empleados.puesto1.descripcion)</dd>
                                        @foreach (var linea in Model.empleados.GetIT_Inventory_Cellular_LinesActivas())
                                        {
                                            <dt class="col-sm-2">@Html.DisplayNameFor(model => linea.numero_celular)</dt>
                                            <dd class="col-sm-2">@Html.DisplayFor(model => linea.GetPhoneNumberFormat)</dd>
                                        }
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.empleados.activo)</dt>
                                        <dd class="col-sm-2">
                                            @if (Model.empleados.activo.HasValue && Model.empleados.activo.Value)
                                            {
                                                <span>Activo</span>
                                            }
                                            else
                                            {
                                                <span>Inactivo</span>
                                            }
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <div class="ln_solid"></div>

                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()

                            @Html.HiddenFor(model => model.id)
                            @Html.HiddenFor(model => model.id_empleado)
                            @Html.HiddenFor(model => model.id_sistemas)
                            @Html.HiddenFor(model => model.es_asignacion_actual)
                            @Html.HiddenFor(model => model.id_responsable_principal)

                            <input type="hidden" name="cambio_documento_soporte" id="cambio_documento" value="0" />

                            <div class="form-group row">
                                <span style="color:black"><b>INFORMACI&Oacute;N GENERAL</b></span>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.fecha_asignacion, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-2 col-sm-2 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.fecha_asignacion)" readonly />
                                </div>
                                @Html.LabelFor(model => model.es_asignacion_actual, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-2 col-sm-2 ">
                                    <input type="text" class="form-control" value="@(Model.es_asignacion_actual? "Sí": "No")" readonly />
                                </div>

                                @Html.LabelFor(model => model.fecha_desasignacion, new { @class = "col-form-label col-md-2 col-sm-2 label-align" })
                                <div class="col-md-2 col-sm-2 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.fecha_desasignacion)" readonly />
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_sistemas, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados2.ConcatNombre)" readonly />
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_empleado, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados.ConcatNombre)" readonly />
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_responsable_principal, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-6 col-sm-6 ">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados1.ConcatNombre)" readonly />
                                </div>
                            </div>

                            if (Model.id_cellular_line.HasValue)
                            {
                                <div class="item form-group">
                                    @Html.LabelFor(model => model.id_cellular_line, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                    <div class="col-md-6 col-sm-6 ">
                                        <input type="text" class="form-control" value="@Html.DisplayFor(model => model.IT_inventory_cellular_line.ConcatDetalles)" readonly />
                                    </div>
                                </div>
                            }

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>LISTADO HARDWARE</b></span>
                            </div>

                            foreach (var item in Model.IT_asignacion_hardware_rel_items)
                            {
                                var generic = item.GetGenericObject();



                                <div class="item form-group">
                                    <label class="col-form-label col-md-1 col-sm-1 label-align">Origen</label>
                                    <div class="col-md-1 col-sm-1 ">
                                        <input type="text" class="form-control" value="@(item.EsInventario()?"Inventario":"Genérico")" readonly />
                                    </div>
                                    <label class="col-form-label col-md-1 col-sm-1 label-align">Tipo</label>
                                    <div class="col-md-2 col-sm-2 ">
                                        <input type="text" class="form-control" value="@generic.IT_inventory_hardware_type.descripcion" readonly />
                                    </div>
                                    <label class="col-form-label col-md-1 col-sm-1 label-align">Hardware</label>
                                    <div class="col-md-4 col-sm-4 ">
                                        <input type="text" class="form-control" value="@generic.ConcatInfoGeneral" readonly />
                                    </div>
                                    <div class="col-md-1 col-sm-1">
                                        <button type="button" onclick="MuestraDetalles(@Convert.ToInt32(item.EsInventario()), @generic.id)" class="btn btn-primary btn-sm" style="@(generic.id>0?"display:block":"display:none")" title="Ver Detalles"> <i class="fa-solid fa-eye"></i></button>
                                    </div>
                                </div>

                                <div class="item form-group">
                                    <label class="col-form-label col-md-1 col-sm-1 label-align">Comentario</label>
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => item.comments, new { @class = "form-control", @rows = "2", @autocomplete = "off", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => item.comments, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>RESPONSIVA</b></span>
                            </div>

                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            if (Model != null && Model.id_biblioteca_digital > 0)
                            {
                                <div class="form-group row" id="div_document_support_info">
                                    @Html.LabelFor(model => model.PostedFileResponsiva, new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        <input type="text" class="form-control col-md-12" style="text-align: right;" value="@Model.biblioteca_digital.Nombre" readonly>
                                    </div>
                                    <div class="col-md-4">
                                        <a href="@Url.Action("DownloadFile","Combos", new { idDocumento = Model.id_biblioteca_digital})" class="btn btn-success btm-sm" title="Descargar">
                                            <i class="fa fa-download"></i>
                                        </a>
                                        <a href="@Url.Action("DownloadFile","Combos", new { idDocumento = Model.id_biblioteca_digital, inline=true})" class="btn btn-info btm-sm" target="_blank" title="Ver">
                                            <i class="fa-regular fa-eye"></i>
                                        </a>
                                        <a onclick="muestraFileInput()" class="btn btn-danger btm-sm" title="Reemplazar" style="color:white">
                                            <i class="fa fa-close"></i>
                                        </a>
                                    </div>

                                </div>
                            }

                            <div class="form-group row" id="div_document_support_input" style="@(Model.id_biblioteca_digital.HasValue ? "display:none" : "" )">
                                @Html.LabelFor(model => model.id_biblioteca_digital, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileResponsiva, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml", @required = "required" })
                                            <label class="custom-file-label" for="PostedFileSoporte" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileResponsiva, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <div class="input-group">
                                        @if (Model.id_biblioteca_digital.HasValue)
                                        {
                                            <a onclick="ocultaFileInput()" class="btn btn-warning btm-sm" title="Deshacer" style="color:white">
                                                <i class="fa fa-refresh"></i>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="ln_solid"></div>

                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button id="btn-submit" type="button" class="btn btn-success float-right" style="display: @(Model.id_biblioteca_digital>0? "none":"block")" onclick="showDialog()"><i class="fa-regular fa-floppy-disk"></i> Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <div class="col-md-12 col-sm-12">
                        <a href="@Url.Action( "ListadoAsignaciones", ViewBag.ControllerName, new { id = Model.id_empleado })" class="btn btn-round btn-info btm-sm" title="Volver">
                            <i class="fa fa-arrow-circle-left"></i> Volver al listado
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render(Url.Content("~/Content/vendors/jquery-iu/jquery-ui.min.js"))
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/bootstrap/site/docs/4.3/assets/js/vendor/bs-custom-file-input.min.js"))
    <script>
        $(document).ready(function () {
            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            //inicializa en input file
            bsCustomFileInput.init()

            //aumenta en uso cada vez que se hace un cambio en el archivo de soporte
            $("#@Html.IdFor(model => model.PostedFileResponsiva)").on("change", function () {
                document.getElementById('cambio_documento').value = ++documento_soporte_cambios;
            });

           
        });

        function MuestraDetalles(inventario, id) {
            if (inventario) {
                window.open('/IT_Inventory_items/Details/' + id + '', 'popup', "width=" + screen.width * .80 + ",height=" + screen.height * .80 + "");
            } else { //es generico
                window.open('/IT_Inventory_items_genericos/Details/' + id + '', 'popup', "width=" + screen.width * .80 + ",height=" + screen.height * .80 + "");
            }
        }

        //variable para saber si ha cambiado el formulario y asi no se detenga por doble submit
        var documento_soporte_cambios = 1;

        function showDialog(text) {

            Swal.fire({
                title: 'Confirmación',
                html: "La responsiva seleccionada se asociará a la asignación actual. <br>¿Desea continuar?",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Continuar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */

                if (result.isConfirmed) {
                    /*  Swal.fire('Saved!', '', 'success')*/
                    $('#formulario').submit();
                } else if (result.isDismissed) {
                    /*Swal.fire('Los cambios no han sido guardados.', '', 'info')*/
                }
            });

    }

    //muestra el formulario de carga de archivo
    function muestraFileInput() {
        $("#div_document_support_info").hide('clip',150, function () {
            $("#@Html.IdFor(model => model.PostedFileResponsiva)").val('');
            $('#@Html.IdFor(model => model.PostedFileResponsiva)').next('label').html('Seleccione un archivo...');
        });
        $("#div_document_support_input").show('clip',400);

        document.getElementById('cambio_documento').value = ++documento_soporte_cambios;
        $("#btn-submit").show('blind', 300);


    }

    //oculta el formulario de carga de archivo
    function ocultaFileInput() {
        $("#div_document_support_info").show('clip',400, function () {
            $("#@Html.IdFor(model => model.PostedFileResponsiva)").val('');
            $('#@Html.IdFor(model => model.PostedFileResponsiva)').next('label').html('Seleccione un archivo...');
        });
        $("#div_document_support_input").hide('clip',150);

        document.getElementById('cambio_documento').value = ++documento_soporte_cambios;

        $("#btn-submit").hide('blind', 300);

    }
        window.onload = function () {
            clicMenu(1);
        }
    </script>
}
