@model Portal_2_0.Models.IT_inventory_items

@{
    ViewBag.Title = "Edit Server";
    ViewBag.PrimerNivel = "sistemas";
    ViewBag.SegundoNivel = "IT_Catalogos_inventory";
    ViewBag.TercerNivel = "IT_Inventory_server";
    ViewBag.ControllerName = "IT_inventory_items";


    int contador = 100;

    string _planta = Request.QueryString["_id_planta"];
    string _pagina = Request.QueryString["_pagina"];
    string _hostname = Request.QueryString["_hostname"];
    string _active = Request.QueryString["_active"];

}

@section estilos
{
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
}

<div class="right_col" role="main">
    <div class="">

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        @*Indica que los mensajes de validación son en ingles*@
                        <input type="hidden" id="jquery_val_english" name="jquery_val_english" value="true" />
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" value="@Model.IT_inventory_hardware_type.id" id="id_inventory_type" name="id_inventory_type" />

                            <input type="hidden" value="@_planta" id="_id_planta" name="_id_planta" />
                            <input type="hidden" value="@_pagina" id="_pagina" name="_pagina" />
                            <input type="hidden" value="@_hostname" id="_hostname" name="_hostname" />
                            <input type="hidden" value="@_active" id="_active" name="_active" />

                            @Html.HiddenFor(model => model.id)

                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            <div class="form-group row">
                                <span style="color:black"><b>GENERAL INFORMATION</b></span>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id, new { @class = "col-form-label col-md-11 col-sm-11 label-align" })
                                <div class="col-md-1 col-sm-1 ">
                                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_inventory_type, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    <input class="form-control" value="@Model.IT_inventory_hardware_type.descripcion" readonly="readonly" />
                                    @Html.ValidationMessageFor(model => model.id_inventory_type, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.id_planta, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.DropDownList("id_planta", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_planta, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.hostname, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.hostname, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.hostname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.brand, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.model, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.serial_number, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.serial_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.serial_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.operation_system, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.operation_system, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.operation_system, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.bits_operation_system, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.DropDownList("bits_operation_system", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.bits_operation_system, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.cpu_speed_mhz, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.cpu_speed_mhz, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.cpu_speed_mhz, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.number_of_cpus, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.number_of_cpus, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.number_of_cpus, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.processor, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.EditorFor(model => model.processor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.processor, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.mac_lan, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.mac_lan, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.mac_lan, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.mac_wlan, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.mac_wlan, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.mac_wlan, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.total_physical_memory_mb, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.total_physical_memory_mb, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.total_physical_memory_mb, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>HARD DRIVES</b></span>
                            </div>
                            <div id="div_drives">

                                @foreach (Portal_2_0.Models.IT_inventory_hard_drives item in Model.IT_inventory_hard_drives)
                                {

                                    <div class="form-group row" id="div_drives_@contador">
                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[@contador].disk_name">
                                            <span class="float-right">Drive Letter</span>
                                        </label>
                                        <div class="col-md-1">
                                            <input type="text" style="text-transform: uppercase; text-align: right" onkeyup="javascript:this.value=this.value.toUpperCase();" maxlength="1" name="IT_inventory_hard_drives[@contador].disk_name" id="IT_inventory_hard_drives[@contador].disk_name" class="form-control col-md-12" value="@item.disk_name" autocomplete="off" required>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[@contador].disk_name" data-valmsg-replace="true"></span>
                                        </div>
                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[@contador].total_drive_space_mb">
                                            <span class="float-right">Total Drive Space (MB)</span>
                                        </label>
                                        <div class="col-md-2">
                                            <input style="text-align:right" type="number" min="0" step="1" max="2147483647" name="IT_inventory_hard_drives[@contador].total_drive_space_mb" id="IT_inventory_hard_drives[@contador].total_drive_space_mb" class="drive-total form-control col-md-12" value="@item.total_drive_space_mb" autocomplete="off" required>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[@contador].total_drive_space_mb" data-valmsg-replace="true"></span>
                                        </div>
                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[@contador].type_drive">
                                            <span class="float-right">Type</span>
                                        </label>
                                        <div class="col-md-2">
                                            <select name="IT_inventory_hard_drives[@contador].type_drive" id="IT_inventory_hard_drives[@contador].type_drive" class="categoria form-control select2bs4" style="width:100%">
                                                <option value=''>-- Seleccione un valor --</option>
                                                <option value='SSD' @(item.type_drive == "SSD" ? "selected" : "")>SSD</option>
                                                <option value='HDD' @(item.type_drive == "HDD" ? "selected" : "")>HDD</option>
                                                <option value='M.2' @(item.type_drive == "M.2" ? "selected" : "")>M.2</option>
                                            </select>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[@contador].type_drive" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-md-1">
                                            <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarPieza(@contador); return false;">
                                        </div>
                                    </div>

                                    contador++;
                                }
                            </div>

                            <div class="form-group row">

                            </div>
                            <div class="form-group row">
                                <div class="col-md-11">
                                    <input type="button" value="Add" class="btn btn-round btn-warning float-right" onclick="AgregarConcepto(); return false;">
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.NumberOfHardDrives, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-1 col-sm-1 ">
                                    <input id="NumberOfHardDrives" class="form-control" value="@Model.NumberOfHardDrives" readonly />
                                </div>
                                @Html.LabelFor(model => model.TotalDiskSpace, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-1 col-sm-1 ">
                                    <input id="TotalDiskSpace" class="form-control" value="@Model.TotalDiskSpace" readonly />
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>MAINTENANCE</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.maintenance_period_months, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-1 col-sm-1 ">
                                    @Html.EditorFor(model => model.maintenance_period_months, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.maintenance_period_months, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>WARRANTY</b></span>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.purchase_date, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.purchase_date, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.purchase_date, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.end_warranty, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.end_warranty, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.end_warranty, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>STATUS</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.active, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-1 col-sm-1 " @*rel="tooltip" data-title="Autorizar"*@>

                                    @Html.EditorFor(model => model.active, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                                    @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.inactive_date, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.EditorFor(model => model.inactive_date, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.inactive_date, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>COMMENTS</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.comments, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.comments, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="submit" class="btn btn-success btn-lg float-lg-right"> <i class="fa-regular fa-floppy-disk"></i>&ensp;Save</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a href="@Url.Action("server", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/inputmask/inputmask.extensions.js"))
<script>
        $(document).ready(function () {

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })


            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });


            //eventos input
            $('input').on('ifChecked', function (event) {
                verificaCombos();
            });

            $('input').on('ifUnchecked', function (event) {
                verificaCombos();
            });

            //agrega eventos a los input
            asignaEventosInput();

                        //inicializa input mask
             $('#@Html.IdFor(model => model.total_physical_memory_mb)').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': false, 'suffix': ' MB', 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true  });
             $('#@Html.IdFor(model => model.mac_wlan)').inputmask({ 'alias': "mac", 'autoUnmask': true, 'removeMaskOnSubmit': true });
             $('#@Html.IdFor(model => model.mac_lan)').inputmask({ 'alias': "mac", 'autoUnmask': true, 'removeMaskOnSubmit': true });


            verificaCombos();

        });

        //funcion para agregar los eventos de cantidades a los input
        function asignaEventosInput() {
            //Agrega el evento a todos los input
            $(".drive-total").each(function () {
                $(this).on('input', function (e) {
                    calculaDatosDrives()
                });
            });

        }

        function calculaDatosDrives() {
            //realiza la suma de conceptos
            let total_disk = ObtieneTotal();


            //redondea a cero decimales
            total_disk = total_disk.toFixed(0);

            //asigna el valor de total
            if (total_disk != null) {
                $("#TotalDiskSpace").val(total_disk);
            } else {
                $("#TotalDiskSpace").val("0");
            }

            //obtiene el total de hard drives
            let indice = 0;

            $('.drive-total').each(function (index) {
                indice++;
            });

            $("#NumberOfHardDrives").val(indice);


        }

        function ObtieneTotal() {
            var suma = 0;
            $('.drive-total').each(function () {
                suma = suma + ConvierteAFloat($(this).val(), 0)
            });

            return suma;
        }


        function verificaCombos() {

            //check
            if (!$('#active').prop('checked')) {
                $('#inactive_date').prop('disabled', false);

                // Initialize Select2 Elements (debe ir después de asignar el valor)
                $('.select2bs4').select2({
                    theme: 'bootstrap4'
                })

            } else { //si el check está seleccionado
                $('#inactive_date').prop('disabled', true);
                //$('#inactive_date').val('');
            }

        }


        //variable global para el id
        var num = 0;
        //variable global de los select
        //var textoSelectFalla = obtieneSelectFalla();

        //agreaga una fila para lotes
        function AgregarConcepto() {
            //obtine los valores de lotes


            $("#div_drives").append(

                `
                                                <div class="form-group row" id="div_drives_`+ num + `">
                                                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[`+ num + `].disk_name">
                                                                            <span class="float-right">Drive Letter</span>
                                                                        </label>
                                                                        <div class="col-md-1">
                                                                            <input style="text-align:right" type="text" maxlength="1" style="text-transform: uppercase; text-align: right" onkeyup="javascript:this.value=this.value.toUpperCase();"  onkeyup="javascript:this.value=this.value.toUpperCase();" name="IT_inventory_hard_drives[`+ num + `].disk_name" id="IT_inventory_hard_drives[` + num + `].disk_name" class="form-control col-md-12" value="" autocomplete="off" required>
                                                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[`+ num + `].disk_name" data-valmsg-replace="true"></span>
                                                                        </div>
                                                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[`+ num + `].total_drive_space_mb">
                                                                            <span class="float-right">Total Drive Space (MB)</span>
                                                                        </label>
                                                                        <div class="col-md-2">
                                                                            <input style="text-align:right" type="number" min="0" step="1" max="2147483647" name="IT_inventory_hard_drives[`+ num + `].total_drive_space_mb" id="IT_inventory_hard_drives[` + num + `].total_drive_space_mb" class="drive-total form-control col-md-12" value="" autocomplete="off" required>
                                                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[`+ num + `].total_drive_space_mb" data-valmsg-replace="true"></span>
                                                                        </div>
                                                                        <label class="control-label col-md-1" for="IT_inventory_hard_drives[`+ num + `].type_drive">
                                                                            <span class="float-right">Type</span>
                                                                        </label>
                                                                        <div class="col-md-2">
                                                                            <select name="IT_inventory_hard_drives[`+ num + `].type_drive" id="IT_inventory_hard_drives[` + num + `].type_drive" class="categoria form-control select2bs4" style="width:100%" >
                                                                                <option value=''>-- Seleccione un valor --</option>
                                                                                <option value='SSD'>SSD</option>
                                                                                <option value='HDD'>HDD</option>
                                                                                <option value='M.2'>M.2</option>
                                                                            </select>
                                                                            <span class="field-validation-valid text-danger" data-valmsg-for="IT_inventory_hard_drives[`+ num + `].type_drive" data-valmsg-replace="true"></span>
                                                                        </div>
                                                                        <div class="col-md-1">
                                                                            <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarPieza(`+ num + `); return false;">
                                                                        </div>
                                                                    </div>
                                                `
            );
            $("#div_drives_" + num).hide().fadeIn(500);


            asignaEventosInput();

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })
            calculaDatosDrives();
            //aumenta el contador
            num++;
        }

        //borra un lote
        function borrarPieza(id) {

            $("#div_drives_" + id).fadeOut(0, function () {
                $(this).remove();
            });

            calculaDatosDrives();
        }

        window.onload = function () {
            clicMenu(1);
        }
</script>
}

