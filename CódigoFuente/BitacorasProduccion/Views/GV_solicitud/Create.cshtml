@model Portal_2_0.Models.GV_solicitud

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Crear Solicitud de Gastos de Viaje";
    ViewBag.PrimerNivel = "gastos_viaje";
    ViewBag.SegundoNivel = "GV_solicitud";
    ViewBag.ControllerName = "GV_solicitud";

    int contador = 0;

}

@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">
    <style>

        label {
            text-align: right;
        }

            label::after {
                content: ":";
            }

        nolabel > label::after {
            content: "";
        }

        .fondo_verde {
            background-color: green;
            color: #fffdf0;
            font-weight: bolder;
        }

        .fondo_amarillo {
            background-color: orange;
            color: #221f1f;
            font-weight: bolder;
        }
    </style>
}



<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    @*<div class="x_title">
                            <h2>@ViewBag.Title</h2>
                            <div class="clearfix"></div>
                        </div>*@
                    <div class="x_content">
                        <br />

                        @using (Html.BeginForm("Create", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group row">
                                <div class="col-md-12" style="text-align:center">
                                    <span class="green" style="font-size:x-large"><i class="fa-solid fa-plane-departure"></i> SOLICITUD DE GASTOS DE VIAJE</span>
                                </div>
                            </div>


                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            //Valores ocultos
                            @Html.HiddenFor(model => model.id_solicitante)
                            @Html.HiddenFor(model => model.id_jefe_directo)

                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>DATOS GENERALES</b></span>
                            </div>

                            <div class="form-group row">
                                <!--SOLICITANTE-->
                                @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-4">
                                    <input class="form-control" value="@Html.DisplayFor(model => model.empleados5.ConcatNombre)" readonly />
                                    @Html.ValidationMessageFor(model => model.id_solicitante, "", new { @class = "text-danger" })
                                </div>

                                <!--Fecha-->
                                @Html.LabelFor(model => model.fecha_solicitud, new { @class = "control-label col-md-5 float-right" })
                                <div class="col-md-2">
                                    <input type="text" class="form-control" value="@DateTime.Now" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <!-- Empleado -->
                                @Html.LabelFor(model => model.id_empleado, new { @class = "control-label col-md-1" })
                                <div class="col-md-4">
                                    @Html.DropDownList("id_empleado", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <!--Planta-->
                                @Html.LabelFor(model => model.empleados2.planta_clave, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-3">
                                    <input class="form-control" id="empleado_planta" value="@Html.DisplayFor(model => model.empleados2.plantas.descripcion)" readonly />
                                </div>
                                <!--Departamento-->
                                @Html.LabelFor(model => model.empleados2.id_area, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-3">
                                    <input class="form-control" id="empleado_area" value="@Html.DisplayFor(model => model.empleados2.Area.descripcion)" readonly />
                                </div>
                                <!--Puesto-->
                                @Html.LabelFor(model => model.empleados2.puesto, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-3">
                                    <input class="form-control" id="empleado_puesto" value="@Html.DisplayFor(model => model.empleados2.puesto1.descripcion)" readonly />
                                </div>

                            </div>
                            <div class="form-group row">
                                <!--Planta-->
                                @Html.LabelFor(model => model.id_jefe_directo, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-5">
                                    <input class="form-control" id="empleado_jefe" value="@Html.DisplayFor(model => model.empleados2.empleados2.ConcatNombre)" readonly />
                                    @Html.ValidationMessageFor(model => model.id_jefe_directo, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>INFORMACI&Oacute;N DEL VIAJE</b></span>
                            </div>
                            <!-- Tipo de Viaje -->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.tipo_viaje, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-1 col-sm-1 offset-md-1">
                                    <input type="radio" id="nacional" name="tipo_viaje" value="NACIONAL" @(Model.tipo_viaje == Bitacoras.Util.GV_tipo_viaje.NACIONAL || String.IsNullOrEmpty(Model.tipo_viaje) ? "checked" : String.Empty)>
                                    <nolabel>
                                        <label for="nacional">Nacional</label>
                                    </nolabel>
                                </div>
                                <div class="col-md-1 col-sm-1">
                                    <input type="radio" id="extranjero" name="tipo_viaje" value="EXTRANJERO" @(Model.tipo_viaje == Bitacoras.Util.GV_tipo_viaje.EXTRANJERO ? "checked" : String.Empty)>
                                    <nolabel>
                                        <label for="extranjero">Extranjero</label>
                                    </nolabel>
                                </div>
                                @Html.ValidationMessageFor(model => model.tipo_viaje, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.origen, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.origen, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.origen, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.destino, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.destino, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.destino, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.fecha_salida, new { @class = "control-label col-md-1 float-right" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.fecha_salida, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fecha_salida, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.fecha_regreso, new { @class = "control-label col-md-2 float-right" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.fecha_regreso, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fecha_regreso, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-md-1 float-right">Días</label>
                                <div class="col-md-1">
                                    <input type="text" id="num_dias" name="num_dias" class="form-control" readonly>
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <!-- Solo aplica con moneda extranjera -->
                            <div id="div_moneda_extranjera">
                                <div class="form-group row">
                                    <span style="color:black"><b>ESTIMACI&Oacute;N DE GASTOS A REALIZAR (MONEDA EXTRANJERA)</b></span>

                                </div>
                                <div class="form-group row">

                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.moneda_extranjera, new { @class = "control-label col-md-1 text_derecha" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(m => m.moneda_extranjera, new { htmlAttributes = new { @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.moneda_extranjera, "", new { @class = "text-danger" })
                                    </div>
                                    <!-- Moneda -->
                                    @Html.LabelFor(model => model.iso_moneda_extranjera, new { @class = "control-label col-md-1" })
                                    <div class="col-md-3">
                                        @Html.DropDownList("iso_moneda_extranjera", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.iso_moneda_extranjera, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.moneda_extranjera_monto, new { @class = "control-label col-md-1 text_derecha" })
                                    <div class="col-md-2">
                                        @Html.EditorFor(m => m.moneda_extranjera_monto, new { htmlAttributes = new { @class = "precio form-control", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.moneda_extranjera_monto, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="item form-group">
                                    @Html.LabelFor(model => model.moneda_extranjera_comentarios, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })

                                </div>
                                <div class="item form-group">
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.moneda_extranjera_comentarios, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.moneda_extranjera_comentarios, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="ln_solid"></div>
                            </div>
                            <div class="form-group row">
                                <span style="color:black"><b>MEDIO DE TRANSPORTE</b></span>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.id_medio_transporte, new { @class = "control-label col-md-2 float-right" })
                                <div class="col-md-3">
                                    @Html.DropDownList("id_medio_transporte", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_medio_transporte, "", new { @class = "text-danger" })
                                </div>
                                <!-- Otro medio de Transporte -->
                                @Html.LabelFor(model => model.medio_transporte_aplica_otro, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1">
                                    @Html.EditorFor(m => m.medio_transporte_aplica_otro, new { htmlAttributes = new { @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.medio_transporte_aplica_otro, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.medio_transporte_otro, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.medio_transporte_otro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.medio_transporte_otro, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.motivo_viaje, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })

                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.motivo_viaje, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.motivo_viaje, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-12">
                                    <div class="alert alert-info" role="alert" style="font-size:14px">
                                        <i class="fa-solid fa-circle-info"></i>  La empresa proporcionará a los empleados los recursos para realizar los viajes por asuntos de trabajo y espera que todo el personal ejerza con el cuidado y buen juicio al incurrir en gastos. Los costos excesivos, rutas indirectas o alojamiento de lujo y servicios que son innecesarias o injustificados no son admisibles y no serán pagados. Debido a que estos viajes son por asuntos de trabajo y se esperan obtener determinados resultados, no está permitido que viajen familiares con el empleado.
                                    </div>
                                </div>
                            </div>

                            <div class="ln_solid">

                            </div>
                            <div class="form-group row">
                                <span style="color:black"><b>ESTIMACI&Oacute;N DE GASTOS A REALIZAR (MONEDA NACIONAL)</b></span>

                            </div>

                            <div class="table-responsive">
                                <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr style=" background-color: #0094ff; color: azure;">
                                            <th width="20%">
                                                Concepto
                                            </th>
                                            <th width="12%">
                                                Importe
                                            </th>
                                            <th width="12%">
                                                Cantidad o días
                                            </th>
                                            <th width="12%">
                                                Total
                                            </th>
                                            <th width="40%">
                                                Comentarios
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="body_conceptos">
                                        @foreach (var item in Model.GV_rel_gastos_solicitud)
                                        {
                                            <input type="hidden" name="GV_rel_gastos_solicitud[@contador].id_tipo_gastos_viaje" id="GV_rel_gastos_solicitud[@contador].id_tipo_gastos_viaje" value="@item.id_tipo_gastos_viaje" />
                                            <input type="hidden" name="GV_rel_gastos_solicitud[@contador].currency_iso" id="GV_rel_gastos_solicitud[@contador].currency_iso" value="MXN" />
                                            <tr>
                                                <td style="font-weight:bold">@item.GV_tipo_gastos_viaje.descripcion</td>
                                                <td>
                                                    <input id="GV_rel_gastos_solicitud[@contador].importe" name="GV_rel_gastos_solicitud[@contador].importe" style="font-size: 12px;" type="text" class="precio importe form-control col-md-12" value="@item.importe" data-row="@contador" maxlength="80" autocomplete="off" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="GV_rel_gastos_solicitud[@contador].importe" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input id="GV_rel_gastos_solicitud[@contador].cantidad" name="GV_rel_gastos_solicitud[@contador].cantidad" style="text-align: right; font-size: 12px;" type="text" class="cantidad form-control col-md-12" value="@item.cantidad" data-row="@contador" maxlength="80" autocomplete="off" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="GV_rel_gastos_solicitud[@contador].cantidad" data-valmsg-replace="true"></span>
                                                </td>
                                                <td id="total_fila_@contador" style="text-align:right" nowrap>
                                                    $ 0.00 MXN
                                                </td>
                                                <td>
                                                    <textarea style="font-size: 12px;" type="text" name="GV_rel_gastos_solicitud[@contador].comentarios" id="GV_rel_gastos_solicitud[@contador].comentarios" class="form-control col-md-12" autocomplete="off" maxlength="120" rows="2">@item.comentarios</textarea>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="GV_rel_gastos_solicitud[@contador].comentarios" data-valmsg-replace="true"></span>
                                                </td>
                                            </tr>
                                            contador++;
                                        }
                                    </tbody>

                                    <tfoot>
                                        <tr>
                                            <th colspan="3" style="text-align:right">Total</th>
                                            <th id="total_gastos" style="text-align:right" nowrap>$ 0.00 MXN</th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                                @*<p><b>Nota:</b> No deje campos en blanco, en caso de que algún concepto no aplique, por favor coloque un "0".</p>*@
                            </div>

                            <div class="form-group row">

                            </div>

                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>RESERVACIONES</b></span>

                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.boletos_avion, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1">
                                    @Html.EditorFor(m => m.boletos_avion, new { htmlAttributes = new { @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.boletos_avion, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.hospedaje, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1">
                                    @Html.EditorFor(m => m.hospedaje, new { htmlAttributes = new { @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.hospedaje, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.reservaciones_comentarios, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.reservaciones_comentarios, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.reservaciones_comentarios, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">

                            </div>

                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>COMENTARIOS ADICIONALES</b></span>
                            </div>

                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.comentario_adicional, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.comentario_adicional, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">

                            </div>

                            <!-- boton guardar -->
                            <div class="form-group row">
                            </div>

                            <div class="ln_solid"></div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="submit" class="btn btn-success float-lg-right"> <i class="fa-regular fa-floppy-disk"></i>&nbsp; Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a href="javascript: history.go(-1)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Scripts/MvcFoolproofJQueryValidation.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")
    @Scripts.Render(Url.Content("~/Content/vendors/moment/moment.js"))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))



    <script>
        $(document).ready(function () {

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });


            //agrega evento para cambio de empleado
            $('#@Html.IdFor(model => model.id_empleado)').change(function (event) {
                ActualizaDatosEmpleados($(this).val());
            });
            $('#@Html.IdFor(model => model.id_empleado)').change();

            //agrega evento para camnio de fecha
             $('#@Html.IdFor(model => model.fecha_salida)').change(function (event) {
                 calculaDias();
             });
             $('#@Html.IdFor(model => model.fecha_regreso)').change(function (event) {
                 calculaDias();
             });
            $('#@Html.IdFor(model => model.fecha_salida)').change();
            $('#@Html.IdFor(model => model.fecha_regreso)').change();

            //agrega evento de de transporte
            $('#@Html.IdFor(model => model.medio_transporte_aplica_otro)').on('ifChanged', function (event) {
                VerificaCamposTransporte(event.target.checked);
            });
            VerificaCamposTransporte(@Convert.ToInt32(Model.medio_transporte_aplica_otro));

            //agrega evento de de moneda
            $('#@Html.IdFor(model => model.moneda_extranjera)').on('ifChanged', function (event) {
                VerificaCamposMoneda(event.target.checked);
            });
           VerificaCamposMoneda(@Convert.ToInt32(Model.moneda_extranjera));

            //muestra /oculta los campos de moneda extranjera
            $('input[name=tipo_viaje]').on('ifChanged',function (event) {
                VerificaCamposMonedaExtranjera(500);
            });
            VerificaCamposMonedaExtranjera(0);

            //agrega los eventos para el cambio de importe
            $(".importe").each(function () {
                $(this).on('keyup change blur', function (e) {

                    calculaTotal();
                });
            });

            //agrega los eventos para el cambio de cantidad
            $(".cantidad").each(function () {
                $(this).on('keyup change blur', function (e) {                    
                    calculaTotal();
                });
            });

            //calcula el total cuando carga la página
            calculaTotal();

            //input mask
            $('.precio').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'allowMinus': false, 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true });
            $('.cantidad').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': false, 'allowMinus': false, 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true });
        });

        //variable para formatear numeros
        internationalNumberFormat = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD'
        });

        //realiza el calculo del costo por cantidad
        function calculaTotal() {
            let suma = 0;

            $('.importe').each(function () {
                //obtiene valores tipo text
                let row = $(this).attr("data-row");
                let importe = $(this).val();
                let cantidad = document.getElementById('GV_rel_gastos_solicitud[' + row + '].cantidad').value;

                //en caso de que se borre el input coloca un cero   
                if (importe=='')
                    $(this).val("0");
                if (cantidad==null)
                    document.getElementById('GV_rel_gastos_solicitud[' + row + '].cantidad').value = "0";

                //convierte a floar
                importe = TryParseFloat(importe,0);
                cantidad = TryParseFloat(cantidad,0);
                let totalFila = importe * cantidad;

                if (!isNaN(totalFila)) {
                    let fila = document.getElementById('total_fila_' + row);
                    fila.innerHTML = internationalNumberFormat.format(totalFila.toFixed(2)) + ' MXN';
                    suma += totalFila;
                }

            });

            let fila_total = document.getElementById('total_gastos');
            fila_total.innerHTML = internationalNumberFormat.format(suma.toFixed(2)) + ' MXN';
        }

        //activa desactiva los valores de moneda extranjera
        function VerificaCamposMonedaExtranjera(tiempo) {
            if ($("#nacional").is(':checked')) {
                $('#div_moneda_extranjera').hide(tiempo);
                $('#@Html.IdFor(model => model.moneda_extranjera)').prop('disabled', true);
                $('#@Html.IdFor(model => model.moneda_extranjera_comentarios)').prop('disabled', true);

            } else if ($("#extranjero").is(':checked')) {
                $('#div_moneda_extranjera').show(tiempo);
                $('#@Html.IdFor(model => model.moneda_extranjera)').prop('disabled', false);
                $('#@Html.IdFor(model => model.moneda_extranjera_comentarios)').prop('disabled', false);
            }
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

        }

        function VerificaCamposTransporte(seleccion) {
            if (seleccion) {
                $('#@Html.IdFor(model => model.id_medio_transporte)').prop('disabled', true);
                $('#@Html.IdFor(model => model.medio_transporte_otro)').prop('disabled', false);
                  $('#@Html.IdFor(model => model.id_medio_transporte)').val("");
            } else
            {
                $('#@Html.IdFor(model => model.id_medio_transporte)').prop('disabled', false);
                $('#@Html.IdFor(model => model.medio_transporte_otro)').prop('disabled', true);
                $('#@Html.IdFor(model => model.medio_transporte_otro)').val("");

            }
            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })
        }

        function VerificaCamposMoneda(seleccion) {
            if (seleccion) {
               $('#@Html.IdFor(model => model.iso_moneda_extranjera)').prop('disabled', false);
               $('#@Html.IdFor(model => model.moneda_extranjera_monto)').prop('disabled', false);
            } else
            {
                $('#@Html.IdFor(model => model.iso_moneda_extranjera)').prop('disabled', true);
                $('#@Html.IdFor(model => model.moneda_extranjera_monto)').prop('disabled', true);
                $('#@Html.IdFor(model => model.iso_moneda_extranjera)').val("");
                $('#@Html.IdFor(model => model.moneda_extranjera_monto)').val("");
            }
            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })
         }

    //Calcula los dias del viaje
        function calculaDias() {
            var inicial = $('#@Html.IdFor(model => model.fecha_salida)').val();
            var regreso = $('#@Html.IdFor(model => model.fecha_regreso)').val();

            var a = moment(inicial);
            var b = moment(regreso)

            if (moment(inicial).isValid() && moment(regreso).isValid()) {
                //calcula la diferencia y actualiza los días
                var dias = b.diff(a, 'days');
                dias = dias + 1;

                $('#num_dias').val(dias);

                if (dias < 1) {
                    $('#num_dias').val("--");
                }
            } else {
                $('#num_dias').val("--");
            }

        }


    function ActualizaDatosEmpleados(idEmpleado) {
        //llamada ajax para obtener el detalle del item  seleccionado
        $.ajax({
            type: 'POST',
            url: '/Combos/GetDatosEmpleados',
            data: { id: idEmpleado },
            success: function (data) {
                console.log(data);
                try {
                    $('#empleado_planta').val(data[0].planta);
                    $('#empleado_area').val(data[0].area);
                    $('#empleado_puesto').val(data[0].puesto);
                    $('#id_jefe_directo').val(data[0].id_jefe_directo);
                    $('#empleado_jefe').val(data[0].nombre_jefe_directo);

                    if ($('#empleado_jefe').val() == '--') {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Mensaje',
                            text: 'El jefe inmediato del usuario seleccionado no se encuentra registrado en el sistema. Favor de contactar a sistemas para continuar.',
                            confirmButtonText: 'Aceptar',
                        })
                    }
                }
                catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Ocurrió un error obteniendo la información: ' + error,
                        confirmButtonText: 'Aceptar',
                    })
                }
            },
            async: false
        });
        }

        //convierte texto a float
        function TryParseFloat(str, defaultValue) {

            var retValue = defaultValue;
            if (str !== undefined && str !== null) {
                if (str.length > 0) {
                    if (!isNaN(str)) {
                        retValue = parseFloat(str);
                    }
                }
            }
            return retValue;
        }

        window.onload = function () {
            clicMenu(1);
        }
    </script>
}


