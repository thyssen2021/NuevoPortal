@model Portal_2_0.Models.GV_solicitud

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Autorizar Solicitud de Gastos de Viaje";
    ViewBag.PrimerNivel = "gastos_viaje";
    ViewBag.SegundoNivel = "solicitudes_jefe_directo";
    ViewBag.ControllerName = "GV_solicitud";

    int contador = 0;

}

@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">
    <style>

        label {
            text-align: right;
        }

            label::after {
                content: ":";
            }

        nolabel > label::after {
            content: "";
        }

        .fondo_verde {
            background-color: green;
            color: #fffdf0;
            font-weight: bolder;
        }

        .fondo_amarillo {
            background-color: orange;
            color: #221f1f;
            font-weight: bolder;
        }
    </style>
}



<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    @*<div class="x_title">
                            <h2>@ViewBag.Title</h2>
                            <div class="clearfix"></div>
                        </div>*@
                    <div class="x_content">
                        <br />

                        <div class="form-group row">
                            <div class="col-md-12" style="text-align:center">
                                <span class="green" style="font-size:x-large"><i class="fa-solid fa-plane-departure"></i> SOLICITUD DE GASTOS DE VIAJE</span>
                            </div>
                        </div>
                        <div class="ln_solid"></div>

                        <div class="form-group row">
                            <span style="color:black"><b>DATOS GENERALES</b></span>
                        </div>

                        <div class="form-group row">
                            <!--Folio-->
                            <div class="col-md-10">
                            </div>
                            @Html.LabelFor(model => model.id, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-1">
                                @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <!--SOLICITANTE-->
                            @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-4">
                                <input class="form-control" value="@Html.DisplayFor(model => model.empleados5.ConcatNombre)" readonly />
                            </div>

                            <!--Estatus-->
                            @Html.LabelFor(model => model.estatus, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-2">
                                <input type="text" class="form-control" value="@Bitacoras.Util.GV_solicitud_estatus.DescripcionStatus(Model.estatus)" readonly />
                            </div>

                            <!--Fecha-->
                            @Html.LabelFor(model => model.fecha_solicitud, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-2">
                                <input type="text" class="form-control" value="@DateTime.Now" readonly />
                            </div>
                        </div>
                        <div class="form-group row">
                            <!-- Empleado -->
                            @Html.LabelFor(model => model.id_empleado, new { @class = "control-label col-md-1" })
                            <div class="col-md-4">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados2.ConcatNombre)" readonly />
                            </div>
                        </div>

                        <div class="form-group row">
                            <!--Planta-->
                            @Html.LabelFor(model => model.empleados2.planta_clave, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-3">
                                <input class="form-control" id="empleado_planta" value="@Html.DisplayFor(model => model.empleados2.plantas.descripcion)" readonly />
                            </div>
                            <!--Departamento-->
                            @Html.LabelFor(model => model.empleados2.id_area, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-3">
                                <input class="form-control" id="empleado_area" value="@Html.DisplayFor(model => model.empleados2.Area.descripcion)" readonly />
                            </div>
                            <!--Puesto-->
                            @Html.LabelFor(model => model.empleados2.puesto, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-3">
                                <input class="form-control" id="empleado_puesto" value="@Html.DisplayFor(model => model.empleados2.puesto1.descripcion)" readonly />
                            </div>

                        </div>
                        <div class="form-group row">
                            <!--Planta-->
                            @Html.LabelFor(model => model.id_jefe_directo, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-5">
                                <input class="form-control" id="empleado_jefe" value="@Html.DisplayFor(model => model.empleados2.empleados2.ConcatNombre)" readonly />
                            </div>

                        </div>
                        <div class="ln_solid"></div>

                        <div class="form-group row">
                            <span style="color:black"><b>INFORMACI&Oacute;N DEL VIAJE</b></span>
                        </div>
                        <!-- Tipo de Viaje -->
                        <div class="form-group row">
                            @Html.LabelFor(model => model.tipo_viaje, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-1 col-sm-1 offset-md-1">
                                <input type="radio" id="nacional" name="tipo_viaje" value="NACIONAL" @(Model.tipo_viaje == Bitacoras.Util.GV_tipo_viaje.NACIONAL || String.IsNullOrEmpty(Model.tipo_viaje) ? "checked" : String.Empty) disabled>
                                <nolabel>
                                    <label for="nacional">Nacional</label>
                                </nolabel>
                            </div>
                            <div class="col-md-1 col-sm-1">
                                <input type="radio" id="extranjero" name="tipo_viaje" value="EXTRANJERO" @(Model.tipo_viaje == Bitacoras.Util.GV_tipo_viaje.EXTRANJERO ? "checked" : String.Empty) disabled>
                                <nolabel>
                                    <label for="extranjero">Extranjero</label>
                                </nolabel>
                            </div>
                            @Html.ValidationMessageFor(model => model.tipo_viaje, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.origen, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.origen, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            @Html.LabelFor(model => model.destino, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.destino, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>

                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.fecha_salida, new { @class = "control-label col-md-1 float-right" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.fecha_salida, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>

                            @Html.LabelFor(model => model.fecha_regreso, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.fecha_regreso, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>
                            <label class="control-label col-md-1 float-right">Días</label>
                            <div class="col-md-1">
                                <input type="text" id="num_dias" name="num_dias" class="form-control" readonly>
                            </div>
                        </div>

                        <div class="ln_solid"></div>

                        @if (Model.moneda_extranjera)
                        {
                            <!-- Solo aplica con moneda extranjera -->
                            <div id="div_moneda_extranjera">
                                <div class="form-group row">
                                    <span style="color:black"><b>ESTIMACI&Oacute;N DE GASTOS A REALIZAR (MONEDA EXTRANJERA)</b></span>

                                </div>
                                <div class="form-group row">

                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.moneda_extranjera, new { @class = "control-label col-md-1 text_derecha" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(m => m.moneda_extranjera, new { htmlAttributes = new { disabled = "disabled" } })
                                    </div>
                                    <!-- Moneda -->
                                    @Html.LabelFor(model => model.iso_moneda_extranjera, new { @class = "control-label col-md-1" })
                                    <div class="col-md-3">
                                        <input type="text" class="form-control" value="@Model.iso_moneda_extranjera" readonly />
                                    </div>
                                    @Html.LabelFor(model => model.moneda_extranjera_monto, new { @class = "control-label col-md-1 text_derecha" })
                                    <div class="col-md-2">
                                        @Html.EditorFor(m => m.moneda_extranjera_monto, new { htmlAttributes = new { @class = "precio form-control", @readonly = "readonly" } })
                                    </div>
                                </div>

                                <div class="item form-group">
                                    @Html.LabelFor(model => model.moneda_extranjera_comentarios, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })

                                </div>
                                <div class="item form-group">
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.moneda_extranjera_comentarios, new { @class = "form-control", @rows = "4", @readonly = "readonly" })
                                    </div>
                                </div>

                                <div class="ln_solid"></div>
                            </div>

                        }
                        <div class="form-group row">
                            <span style="color:black"><b>MEDIO DE TRANSPORTE</b></span>
                        </div>
                        <div class="form-group row">
                            @if (!Model.medio_transporte_aplica_otro)
                            {
                                @Html.LabelFor(model => model.id_medio_transporte, new { @class = "control-label col-md-2 float-right" })
                                <div class="col-md-3">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => model.GV_medios_transporte.descripcion)" readonly />
                                </div>
                            }
                            else
                            {
                                <!-- Otro medio de Transporte -->
                                @Html.LabelFor(model => model.medio_transporte_aplica_otro, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1">
                                    @Html.EditorFor(m => m.medio_transporte_aplica_otro, new { htmlAttributes = new { @disabled = "disabled" } })
                                </div>

                                @Html.LabelFor(model => model.medio_transporte_otro, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.medio_transporte_otro, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            }

                        </div>

                        <div class="item form-group">
                            @Html.LabelFor(model => model.motivo_viaje, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })

                        </div>
                        <div class="item form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.motivo_viaje, new { @class = "form-control", @rows = "4", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-12">
                                <div class="alert alert-info" role="alert" style="font-size:14px">
                                    <i class="fa-solid fa-circle-info"></i>  La empresa proporcionará a los empleados los recursos para realizar los viajes por asuntos de trabajo y espera que todo el personal ejerza con el cuidado y buen juicio al incurrir en gastos. Los costos excesivos, rutas indirectas o alojamiento de lujo y servicios que son innecesarias o injustificados no son admisibles y no serán pagados. Debido a que estos viajes son por asuntos de trabajo y se esperan obtener determinados resultados, no está permitido que viajen familiares con el empleado.
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid">

                        </div>
                        <div class="form-group row">
                            <span style="color:black"><b>ESTIMACI&Oacute;N DE GASTOS A REALIZAR (MONEDA NACIONAL)</b></span>

                        </div>

                        <div class="table-responsive">
                            <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                <thead>
                                    <tr style=" background-color: #0094ff; color: azure;">
                                        <th width="20%">
                                            Concepto
                                        </th>
                                        <th width="12%">
                                            Importe
                                        </th>
                                        <th width="12%">
                                            Cantidad o días
                                        </th>
                                        <th width="12%">
                                            Total
                                        </th>
                                        <th width="40%">
                                            Comentarios
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="body_conceptos">
                                    @foreach (var item in Model.GV_rel_gastos_solicitud)
                                    {
                                        <input type="hidden" name="GV_rel_gastos_solicitud[@contador].id_tipo_gastos_viaje" id="GV_rel_gastos_solicitud[@contador].id_tipo_gastos_viaje" value="@item.id_tipo_gastos_viaje" />
                                        <input type="hidden" name="GV_rel_gastos_solicitud[@contador].currency_iso" id="GV_rel_gastos_solicitud[@contador].currency_iso" value="MXN" />
                                        <tr>
                                            <td style="font-weight:bold">@item.GV_tipo_gastos_viaje.descripcion</td>
                                            <td style="text-align:right">
                                                $ @string.Format(System.Globalization.CultureInfo.GetCultureInfo("es-US"), "{0:N2}", item.importe)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format(System.Globalization.CultureInfo.GetCultureInfo("es-US"), "{0:N2}", item.cantidad)
                                            </td>
                                            <td id="total_fila_@contador" style="text-align:right" nowrap>
                                                $ @string.Format(System.Globalization.CultureInfo.GetCultureInfo("es-US"), "{0:N2}", item.total)
                                            </td>
                                            <td>
                                                @item.comentarios
                                            </td>
                                        </tr>
                                        contador++;
                                    }
                                </tbody>

                                <tfoot>
                                    <tr>
                                        <th colspan="3" style="text-align:right">Total</th>
                                        <th id="total_gastos" style="text-align:right" nowrap>$ @string.Format(System.Globalization.CultureInfo.GetCultureInfo("es-US"), "{0:N2}", Model.sumaGastosNacional) MXN</th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <div class="form-group row">

                        </div>

                        <div class="ln_solid"></div>

                        <div class="form-group row">
                            <span style="color:black"><b>RESERVACIONES</b></span>

                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.boletos_avion, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-1">
                                @Html.EditorFor(m => m.boletos_avion, new { htmlAttributes = new { @disabled = "disabled" } })
                            </div>
                            @Html.LabelFor(model => model.hospedaje, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-1">
                                @Html.EditorFor(m => m.hospedaje, new { htmlAttributes = new { @disabled = "disabled" } })
                            </div>
                        </div>

                        <div class="item form-group">
                            @Html.LabelFor(model => model.reservaciones_comentarios, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                        </div>
                        <div class="item form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.reservaciones_comentarios, new { @class = "form-control", @rows = "4", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group row">

                        </div>

                        <div class="ln_solid"></div>

                        <div class="form-group row">
                            <span style="color:black"><b>COMENTARIOS ADICIONALES</b></span>
                        </div>

                        <div class="item form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.comentario_adicional, new { @class = "form-control", @rows = "4", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="form-group row">

                        </div>

                        @if (!String.IsNullOrEmpty(Model.comentario_rechazo))
                        {
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:red"><b>RAZ&Oacute;N ANTERIOR DE RECHAZO</b></span>
                            </div>

                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.comentario_rechazo, new { @class = "form-control", @rows = "4", @autocomplete = "off", @readonly = "readonly" })
                                </div>

                            </div>
                        }
                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            <span style="color:black"><b>MOVIMIENTOS</b></span>
                        </div>

                        <div class="form-group row">
                            <!-- Solicitante -->
                            @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados5.ConcatNombre)" readonly>
                            <!-- Fecha validadcion -->
                            @Html.LabelFor(model => model.fecha_solicitud, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-4">
                                <input type="text" class="form-control col-md-12" value="@(Model.fecha_solicitud.Year > 2000 ? Model.fecha_solicitud.ToString() : "NO DISPONIBLE" )" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <!-- JEFE DIRECTO -->
                            @Html.LabelFor(model => model.id_jefe_directo, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados3.ConcatNombre)" readonly>

                            <!-- Fecha validacion -->
                            @Html.LabelFor(model => model.fecha_aceptacion_jefe_area, new { @class = "control-label col-md-2 float-right" })

                            <div class="col-md-4">
                                @if (Model.fecha_aceptacion_jefe_area.HasValue)
                                {
                                    <input type="text" class="form-control col-md-12" value="@Model.fecha_aceptacion_jefe_area.Value" readonly>
                                }
                                else if (Model.estatus == Bitacoras.Util.GV_solicitud_estatus.RECHAZADO_JEFE)
                                {
                                    <input type="text" class="form-control col-md-12" value="RECHAZADO" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control col-md-12" value="NO DISPONIBLE" readonly>
                                }
                            </div>
                        </div>
                        <div class="form-group row">
                            <!-- CONTROLLING -->
                            @Html.LabelFor(model => model.id_controlling, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados1.ConcatNombre)" readonly>

                            <!-- Fecha validacion -->
                            @Html.LabelFor(model => model.fecha_aceptacion_controlling, new { @class = "control-label col-md-2 float-right" })

                            <div class="col-md-4">
                                @if (Model.fecha_aceptacion_controlling.HasValue)
                                {
                                    <input type="text" class="form-control col-md-12" value="@Model.fecha_aceptacion_controlling.Value" readonly>
                                }
                                else if (Model.id_controlling.HasValue && Model.estatus == Bitacoras.Util.GV_solicitud_estatus.RECHAZADO_CONTROLLING)
                                {
                                    <input type="text" class="form-control col-md-12" value="RECHAZADO" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control col-md-12" value="NO DISPONIBLE" readonly>
                                }
                            </div>
                        </div>
                        <div class="form-group row">
                            <!-- NOMINA -->
                            @Html.LabelFor(model => model.id_nomina, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados4.ConcatNombre)" readonly>

                            <!-- Fecha validacion -->
                            @Html.LabelFor(model => model.fecha_aceptacion_nomina, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-4">
                                @if (Model.fecha_aceptacion_nomina.HasValue)
                                {
                                    <input type="text" class="form-control col-md-12" value="@Model.fecha_aceptacion_nomina.Value" readonly>
                                }
                                else if (Model.id_nomina.HasValue && Model.estatus == Bitacoras.Util.GV_solicitud_estatus.RECHAZADO_NOMINA)
                                {
                                    <input type="text" class="form-control col-md-12" value="RECHAZADO" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control col-md-12" value="NO DISPONIBLE" readonly>
                                }
                            </div>
                        </div>

                        <div class="form-group row">
                            <!-- CONTABILIDAD -->
                            @Html.LabelFor(model => model.id_contabilidad, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados.ConcatNombre)" readonly>

                            <!-- Fecha validacion -->
                            @Html.LabelFor(model => model.fecha_aceptacion_contabilidad, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-4">
                                @if (Model.fecha_aceptacion_contabilidad.HasValue)
                                {
                                    <input type="text" class="form-control col-md-12" value="@Model.fecha_aceptacion_contabilidad.Value" readonly>
                                }
                                else if (Model.id_contabilidad.HasValue && Model.estatus == Bitacoras.Util.GV_solicitud_estatus.RECHAZADO_CONTABILIDAD)
                                {
                                    <input type="text" class="form-control col-md-12" value="RECHAZADO" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control col-md-12" value="NO DISPONIBLE" readonly>
                                }
                            </div>
                        </div>
                        <div class="form-group row">
                            <!-- Usuario -->
                            @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1" })
                            <input type="text" class="form-control col-md-5" value="@Html.DisplayFor(model => model.empleados5.ConcatNombre)" readonly>

                            <!-- Fecha validacion -->
                            @Html.LabelFor(model => model.fecha_confirmacion_usuario, new { @class = "control-label col-md-2 float-right" })
                            <div class="col-md-4">
                                @if (Model.fecha_confirmacion_usuario.HasValue)
                                {
                                    <input type="text" class="form-control col-md-12" value="@Model.fecha_confirmacion_usuario.Value" readonly>
                                }
                                else if (Model.estatus == Bitacoras.Util.GV_solicitud_estatus.RECHAZADO_USUARIO)
                                {
                                    <input type="text" class="form-control col-md-12" value="RECHAZADO" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control col-md-12" value="NO DISPONIBLE" readonly>
                                }
                            </div>
                        </div>
                        <div class="ln_solid"></div>

                        <div class="item form-group">
                            <div class="col-md-6 col-sm-6 ">
                                <button type="submit" class="btn btn-danger btn-lg" onclick="mostrarModalRechazar()">Rechazar</button>
                            </div>
                            <div class="col-md-6 col-sm-6 ">
                                <button type="submit" class="btn btn-success btn-lg float-lg-right" onclick="mostrarModalAutorizar()">Autorizar</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div>
                    <br />
                    <a href="javascript: history.go(-1)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Modal Autorizar -->
<div class="modal fade" id="modalAutorizar" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Autorizar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("AutorizarJefeDirecto", null, FormMethod.Post, new { }))
            {
                <div class="modal-body">
                    <div class="form-group row">
                        <h6>¿Desea autorizar esta Solicitud de Gastos de Viaje y enviarla a Controlling para su autorizaci&oacute;n?</h6>
                    </div>
                    <br />
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.id)
                    <input type="hidden" id="s_estatus" name="s_estatus" value="@Model.s_estatus" />

                    <div class="form-group row">
                        <!-- Empleado -->
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.id_controlling, new { @class = "control-label col-md-12", @style = "text-align:left" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownList("id_controlling", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @required = "required" })
                            @Html.ValidationMessageFor(model => model.id_controlling, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-12">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Autorizar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Rechazar -->
<div class="modal fade" id="modalRechazar" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Rechazar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("RechazarJefeDirecto", null, FormMethod.Post, new { }))
            {
                <div class="modal-body">
                    <div class="form-group row">
                        <h6>¿Realmente desea rechazar esta solicitud?</h6>
                        <br />
                        <div class="col-md-12">
                            <h6>Raz&oacute;n de Rechazo:</h6>
                        </div>
                        <div class="col-md-12">

                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.id)
                            <input type="hidden" id="s_estatus" name="s_estatus" value="@Model.s_estatus" />
                            @Html.TextAreaFor(model => model.comentario_rechazo, new { @class = "form-control", @rows = "4", @autocomplete = "off", @required = "required" })
                            @Html.ValidationMessageFor(model => model.comentario_rechazo, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-warning">Rechazar</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Scripts/MvcFoolproofJQueryValidation.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")
    @Scripts.Render(Url.Content("~/Content/vendors/moment/moment.js"))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))



    <script>
        $(document).ready(function () {

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });

            //agrega evento para cambio de empleado
            calculaDias();            

            //input mask
            $('.precio').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'allowMinus': false, 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true });
            $('.cantidad').inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': false, 'allowMinus': false, 'placeholder': '0', 'autoUnmask': true, 'removeMaskOnSubmit': true });
        });

        //variable para formatear numeros
        internationalNumberFormat = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD'
        });

        //muestra el modal de autorizar
        function mostrarModalAutorizar() {
            $('#modalAutorizar').modal('show')

        }

        //muestra el modal de rechazar
        function mostrarModalRechazar() {
            $('#modalRechazar').modal('show')
        }

    //Calcula los dias del viaje
        function calculaDias() {
            var inicial = $('#@Html.IdFor(model => model.fecha_salida)').val();
            var regreso = $('#@Html.IdFor(model => model.fecha_regreso)').val();

            var a = moment(inicial);
            var b = moment(regreso)

            if (moment(inicial).isValid() && moment(regreso).isValid()) {
                //calcula la diferencia y actualiza los días
                var dias = b.diff(a, 'days');
                dias = dias + 1;

                $('#num_dias').val(dias);

                if (dias < 1) {
                    $('#num_dias').val("--");
                }
            } else {
                $('#num_dias').val("--");
            }

        }

        window.onload = function () {
            clicMenu(1);
        }
    </script>
}


