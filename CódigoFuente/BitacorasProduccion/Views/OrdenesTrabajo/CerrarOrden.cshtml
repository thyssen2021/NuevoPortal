@model Portal_2_0.Models.orden_trabajo
@using Bitacoras.Util;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Cerrar Orden de Trabajo";
    ViewBag.PrimerNivel = "orden_trabajo";
    ViewBag.SegundoNivel = "mis_solicitudes";
    ViewBag.ControllerName = "OrdenesTrabajo";

    int contador = 200;

}


@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/flat/green.css")" rel="stylesheet">

    <style>
        .text_derecha {
            text-align: right;
        }
    </style>

}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    @*<div class="x_title">
                            <h2>@ViewBag.Title</h2>
                            <div class="clearfix"></div>
                        </div>*@
                    <div class="x_content">
                        <br />



                        <div class="form-group row">
                            <div class="col-md-12" style="text-align:center">
                                <h3 class="green"><i class="fa fa-paste"></i> &Oacute;rden de Trabajo</h3>
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        @if (!Html.ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger" role="alert">
                                @Html.ValidationSummary("", new { @class = "text-white" })
                            </div>
                        }

                        <div class="form-group row">
                            <span style="color:black"><b>ESTATUS</b></span>
                        </div>
                        <!-- Smart Wizard -->
                        <div id="wizard" class="form_wizard wizard_horizontal">
                            <ul class="wizard_steps">
                                <li>
                                    <a class="@(Model.estatus == OT_Status.ABIERTO ? "selected" : "done" )" isdone="1">
                                        <span class="step_no">1</span>
                                        <span class="step_descr" style="@(Model.estatus == OT_Status.ABIERTO ? "font-weight: bold" : "" )">
                                            @OT_Status.DescripcionStatus(OT_Status.ABIERTO)
                                            <br />
                                            <span>@Model.fecha_solicitud.ToString("yyyy-MM-dd")</span>
                                        </span>

                                    </a>
                                </li>
                                <li>
                                    <a class="@(Model.estatus == OT_Status.ASIGNADO ? "selected" : Model.estatus == OT_Status.ABIERTO? "disabled":"done" )" isdone="2">
                                        <span class="step_no">2</span>
                                        <span class="step_descr" style="@(Model.estatus == OT_Status.ASIGNADO ? "font-weight: bold" : "" )">
                                            @OT_Status.DescripcionStatus(OT_Status.ASIGNADO)
                                            <br />
                                            @if (Model.fecha_asignacion.HasValue)
                                            {
                                                <span>@Model.fecha_asignacion.Value.ToString("yyyy-MM-dd")</span>
                                            }
                                        </span>
                                    </a>
                                </li>
                                <li>
                                    <a class="@(Model.estatus == OT_Status.EN_PROCESO ? "selected" : Model.estatus == OT_Status.ABIERTO || Model.estatus == OT_Status.ASIGNADO ? "disabled":"done" )" isdone="3">
                                        <span class="step_no">3</span>
                                        <span class="step_descr" style="@(Model.estatus == OT_Status.EN_PROCESO ? "font-weight: bold" : "" )">
                                            @OT_Status.DescripcionStatus(OT_Status.EN_PROCESO)
                                            <br />
                                            @if (Model.fecha_en_proceso.HasValue)
                                            {
                                                <span>@Model.fecha_en_proceso.Value.ToString("yyyy-MM-dd")</span>
                                            }
                                        </span>

                                    </a>
                                </li>
                                <li>
                                    <a class="@(Model.estatus == OT_Status.CERRADO ? "selected" : "disabled" )" isdone="4">
                                        <span class="step_no">4</span>
                                        <span class="step_descr" style="@(Model.estatus == OT_Status.CERRADO ? "font-weight: bold" : "" )">
                                            @OT_Status.DescripcionStatus(OT_Status.CERRADO)
                                            <br />
                                            @if (Model.fecha_cierre.HasValue)
                                            {
                                                <span>@Model.fecha_cierre.Value.ToString("yyyy-MM-dd")</span>
                                            }
                                        </span>
                                    </a>
                                </li>
                            </ul>

                        </div>
                        <!-- End SmartWizard Content -->
                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            <span style="color:black"><b>DATOS GENERALES</b></span>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.id, new { @class = "control-label col-md-11 text_derecha" })
                            <div class="col-md-1">
                                <input type="text" class="form-control" value="@Model.id" readonly>
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            <!--solicitante-->
                            @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-4">
                                <input type="text" class="form-control" value="@Model.empleados2.ConcatNombre" readonly>
                            </div>
                            <!-- Área -->
                            @Html.LabelFor(model => model.id_area, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-3">
                                <input type="text" class="form-control col-md-12 " value="@(Model.Area != null ? Model.Area.descripcion : "NO DISPONIBLE" )" readonly>
                            </div>
                            <!--Fecha solicitud-->
                            @Html.LabelFor(model => model.fecha_solicitud, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-2">
                                <input type="text" class="form-control " value="@Model.fecha_solicitud.ToString("yyyy-MM-dd")" readonly>
                            </div>
                        </div>

                        <div class="form-group row">
                            @if (Model.produccion_lineas != null)
                            {
                                <!--id linea-->
                                @Html.LabelFor(model => model.id_linea, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-3">
                                    <input type="text" class="form-control " value="@Model.produccion_lineas.linea" readonly>
                                </div>
                                <!--Zona Falla-->
                                @Html.LabelFor(model => model.id_zona_falla, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-3">
                                    @if (Model.id_zona_falla != null)
                                    {
                                        <input type="text" class="form-control " value="@Html.DisplayFor(model => model.OT_zona_falla.zona_falla)" readonly>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control " value="N/A" readonly>
                                    }
                                </div>
                            }
                            <!--Correo-->
                            @Html.LabelFor(model => model.empleados2.correo, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-3">
                                @if (Model.empleados2 != null && !String.IsNullOrEmpty(Model.empleados2.correo))
                                {
                                    <input type="text" class="form-control " value="@Model.empleados2.correo" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control " value="NO DISPONIBLE" readonly>
                                }

                            </div>
                        </div>


                        <div class="form-group row">
                            <!--Titulo-->
                            @Html.LabelFor(model => model.titulo, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-8">
                                <input type="text" class="form-control " value="@Model.titulo" readonly>
                            </div>
                            <!--Urgencia-->
                            @Html.LabelFor(model => model.nivel_urgencia, new { @class = "control-label col-md-1 text_derecha" })
                            <div class="col-md-2">
                                <input type="text" class="form-control " value="@Bitacoras.Util.OT_nivel_urgencia.DescripcionStatus(Model.nivel_urgencia)" readonly>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            @if (Model.tpm)
                            {
                                <!--TPM-->
                                @Html.LabelFor(model => model.tpm, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1 checkbox">
                                    @Html.EditorFor(m => m.tpm, new { htmlAttributes = new { @class = "flat", @autocomplete = "off", @disabled = "disabled" } })
                                </div>
                            }
                            else
                            {
                                @Html.LabelFor(model => model.tpm, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1">
                                    NO APLICA
                                </div>
                            }
                            @if (Model.tpm && Model.OT_grupo_trabajo != null)
                            {
                                <div id="tpm_values">
                                    @Html.LabelFor(model => model.numero_tarjeta, new { @class = "control-label col-md-2 text_derecha" })
                                    <div class="col-md-4">
                                        <input type="text" class="form-control " value="@Model.numero_tarjeta" readonly>
                                    </div>
                                    <!--Grupo de trabajo-->
                                    @Html.LabelFor(model => model.id_grupo_trabajo, new { @class = "control-label col-md-2 text_derecha" })
                                    <div class="col-md-4">
                                        <input type="text" class="form-control " value="@Model.OT_grupo_trabajo.descripcion" readonly>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="item form-group">
                            @Html.LabelFor(model => model.descripcion, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                        </div>
                        <div class="item form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", @rows = "4", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="ln_solid"></div>


                        @foreach (var file in Model.OT_rel_archivos.Where(x => x.tipo == Bitacoras.Util.OT_tipo_documento.SOLICITUD))
                        {
                            <div class="form-group row" id="div_document_support_info">
                                <label class="control-label col-md-2">Documento Solictud @(Model.OT_rel_archivos.Where(x => x.tipo == Bitacoras.Util.OT_tipo_documento.SOLICITUD).ToList().IndexOf(file) + 1) </label>
                                <div class="col-md-7">
                                    <input type="text" class="form-control col-md-12" style="text-align: right;" value="@file.biblioteca_digital.Nombre" readonly>
                                </div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("DownloadFile","Combos", new { idDocumento = file.id_documento})" class="btn btn-success btm-sm" title="Download">
                                        <i class="fa fa-download"></i>
                                    </a>
                                    <a href="@Url.Action("DownloadFile","Combos", new { idDocumento = file.id_documento, inline=true})" class="btn btn-info btm-sm" target="_blank" title="Inline">
                                        <i class="fa-regular fa-eye"></i>
                                    </a>
                                </div>

                            </div>
                        }

                        @if (Model.OT_rel_archivos.Where(x => x.tipo == Bitacoras.Util.OT_tipo_documento.SOLICITUD).Count() == 0)
                        {
                            <div class="form-group row" id="div_document_support_info">
                                <p>No hay archivos disponibles</p>

                            </div>
                        }


                        <div class="form-group row">
                            <span style="color:black"><b>ASIGNACI&Oacute;N</b></span>
                        </div>

                        <div class="form-group row">
                            <!-- Responsable -->
                            @Html.LabelFor(model => model.id_responsable, new { @class = "control-label col-md-1 text_derecha" })

                            @if (Model.id_responsable.HasValue && Model.empleados1 != null)
                            {
                                <input type="text" class="form-control col-md-5" value="@Model.empleados1.ConcatNombre" readonly>
                            }
                            else
                            {
                                <input type="text" class="form-control col-md-5" value="PENDIENTE" readonly>
                            }


                            <!-- Fecha asignación -->
                            @Html.LabelFor(model => model.fecha_asignacion, new { @class = "control-label col-md-2 text_derecha" })

                            <div class="col-md-3">

                                <input type="text" class="form-control col-md-12" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly>

                            </div>
                        </div>


                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            <span style="color:black"><b>LISTADO DE REFACCIONES</b></span>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-6 ">
                                <b>REFACCIONES NECESARIAS</b>
                            </div>
                            <div class="col-md-6 ">
                                <b>REFACCIONES FALTANTES</b>
                            </div>
                        </div>

                        @using (Html.BeginForm("CerrarOrden", "OrdenesTrabajo", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()
                            <!-- campos oculto obligatorios-->
                            @Html.HiddenFor(model => model.id)
                            @Html.HiddenFor(model => model.nivel_urgencia)
                            @Html.HiddenFor(model => model.titulo)
                            @Html.HiddenFor(model => model.descripcion)
                            @Html.HiddenFor(model => model.estatus)

                            @* input para saber si está o no activo el campo de soporte *@
                            <input type="hidden" name="cambio_documento_soporte" id="cambio_documento_soporte" value="0" />

                            <div class="form-group row">
                                <div class="col-md-6 table-responsive">
                                    <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                            <tr style=" background-color: #0094ff; color: azure;">
                                                <th width="1%">
                                                    #
                                                </th>
                                                <th width="20%">
                                                    Cantidad
                                                </th>
                                                <th width="60%">
                                                    Descripci&oacute;n
                                                </th>
                                                <th>

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="body_necesarias">

                                            @foreach (Portal_2_0.Models.OT_refacciones item in Model.OT_refacciones.Where(x => x.tipo == Bitacoras.Util.OT_tipo_refaccion.NECESARIA))
                                            {
                                                <tr id="div_concepto_@contador">
                                                    <input type="hidden" name="OT_refacciones[@contador].id" id="OT_refacciones[@contador].id" value="@item.id" />
                                                    <input type="hidden" name="OT_refacciones[@contador].id_orden_trabajo" id="OT_refacciones[@contador].id_orden_trabajo" value="@Model.id" />
                                                    <input type="hidden" name="OT_refacciones[@contador].tipo" id="OT_refacciones[@contador].tipo" value="@Bitacoras.Util.OT_tipo_refaccion.NECESARIA" />

                                                    <td class="input-contador-conceptos"></td>
                                                    <td>
                                                        <input style="text-align:right; font-size: 12px;" type="number" step="0.01" min="0" name="OT_refacciones[@contador].cantidad" id="OT_refacciones[@contador].cantidad" class="form-control col-md-12 debe" value="@item.cantidad" autocomplete="off" required>
                                                        <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[@contador].cantidad" data-valmsg-replace="true"></span>
                                                    </td>
                                                    <td>
                                                        <textarea style="font-size: 12px;" type="text" name="OT_refacciones[@contador].descripcion" id="OT_refacciones[@contador].descripcion" class="form-control col-md-12" autocomplete="off" maxlength="155" required>@item.descripcion</textarea>
                                                        <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[@contador].descripcion" data-valmsg-replace="true"></span>
                                                    </td>
                                                    <td>
                                                        <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarConcepto(@contador); return false;">
                                                    </td>
                                                </tr>

                                                contador++;
                                            }


                                        </tbody>

                                        <tfoot>
                                            <tr>
                                                <th colspan="4" style="text-align:right">
                                                    <div class="col-md-4">
                                                        <input type="button" value="Agregar" class="btn btn-round btn-warning float-right" onclick="AgregarConcepto(); return false;">
                                                    </div>
                                                </th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                                @* REFACCIONES FALTANTES*@
                                <div class="col-md-6 table-responsive">
                                    <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                            <tr style=" background-color: #0094ff; color: azure;">
                                                <th width="1%">
                                                    #
                                                </th>
                                                <th width="20%">
                                                    Cantidad
                                                </th>
                                                <th width="60%">
                                                    Descripci&oacute;n
                                                </th>
                                                <th>

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="body_faltantes">

                                            @foreach (Portal_2_0.Models.OT_refacciones item in Model.OT_refacciones.Where(x => x.tipo == Bitacoras.Util.OT_tipo_refaccion.FALTANTE))
                                            {
                                                <tr id="div_concepto_@contador">
                                                    <input type="hidden" name="OT_refacciones[@contador].id" id="OT_refacciones[@contador].id" value="@item.id" />
                                                    <input type="hidden" name="OT_refacciones[@contador].id_orden_trabajo" id="OT_refacciones[@contador].id_orden_trabajo" value="@Model.id" />
                                                    <input type="hidden" name="OT_refacciones[@contador].tipo" id="OT_refacciones[@contador].tipo" value="@Bitacoras.Util.OT_tipo_refaccion.FALTANTE" />

                                                    <td class="input-contador-conceptos_faltantes"></td>
                                                    <td>
                                                        <input style="text-align:right; font-size: 12px;" type="number" step="0.01" min="0" name="OT_refacciones[@contador].cantidad" id="OT_refacciones[@contador].cantidad" class="form-control col-md-12 debe" value="@item.cantidad" autocomplete="off" required>
                                                        <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[@contador].cantidad" data-valmsg-replace="true"></span>
                                                    </td>
                                                    <td>
                                                        <textarea style="font-size: 12px;" type="text" name="OT_refacciones[@contador].descripcion" id="OT_refacciones[@contador].descripcion" class="form-control col-md-12" autocomplete="off" maxlength="155" required>@item.descripcion</textarea>
                                                        <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[@contador].descripcion" data-valmsg-replace="true"></span>
                                                    </td>
                                                    <td>
                                                        <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarConcepto(@contador); return false;">
                                                    </td>
                                                </tr>

                                                contador++;
                                            }


                                        </tbody>

                                        <tfoot>
                                            <tr>
                                                <th colspan="4" style="text-align:right">
                                                    <div class="col-md-4">
                                                        <input type="button" value="Agregar" class="btn btn-round btn-warning float-right" onclick="AgregarConceptoFaltante(); return false;">
                                                    </div>
                                                </th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>COMENTARIO</b></span>
                            </div>


                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.comentario, new { @class = "form-control", @rows = "4", @autocomplete = "off", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.comentario, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>DOCUMENTOS EVIDENCIA</b></span>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 1 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileCierre_1, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileCierre_1" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileCierre_1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 2 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileCierre_2, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileCierre_2" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileCierre_2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 3 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileCierre_3, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileCierre_3" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileCierre_3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 4 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileCierre_4, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileCierre_4" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileCierre_4, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group row">

                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="button" class="btn btn-success btn-lg float-lg-right" onclick="showDialog()"><i class="fa fa-sign-out"></i>  Cerrar Orden</button>
                                </div>

                            </div>


                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a onclick="volverAtras()" class="btn btn-round btn-info btm-sm float-left" title="Volver" style="color:white">
                        <i class="fa fa-arrow-circle-left"></i> Volver
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form_cambio" }))
{
    @Html.AntiForgeryToken()

    <input type="hidden" value="id" id="@Model.id" />
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <script src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))


    <script>
        $(document).ready(function () {

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            jQuery.extend(jQuery.validator.messages, {
                step: jQuery.validator.format("Sólo dos decimales"),
                required: "Campo obligatorio.",
            });

            AsignaNumeroConcepto();

            //inicializa en input file
            bsCustomFileInput.init()

            //aumenta en uso cada vez que se hace un cambio en el archivo de soporte
            $("#PostedFileCierre").on("change", function () {
                document.getElementById('cambio_documento_soporte').value = ++documento_soporte_cambios;
            });

        });

        //variable para saber si ha cambiado el formulario y asi no se detenga por doble submit
        var documento_soporte_cambios = 1;

        //variable global para el id
        var num = 0;

        //agrega una fila para los conceptos
        function AgregarConcepto() {


            $("#body_necesarias").append(
                `
                                                <tr id="div_concepto_` + num + `">
                                                <input type="hidden" name="OT_refacciones[` + num + `].id" id="OT_refacciones[` + num + `].id" value="0" />
                                                <input type="hidden" name="OT_refacciones[` + num + `].id_orden_trabajo" id="OT_refacciones[` + num + `].id_orden_trabajo" value="@Model.id" />
                                                <input type="hidden" name="OT_refacciones[` + num + `].tipo" id="OT_refacciones[` + num + `].tipo" value="@Bitacoras.Util.OT_tipo_refaccion.NECESARIA" />

                                                <td class="input-contador-conceptos"></td>
                                                <td>
                                                    <input style="text-align:right; font-size: 12px;" type="number" step="0.01" min="0" name="OT_refacciones[` + num + `].cantidad" id="OT_refacciones[` + num + `].cantidad" class="form-control col-md-12 debe" value="" autocomplete="off" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[` + num + `].cantidad" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <textarea style="font-size: 12px;" type="text" name="OT_refacciones[` + num + `].descripcion" id="OT_refacciones[` + num + `].descripcion" class="form-control col-md-12" autocomplete="off" maxlength="155" required></textarea>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[` + num + `].descripcion" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarConcepto(` + num + `); return false;">
                                                </td>
                                            </tr>


                                                   `
            );

            $("#div_concepto_" + num).hide().fadeIn(700);

            num++;

            AsignaNumeroConcepto()
        }

        //agrega una fila para los conceptos
    function AgregarConceptoFaltante() {


        $("#body_faltantes").append(
                `
                                                <tr id="div_concepto_` + num + `">
                                                <input type="hidden" name="OT_refacciones[` + num + `].id" id="OT_refacciones[` + num + `].id" value="0" />
                                                <input type="hidden" name="OT_refacciones[` + num + `].id_orden_trabajo" id="OT_refacciones[` + num + `].id_orden_trabajo" value="@Model.id" />
                                                <input type="hidden" name="OT_refacciones[` + num + `].tipo" id="OT_refacciones[` + num + `].tipo" value="@Bitacoras.Util.OT_tipo_refaccion.FALTANTE" />

                                                <td class="input-contador-conceptos_faltantes"></td>
                                                <td>
                                                    <input style="text-align:right; font-size: 12px;" type="number" step="0.01" min="0" name="OT_refacciones[` + num + `].cantidad" id="OT_refacciones[` + num + `].cantidad" class="form-control col-md-12 debe" value="" autocomplete="off" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[` + num + `].cantidad" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <textarea style="font-size: 12px;" type="text" name="OT_refacciones[` + num + `].descripcion" id="OT_refacciones[` + num + `].descripcion" class="form-control col-md-12" autocomplete="off" maxlength="155" required></textarea>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="OT_refacciones[` + num + `].descripcion" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarConcepto(` + num + `); return false;">
                                                </td>
                                            </tr>


                                                   `
            );

            $("#div_concepto_" + num).hide().fadeIn(700);

            num++;

            AsignaNumeroConcepto()
        }

    //numera los concepto
    function AsignaNumeroConcepto() {
        let indice = 1;

        $('.input-contador-conceptos').each(function (index) {
            $(this).html(indice);
            indice++;
        });

        indice = 1;

        $('.input-contador-conceptos_faltantes').each(function (index) {
            $(this).html(indice);
            indice++;
        });
        }

        function showDialog() {

                Swal.fire({
                    title: 'Confirmación',
                    text: "¿Realmente desea cerrar esta solicitud?",
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Continuar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */

                    if (result.isConfirmed) {
                        /*  Swal.fire('Saved!', '', 'success')*/
                        $('#formulario').submit();
                    } else if (result.isDismissed) {
                        /*Swal.fire('Los cambios no han sido guardados.', '', 'info')*/
                    }
                });

        }

    function borrarConcepto(id) {

        $("#div_concepto_" + id).fadeOut(500, function () {
            $(this).remove();
        });

        setTimeout(AsignaNumeroConcepto, 550);

    }



        window.onload = function () {
            clicMenu(1);
        }
    </script>
}

