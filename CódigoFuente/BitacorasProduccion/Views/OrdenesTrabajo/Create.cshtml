@model Portal_2_0.Models.orden_trabajo

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Crear Solicitud de Órden de Trabajo";
    ViewBag.PrimerNivel = "orden_trabajo";
    ViewBag.SegundoNivel = "crear_solicitud";
    ViewBag.ControllerName = "OrdenesTrabajo";

    Portal_2_0.Models.empleados solicitante = (Portal_2_0.Models.empleados)ViewBag.Solicitante;

}


@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/flat/green.css")" rel="stylesheet">

    <style>
        .text_derecha {
            text-align: right;
        }
    </style>

}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    @*<div class="x_title">
                            <h2>@ViewBag.Title</h2>
                            <div class="clearfix"></div>
                        </div>*@
                    <div class="x_content">
                        <br />

                        @using (Html.BeginForm("Create", "OrdenesTrabajo", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group row">
                                <div class="col-md-12" style="text-align:center">
                                    <h3 class="green"><i class="fa fa-paste"></i> &Oacute;rden de Trabajo</h3>
                                </div>
                            </div>


                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            //Valores ocultos
                            <input type="hidden" id="id_solicitante" name="id_solicitante" value="@solicitante.id">
                            <input type="hidden" id="estatus" name="estatus" value="@Bitacoras.Util.OT_Status.ABIERTO">
                            @* input para saber si está o no activo el campo de soporte *@
                            <input type="hidden" name="cambio_documento_soporte" id="cambio_documento_soporte" value="0" />

                            if (solicitante.Area != null)
                            {
                                <input type="hidden" id="id_area" name="id_area" value="@solicitante.Area.clave">
                            }

                            //@Html.HiddenFor(model => model.id_planta)


                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>DATOS GENERALES</b></span>
                            </div>
                            <div class="form-group row">
                                <!--solicitante-->
                                @Html.LabelFor(model => model.id_solicitante, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-4">
                                    <input type="text" class="form-control" value="@solicitante.ConcatNombre" readonly>
                                    @Html.ValidationMessageFor(model => model.id_solicitante, "", new { @class = "text-danger" })
                                </div>

                                <!-- Área -->
                                @Html.LabelFor(model => model.id_area, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-3">
                                    <input type="text" class="form-control col-md-12 text_derecha" value="@(solicitante.Area != null ? solicitante.Area.descripcion : "NO DISPONIBLE" )" readonly>
                                    @Html.ValidationMessageFor(model => model.id_area, "", new { @class = "text-danger" })
                                </div>

                                <!--Fecha solicitud-->
                                @Html.LabelFor(model => model.fecha_solicitud, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-2">
                                    <input type="text" class="form-control text_derecha" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly>
                                    @Html.ValidationMessageFor(model => model.fecha_solicitud, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            if (ViewBag.MuestraLineas != null && ViewBag.MuestraLineas)
                            {

                                <div class="form-group row">
                                    <!--id linea-->
                                    @Html.LabelFor(model => model.id_linea, new { @class = "control-label col-md-1 text_derecha" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("id_linea", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.id_linea, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            @*<div class="form-group row">
                <span style="color:black"><b>DESCRIPCI&Oacute;N</b></span>
            </div>*@
                            <div class="form-group row">
                                <!--Titulo-->
                                @Html.LabelFor(model => model.titulo, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-8">
                                    @Html.EditorFor(m => m.titulo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
                                </div>
                                <!--Urgencia-->
                                @Html.LabelFor(model => model.nivel_urgencia, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-2">
                                    @Html.DropDownList("nivel_urgencia", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.nivel_urgencia, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <!--TPM-->
                                @Html.LabelFor(model => model.tpm, new { @class = "control-label col-md-1 text_derecha" })
                                <div class="col-md-1 checkbox">
                                    @Html.EditorFor(m => m.tpm, new { htmlAttributes = new { @class = "flat", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.tpm, "", new { @class = "text-danger" })
                                </div>
                                <div id="tpm_values">
                                    @Html.LabelFor(model => model.numero_tarjeta, new { @class = "control-label col-md-2 text_derecha" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(m => m.numero_tarjeta, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.numero_tarjeta, "", new { @class = "text-danger" })
                                    </div>
                                    <!--Grupo de trabajo-->
                                    @Html.LabelFor(model => model.id_grupo_trabajo, new { @class = "control-label col-md-2 text_derecha" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("id_grupo_trabajo", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.id_grupo_trabajo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.descripcion, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })

                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>DOCUMENTOS SOLICITUD</b></span>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 1 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileSolicitud_1, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileSolicitud_1" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileSolicitud_1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 2 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileSolicitud_2, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileSolicitud_2" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileSolicitud_2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 3 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileSolicitud_3, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileSolicitud_3" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileSolicitud_3, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-2">Documento 4 (opcional) </label>
                                <div class="col-md-6">

                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.PostedFileSolicitud_4, new { @class = "custom-file-input", type = "file", @accept = ".xls,.xlsx,.png, .jpeg, .jpg, .pdf, .doc, .docx, .rar, .zip, .eml" })
                                            <label class="custom-file-label" for="PostedFileSolicitud_4" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PostedFileSolicitud_4, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>

                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="submit" class="btn btn-success btn-lg float-lg-right"> <i class="fa-regular fa-floppy-disk"></i>&nbsp; Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a onclick="volverAtras()" class="btn btn-round btn-info btm-sm" title="Volver" style="color:white">
                        <i class="fa fa-arrow-circle-left"></i> Volver
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render("~/bundles/dataTables_js")
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    @Scripts.Render(Url.Content("~/Scripts/MvcFoolproofJQueryValidation.js"))
    <script src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>
    <script>
        $(document).ready(function () {

            //inicializa en input file
            bsCustomFileInput.init()

            // Initialize Select2 Elements (debe ir después de asignar el valor)
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            //aumenta en uso cada vez que se hace un cambio en el archivo de soporte
            $("#PostedFileSolicitud").on("change", function () {
                document.getElementById('cambio_documento_soporte').value = ++documento_soporte_cambios;
            });

            $('input').on('ifChecked', function (event) {
                verificaTPM(500);
            });

            $('input').on('ifUnchecked', function (event) {
                verificaTPM(500);
            });

            //una vez cargada la página verifica si mostrar o no TPM
            verificaTPM(0);

        });

        function verificaTPM(tiempo) {
            var isChecked = $("#tpm").prop("checked");

            if (isChecked) {
                $('#tpm_values').show(tiempo);
            } else {
                $('#tpm_values').hide(tiempo);
            }
        }

        //variable para saber si ha cambiado el formulario y asi no se detenga por doble submit
        var documento_soporte_cambios = 1;

        window.onload = function () {
            clicMenu(1);
        }
    </script>
}

