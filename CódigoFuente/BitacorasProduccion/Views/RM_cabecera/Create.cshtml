@model Portal_2_0.Models.RM_cabecera

@{
    ViewBag.Title = "Creación de Remisión Manual";
    ViewBag.PrimerNivel = "remisiones_manuales";
    ViewBag.SegundoNivel = "listado_remisiones";
    ViewBag.ControllerName = ViewContext.RouteData.Values["controller"];

    Clases.Util.MensajesSweetAlert mensajeAlerta = (Clases.Util.MensajesSweetAlert)ViewBag.MensajeAlert;

    Portal_2_0.Models.empleados EmpleadoActual = (Portal_2_0.Models.empleados)ViewBag.EmpleadoActual;
    int contador = 200;
}

@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/blue.css")" rel="stylesheet">
    <style>
        .derecha {
            text-align: right;
        }

    </style>

}

<div class="right_col" role="main">
    <div class="">
        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_content">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", @id = "formulario" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group row">
                                <div class="col-md-12" style="text-align:center">
                                    <h3 class="green"><i class="fa-solid fa-file-lines"></i> REMISI&Oacute;N PROVISIONAL</h3>
                                </div>
                            </div>
                            <div class="ln_solid"></div>

                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            <input type="hidden" name="activo" id="activo" value="true" />
                            <div class="form-group row">
                                <span style="color:black"><b>DATOS GENERALES</b></span>
                            </div>

                            <div class="form-group row">
                                <label class="control-label col-md-1">Fecha de Creaci&oacute;n</label>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" value="@DateTime.Now.ToShortDateString()" readonly>
                                </div>
                                <label class="control-label col-md-2 derecha">Nombre Capturista</label>
                                <div class="col-md-4">
                                    <input type="text" class="form-control" value="@Html.DisplayFor(model => EmpleadoActual.ConcatNumEmpleadoNombre)" readonly>
                                </div>
                                <label class="control-label col-md-2 derecha">@Html.DisplayNameFor(model => model.remisionNumero)</label>
                                <div class="col-md-1">
                                    <input type="text" class="form-control" value="" readonly>
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>ALMAC&Eacute;N</b></span>
                            </div>

                            <div class="form-group row">
                                <!--Planta Clave-->
                                @Html.LabelFor(model => model.id_planta, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.DropDownList("id_planta", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_planta, "", new { @class = "text-danger" })
                                </div>

                                <!--Almacen Clave-->
                                @Html.LabelFor(model => model.almacenClave, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.DropDownList("almacenClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.almacenClave, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.retornaMaterial, htmlAttributes: new { @class = "control-label col-md-1 derecha", @data_toggle = "tooltip", @data_placement = "top", @title = "Marcar si retorna el material." })
                                <div class="col-md-1" data-toggle="tooltip" data-placement="top" title="Marcar si retorna el material.">
                                    @Html.EditorFor(model => model.retornaMaterial, new { htmlAttributes = new { @class = "check" } })
                                    @Html.ValidationMessageFor(model => model.retornaMaterial, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>MOTIVO</b></span>
                            </div>

                            <div class="form-group row">
                                <!--Motivo Clave-->
                                @Html.LabelFor(model => model.motivoClave, new { @class = "control-label col-md-1" })
                                <div class="col-md-5">
                                    @Html.DropDownList("motivoClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.motivoClave, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="item form-group">
                                @Html.LabelFor(model => model.motivoTexto, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.motivoTexto, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.motivoTexto, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>CLIENTE</b></span>
                            </div>

                            <div class="form-group row">
                                <!--Cliente Clave-->
                                @Html.LabelFor(model => model.clienteClave, new { @class = "control-label col-md-1" })
                                <div class="col-md-4">
                                    @if (Model.aplicaClienteOtro)
                                    {
                                        @Html.DropDownList("clienteClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("clienteClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    }
                                    @Html.ValidationMessageFor(model => model.clienteClave, "", new { @class = "text-danger" })
                                </div>
                                <!--Aplica otro?-->
                                @Html.LabelFor(model => model.aplicaClienteOtro, htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-1">
                                    @Html.EditorFor(model => model.aplicaClienteOtro, new { htmlAttributes = new { @class = "check", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.aplicaClienteOtro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <!--Cliente Otro-->
                                @Html.LabelFor(model => model.clienteOtro, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-4">
                                    @if (Model.aplicaClienteOtro)
                                    {
                                        @Html.EditorFor(model => model.clienteOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.clienteOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.clienteOtro, "", new { @class = "text-danger" })
                                </div>
                                <!--Cliente Otro Dirección-->
                                @Html.LabelFor(model => model.clienteOtroDireccion, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-6">
                                    @if (Model.aplicaClienteOtro)
                                    {
                                        @Html.EditorFor(model => model.clienteOtroDireccion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.clienteOtroDireccion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.clienteOtroDireccion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>ENVIADO A</b></span>
                            </div>

                            <div class="form-group row">
                                <!--Enviado A Clave-->
                                @Html.LabelFor(model => model.enviadoAClave, new { @class = "control-label col-md-1" })
                                <div class="col-md-4">
                                    @if (Model.aplicaEnviadoOtro)
                                    {
                                        @Html.DropDownList("enviadoAClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("enviadoAClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    }
                                    @Html.ValidationMessageFor(model => model.enviadoAClave, "", new { @class = "text-danger" })
                                </div>
                                <!--Aplica otro?-->
                                @Html.LabelFor(model => model.aplicaEnviadoOtro, htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-1">
                                    @Html.EditorFor(model => model.aplicaEnviadoOtro, new { htmlAttributes = new { @class = "check", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.aplicaEnviadoOtro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <!--Enviado a Otro-->
                                @Html.LabelFor(model => model.enviadoAOtro, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-4">
                                    @if (Model.aplicaEnviadoOtro)
                                    {
                                        @Html.EditorFor(model => model.enviadoAOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.enviadoAOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.enviadoAOtro, "", new { @class = "text-danger" })
                                </div>
                                <!--Enviado A Otro Dirección-->
                                @Html.LabelFor(model => model.enviadoAOtroDireccion, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-6">
                                    @if (Model.aplicaEnviadoOtro)
                                    {
                                        @Html.EditorFor(model => model.enviadoAOtroDireccion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.enviadoAOtroDireccion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.enviadoAOtroDireccion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>TRANSPORTE</b></span>
                            </div>

                            <div class="form-group row">
                                <!--Transporte Clave-->
                                @Html.LabelFor(model => model.transporteProveedorClave, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @if (Model.aplicaTransporteOtro)
                                    {
                                        @Html.DropDownList("transporteProveedorClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("transporteProveedorClave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    }
                                    @Html.ValidationMessageFor(model => model.transporteProveedorClave, "", new { @class = "text-danger" })
                                </div>
                                <!--Aplica otro?-->
                                @Html.LabelFor(model => model.aplicaTransporteOtro, htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-1">
                                    @Html.EditorFor(model => model.aplicaTransporteOtro, new { htmlAttributes = new { @class = "check", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.aplicaTransporteOtro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <!--Transporte Otro-->
                                @Html.LabelFor(model => model.transporteOtro, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-4">
                                    @if (Model.aplicaTransporteOtro)
                                    {
                                        @Html.EditorFor(model => model.transporteOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.transporteOtro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.transporteOtro, "", new { @class = "text-danger" })
                                </div>
                                <!--placa tractor-->
                                @Html.LabelFor(model => model.placaTractor, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.placaTractor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.placaTractor, "", new { @class = "text-danger" })
                                </div>
                                <!--placa remolque-->
                                @Html.LabelFor(model => model.placaRemolque, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.placaRemolque, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.placaRemolque, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <!--Nombre Chofer-->
                                @Html.LabelFor(model => model.nombreChofer, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.nombreChofer, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.nombreChofer, "", new { @class = "text-danger" })
                                </div>
                                <!--Horario de Descarga-->
                                @Html.LabelFor(model => model.horarioDescarga, htmlAttributes: new { @class = "control-label col-md-1 control-label col-md-1 float-right" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.horarioDescarga, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.horarioDescarga, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>ELEMENTOS</b></span>
                            </div>
                            <div class="table-responsive">
                                <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr style=" background-color: #0094ff; color: azure;">
                                            <th width="1%">
                                                #
                                            </th>
                                            <th width="15%">
                                                N&uacute;mero de parte
                                            </th>
                                            <th width="15%">
                                                N&uacute;mero de material
                                            </th>
                                            <th width="15%">
                                                Lote
                                            </th>
                                            <th width="15%">
                                                N&uacute;mero de rollo
                                            </th>
                                            <th width="10%">
                                                Cantidad
                                            </th>
                                            <th width="10%">
                                                Peso
                                            </th>
                                            <th width="1%">

                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="body_conceptos">


                                        @foreach (Portal_2_0.Models.RM_elemento item in Model.RM_elemento)
                                        {
                                            <tr id="div_concepto_@contador">
                                                <input type="hidden" name="RM_elemento.Index" id="RM_elemento.Index" value="@contador" />
                                                <input type="hidden" name="RM_elemento[@contador].activo" value="true" />
                                                <input type="hidden" name="RM_elemento[@contador].clave" value="@item.clave" />
                                                <td class="input-contador-conceptos"></td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].numeroParteCliente" id="RM_elemento[@contador].numeroParteCliente" class="form-control col-md-12" value="@item.numeroParteCliente" autocomplete="off" maxlength="50" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].numeroParteCliente" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].numeroMaterial" id="RM_elemento[@contador].numeroMaterial" class="form-control col-md-12" value="@item.numeroMaterial" autocomplete="off" maxlength="50" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].numeroMaterial" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].numeroLote" id="RM_elemento[@contador].numeroLote" class="form-control col-md-12" value="@item.numeroLote" autocomplete="off" maxlength="50" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].numeroLote" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].numeroRollo" id="RM_elemento[@contador].numeroRollo" class="form-control col-md-12" value="@item.numeroRollo" autocomplete="off" maxlength="50" required>
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].numeroRollo" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].cantidad" id="RM_elemento[@contador].cantidad" class="form-control col-md-12 entero" value="@item.cantidad" autocomplete="off">
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].cantidad" data-valmsg-replace="true"></span>
                                                </td>
                                                <td>
                                                    <input style=" font-size: 12px;" type="text" name="RM_elemento[@contador].peso" id="RM_elemento[@contador].peso" class="form-control col-md-12 decimal" value="@item.peso" autocomplete="off">
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="RM_elemento[@contador].peso" data-valmsg-replace="true"></span>
                                                </td>

                                                <td>
                                                    <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarConcepto(@contador); return false;">
                                                </td>
                                            </tr>

                                            contador++;
                                        }


                                    </tbody>

                                    <tfoot>
                                        <tr>
                                            <th colspan="5" style="text-align:right">Totales</th>
                                            <th id="total_cantidad" style="text-align: right; background:#cef7cd"> 0</th>
                                            <th id="total_peso" style="text-align: right; background: #cef7cd"> 0.000</th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                            <div class="form-group row">

                            </div>
                            <div class="form-group row">
                                <div class="col-md-11">
                                    <input type="button" value="Agregar" class="btn btn-round btn-warning float-right" onclick="AgregarConcepto(); return false;">
                                </div>
                            </div>

                            <div class="form-group row">
                                <span style="color:darkgray"><b>Opci&oacute;n 2 (Carga de archivo .xlsx):</b></span>
                            </div>

                            <div class="item form-group">
                                <label for="archivo_xlsx" class="control-label col-md-1">Archivo Excel</label>
                                <div class="custom-file col-md-4">
                                    <input type="file" class="custom-file-input" id="archivo_xlsx" name="archivo_xlsx" aria-describedby="inputGroupFileAddon01" accept=".xlsx,.XLSX">
                                    <label class="custom-file-label" for="archivo_xlsx">Seleccione un archivo...</label>
                                </div>
                                <div class="col-md-2 col-sm-2">
                                    <button id="cargar-archivo-btn" type="button" class="btn btn-warning float-lg-left"><i class="fa-solid fa-upload"></i>&nbsp; Leer Archivo</button>
                                </div>
                                <div class="col-md-2 col-sm-2">
                                    <a href="@Url.Action("FormatoEjemplo", ViewBag.ControllerName)" class="btn btn-info float-lg-left" ><i class="fa-solid fa-download"></i> Descargar Formato Ejemplo</a>
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>OBSERVACIONES</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.observaciones, new { @class = "control-label col-md-12 col-sm-12", @style = "text-align:left" })
                            </div>
                            <div class="item form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.observaciones, new { @class = "form-control", @rows = "4", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="ln_solid"></div>

                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="button" id="btn-ok" class="btn btn-success btn-lg float-lg-right"> <i class="fa-regular fa-floppy-disk"></i>&nbsp; Guardar</button>
                                </div>
                            </div>


                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a href="@Url.Action("Index", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Scripts/MvcFoolproofJQueryValidation.js"))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    <!-- input mask -->
    @Scripts.Render(Url.Content("~/Content/vendors/jquery.inputmask/dist/jquery.inputmask.bundle.js"))
    <script src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.all.min.js" integrity="sha512-/iBgV43zPirSC0tue+PT/1VHGs7En24twBmT+sVMgn9PTaOpKfbgIyL5YsGKlbAIxcwz9S8W/YEnYjpIYj2Axw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="~/Scripts/Forms/RemisionesManuales.js?date=@DateTime.Now"></script>
    <script>

       
    </script>
}


