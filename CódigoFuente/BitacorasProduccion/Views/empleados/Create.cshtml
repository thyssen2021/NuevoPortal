@model Portal_2_0.Models.empleados

@{
    ViewBag.Title = "Registro de Nuevo Empleado";
    ViewBag.PrimerNivel = "recursos_humanos";
    ViewBag.SegundoNivel = "empleados";
    ViewBag.ControllerName = "Empleados";

    List<Portal_2_0.Models.empleados> TotalEmpleados = (List<Portal_2_0.Models.empleados>)ViewBag.TotalEmpleados;
    List<int> subordinadosSeleccionados = (List<int>)ViewBag.SubordinadosSeleccionados;

}

@section estilos
{
    <!-- Select2 -->
    <link href="@Url.Content("~/Content/vendors/select2/css/select2.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/vendors/select2-bootstrap4-theme/select2-bootstrap4.min.css")" rel="stylesheet">
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">
    <link href="~/Content/vendors/multiselect_filter/bootstrap-duallistbox.css" rel="stylesheet" />

    <style>
        .profile-picture {
            width: 350px;
            height: 350px;
        }

        select[readonly] ~ .select2.select2-container .selection [role="combobox"] {
            background: repeating-linear-gradient(45deg, #eeeeee, #eeeeee 10px, rgba(255, 255, 255, 0.66) 10px, rgba(255, 255, 255, 0.66) 20px) !important;
            box-shadow: inset 0 0 0px 1px #77859133;
        }
    </style>
}

@*Valores enviados previamente*@
@if (@ViewBag.c_planta != null)
{
    <input type="hidden" value="@ViewBag.c_planta" id="c_planta" />
}
@if (@ViewBag.c_area != null)
{
    <input type="hidden" value="@ViewBag.c_area" id="c_area" />
}
@if (@ViewBag.c_puesto != null)
{
    <input type="hidden" value="@ViewBag.c_puesto" id="c_puesto" />
}

<div class="right_col" role="main">
    <div class="">

        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">

                        @using (Html.BeginForm("Create", "Empleados", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left" }))
                        {
                            @Html.AntiForgeryToken()
                            @*<div class="ln_solid"></div>*@

                            <div class="form-group row">
                                <span style="color:black"><b>DATOS GENERALES</b></span>
                            </div>
                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }
                            @* input para saber si está o no activo el campo de soporte *@
                            <input type="hidden" name="cambio_documento_soporte" id="cambio_documento_soporte" value="0" />
                            <div class="item form-group">
                                @Html.LabelFor(model => model.numeroEmpleado, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-2 col-sm-2 ">
                                    @Html.EditorFor(model => model.numeroEmpleado, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.numeroEmpleado, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.tipo_empleado, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-6 col-sm-6">
                                    <div class="col-md-4 col-sm-4">
                                        <input type="radio" id="tipo_empleado" name="tipo_empleado" value="@Bitacoras.Util.Empleados_tipo.EMPLEADO" @(Model != null && Model.tipo_empleado == Bitacoras.Util.Empleados_tipo.EMPLEADO ? "checked" : String.Empty) required>
                                        <nolabel>
                                            <label for="tipo_empleado">@Bitacoras.Util.Empleados_tipo.Descripcion(Bitacoras.Util.Empleados_tipo.EMPLEADO)</label>
                                        </nolabel>
                                    </div>
                                    <div class="col-md-4 col-sm-4">
                                        <input type="radio" id="tipo_proveedor" name="tipo_empleado" value="@Bitacoras.Util.Empleados_tipo.PROVEEDOR" @(Model != null && Model.tipo_empleado == Bitacoras.Util.Empleados_tipo.PROVEEDOR ? "checked" : String.Empty)>
                                        <nolabel>
                                            <label for="tipo_proveedor">@Bitacoras.Util.Empleados_tipo.Descripcion(Bitacoras.Util.Empleados_tipo.PROVEEDOR)</label>
                                        </nolabel>
                                    </div>
                                     <div class="col-md-4 col-sm-4">
                                        <input type="radio" id="tipo_practicante" name="tipo_empleado" value="@Bitacoras.Util.Empleados_tipo.PRACTICANTE" @(Model != null && Model.tipo_empleado == Bitacoras.Util.Empleados_tipo.PRACTICANTE ? "checked" : String.Empty)>
                                        <nolabel>
                                            <label for="tipo_practicante">@Bitacoras.Util.Empleados_tipo.Descripcion(Bitacoras.Util.Empleados_tipo.PRACTICANTE)</label>
                                        </nolabel>
                                    </div>

                                    @Html.ValidationMessageFor(model => model.tipo_empleado, "", new { @class = "text-danger" })
                                </div>
                                
                                @*
                                    --- OCULTO EN LA CREACION DE EMPLEADOS ---
                                    @Html.LabelFor(model => model.correo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.C8ID, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-1 col-sm-1">
                                    @Html.EditorFor(model => model.C8ID, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.C8ID, "", new { @class = "text-danger" })
                                </div>*@
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.nombre, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.apellido1, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.EditorFor(model => model.apellido1, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.apellido1, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.apellido2, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.nueva_fecha_nacimiento, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-2 col-sm-2">
                                    @Html.EditorFor(model => model.nueva_fecha_nacimiento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.nueva_fecha_nacimiento, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.ingresoFecha, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-2 col-sm-2">
                                    @Html.EditorFor(model => model.ingresoFecha, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.ingresoFecha, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.sexo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-2 col-sm-2">
                                    <div class="col-md-6 col-sm-6">
                                        <input type="radio" id="male" name="sexo" value="M" @(Model != null && Model.sexo == "M" ? "checked" : String.Empty) required>
                                        <nolabel>
                                            <label for="male">Hombre</label>
                                        </nolabel>
                                    </div>
                                    <div class="col-md-6 col-sm-6">
                                        <input type="radio" id="female" name="sexo" value="F" @(Model != null && Model.sexo == "F" ? "checked" : String.Empty)>
                                        <nolabel>
                                            <label for="female">Mujer</label>
                                        </nolabel>
                                    </div>

                                    @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>ESTRUCTURA ORGANIZACIONAL</b></span>
                            </div>
                            <div class="item form-group">
                                <!--id jefe directo -->
                                @Html.LabelFor(model => model.id_jefe_directo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.DropDownList("id_jefe_directo", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_jefe_directo, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.shared_services, new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                                <div class="col-md-1 col-sm-1">
                                    @Html.EditorFor(m => m.shared_services, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.shared_services, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.planta_clave, htmlAttributes: new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @if (Model != null && Model.shared_services)
                                    {
                                        @Html.DropDownList("planta_clave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("planta_clave", null, htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    }
                                    @Html.ValidationMessageFor(model => model.planta_clave, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.id_area, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3 ">
                                    @Html.DropDownList("id_area", null, "-- Seleccione un valor --", htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.id_area, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.puesto, htmlAttributes: new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-3 col-sm-3">
                                    @Html.DropDownList("puesto", null, "-- Seleccione un valor --", htmlAttributes: new { @class = "form-control select2bs4", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.puesto, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>SUBORDINADOS DIRECTOS</b></span>
                            </div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12">
                                    <select multiple="multiple" size="10" id="subordinados" name="subordinados">
                                        @foreach (var item in TotalEmpleados)
                                        {
                                            <option value="@item.id" @(subordinadosSeleccionados.Contains(item.id) ? "selected" : String.Empty) )>
                                                @(item.ConcatNumEmpleadoNombrePlanta)
                                            </option>
                                        }
                                    </select>
                                </div>

                            </div>
                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>FOTOGRAF&Iacute;A</b></span>
                            </div>

                            <div class="item form-group">
                                @Html.LabelFor(model => model.id_fotografia, htmlAttributes: new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                                <div class="col-md-5 col-sm-5">
                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(m => m.ArchivoImagen, new { @class = "custom-file-input", type = "file", @accept = ".png, .jpeg, .jpg, .gif, .bmp" })
                                            <label class="custom-file-label" for="@Html.IdFor(model => model.ArchivoImagen)" style="text-align:left">Seleccione un archivo...</label>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.ArchivoImagen, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!-- La imagen que vamos a usar para previsualizar lo que el usuario selecciona -->
                            <div class="item form-group">
                                <div class="col-md-1 col-sm-1">
                                </div>
                                <div id="div-img-container" class="item form-group">
                                    <img id="imagenPrevisualizacion">
                                </div>

                            </div>

                            <div class="ln_solid"></div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 ">
                                    <button type="submit" class="btn btn-success btn-lg float-right"><i class="fa-regular fa-floppy-disk"></i> Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />
                    <a href="@Url.Action("Index", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render(Url.Content("~/Scripts/Forms/empleados.js?" + DateTime.Now))
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    <script src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>
    <script src="~/Content/vendors/multiselect_filter/jquery.bootstrap-duallistbox.js"></script>


}

