@model Portal_2_0.Models.empleados

@{
    ViewBag.Title = "Habilitar Empleado";
    ViewBag.PrimerNivel = "recursos_humanos";
    ViewBag.SegundoNivel = "empleados";
    ViewBag.ControllerName = "Empleados";
}

@section estilos
{
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/vendors/iCheck/skins/square/green.css")" rel="stylesheet">
    <style>
        .profile-picture {
            width: 300px;
            height: 300px;
        }
    </style>
}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <div class="clearfix"></div>
                    </div>

                    <!-- /.col -->
                    <div class="x_content">
                        <div class="form-group row">
                            <span style="color:black"><b>DATOS GENERALES</b></span>
                        </div>
                        <div class="item form-group">
                            @Html.LabelFor(model => model.numeroEmpleado, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-1 col-sm-1 ">
                                @Html.EditorFor(model => model.numeroEmpleado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            @Html.LabelFor(model => model.correo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            @Html.LabelFor(model => model.C8ID, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-1 col-sm-1">
                                @Html.EditorFor(model => model.C8ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="item form-group">
                            @Html.LabelFor(model => model.nombre, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            @Html.LabelFor(model => model.apellido1, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                @Html.EditorFor(model => model.apellido1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            @Html.LabelFor(model => model.apellido2, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="item form-group">
                            @Html.LabelFor(model => model.nueva_fecha_nacimiento, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-2 col-sm-2">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.nueva_fecha_nacimiento)" readonly />
                            </div>
                            @Html.LabelFor(model => model.ingresoFecha, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-2 col-sm-2">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.ingresoFecha)" readonly />
                            </div>
                            @Html.LabelFor(model => model.sexo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-2 col-sm-2">
                                <div class="col-md-6 col-sm-6">
                                    <input type="radio" id="male" name="sexo" value="M" @(Model != null && Model.sexo == "M" ? "checked" : String.Empty) disabled>
                                    <nolabel>
                                        <label for="male">Hombre</label>
                                    </nolabel>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <input type="radio" id="female" name="sexo" value="F" @(Model != null && Model.sexo == "F" ? "checked" : String.Empty) disabled>
                                    <nolabel>
                                        <label for="female">Mujer</label>
                                    </nolabel>
                                </div>

                                @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="ln_solid"></div>

                        <div class="form-group row">
                            <span style="color:black"><b>ESTRUCTURA ORGANIZACIONAL</b></span>
                        </div>
                        <div class="item form-group">
                            <!--id jefe directo -->
                            @Html.LabelFor(model => model.id_jefe_directo, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.empleados2.ConcatNombre)" readonly />
                            </div>
                            @Html.LabelFor(model => model.shared_services, new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-1 col-sm-1">
                                @Html.EditorFor(m => m.shared_services, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.shared_services, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="item form-group">
                            @Html.LabelFor(model => model.planta_clave, htmlAttributes: new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.plantas.descripcion)" readonly />
                            </div>
                            @Html.LabelFor(model => model.id_area, new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Area.descripcion)" readonly />
                            </div>
                            @Html.LabelFor(model => model.puesto, htmlAttributes: new { @class = "col-form-label col-md-1 col-sm-1 label-align" })
                            <div class="col-md-3 col-sm-3">
                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.puesto1.descripcion)" readonly />
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        <div class="form-group row">
                            <span style="color:black"><b>FOTOGRAF&Iacute;A</b></span>
                        </div>
                        @if (Model != null && Model.id_fotografia.HasValue)
                        {
                            <!-- La imagen que vamos a usar para previsualizar lo que el usuario selecciona -->
                            <div class="item form-group">
                                <div class="col-md-1 col-sm-1">
                                </div>
                                <div id="div-img-container" class="item form-group">
                                    <img id="imagenPrevisualizacion" src="@(Model.id_fotografia.HasValue ? Model.ImageToBase64(350, 350) : String.Empty)">
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="item form-group">
                                <p>No disponible</p>
                            </div>
                        }
                        <div class="col-md-12">
                            <div class="ln_solid"></div>
                        </div>
                        <div class="col-md-12">
                            <p class="float-md-left">
                                <a href="@Url.Action("Edit", ViewBag.ControllerName, new { id = Model.id})" class="btn btn-success btm-sm" title="Editar">
                                    <i class="fa-regular fa-pen-to-square"></i> Editar
                                </a>
                            </p>
                            <p class="float-md-right">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-actions no-color float-md-right">
                                        <input type="submit" value="Habilitar" class="btn btn-warning btm-sm" />
                                    </div>
                                }
                            </p>
                        </div>
                    </div>
                </div>
                <div>
                    <a href="@Url.Action("Index", ViewBag.ControllerName)" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- iCheck -->
    @Scripts.Render(Url.Content("~/Content/vendors/iCheck/icheck.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    <!-- SweetAlert2 -->
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))

    <script>
        $(document).ready(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
                increaseArea: '20%' // optional
            });
        });

        window.onload = function () {
            clicMenu(1);
        }

    </script>

}
