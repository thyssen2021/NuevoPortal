@model Portal_2_0.Models.produccion_registros

@{
    ViewBag.Title = "Datos del Registro";
    ViewBag.PrimerNivel = "bitacoras_produccion";
    ViewBag.SegundoNivel = "produccion_registros";
    ViewBag.ControllerName = "ProduccionRegistros";

    Portal_2_0.Models.mm_v3 mm = (Portal_2_0.Models.mm_v3)ViewBag.MM;
    Portal_2_0.Models.class_v3 class_ = (Portal_2_0.Models.class_v3)ViewBag.Class;
    int contador = 100;
    Clases.Util.MensajesSweetAlert mensajeAlerta = (Clases.Util.MensajesSweetAlert)ViewBag.MensajeAlert;
}

@section estilos
{
    <!-- DataTables -->
    @Styles.Render("~/Content/dataTables_css")
    <!-- SweetAlert2 -->
    <link href="@Url.Content("~/Content/vendors/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css")" rel="stylesheet">

    <style>

        dl {
            border: 3px double #ccc;
            padding: 0.5em;
            background-color: #fffdf0
        }

        dt {
            font-weight: bold;
            color: green;
        }

        dd {
            font-weight: bold;
            color: #454545;
        }

        dt::after {
            content: ":";
        }

        .fondo_verde > td {
            background-color: green;
            color: #fffdf0;
            font-weight: bolder;
        }

        .fondo_amarillo > td {
            background-color: orange;
            color: #221f1f;
            font-weight: bolder;
        }

        .fondo_rojo > td {
            background-color: red;
            color: #fffdf0;
            font-weight: bolder;
        }

        input {
            text-align: right;
        }
    </style>
}

@*Para SweetAlert*@
@if (mensajeAlerta != null)
{
    <input type="hidden" value="@mensajeAlerta.Mensaje" id="mensajeAlert" />
    <input type="hidden" value="@mensajeAlerta.getTipoMensaje()" id="mensajeAlertTipo" />
}

<div class="right_col" role="main">
    <div class="">
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@ViewBag.Title</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            @*Utilizado para mover a la derecha los iconos del card*@
                            <span style="visibility:hidden">_______</span>
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box ">
                                    <dl class="row">
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_supervisor)</dt>
                                        <dd class="col-sm-10">@Model.produccion_supervisores.empleados.nombre&ensp;@Model.produccion_supervisores.empleados.apellido1&ensp;@Model.produccion_supervisores.empleados.apellido2</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_operador)</dt>
                                        <dd class="col-sm-10">@Model.produccion_operadores.empleados.nombre&ensp;@Model.produccion_operadores.empleados.apellido1&ensp;@Model.produccion_operadores.empleados.apellido2</dd>
                                        <dt class="col-sm-2">Planta</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.plantas.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_linea)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.produccion_lineas.linea)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.fecha)</dt>
                                        <dd class="col-sm-2">@Model.fecha</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.id_turno)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.produccion_turnos.descripcion)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.sap_platina)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.sap_platina)</dd>
                                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.sap_rollo)</dt>
                                        <dd class="col-sm-2">@Html.DisplayFor(model => model.sap_rollo)</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Captura de datos del registro</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <br />
                        @using (Html.BeginForm("DatosEntradas", "ProduccionRegistros", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                        {

                            @Html.AntiForgeryToken()


                            if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("", new { @class = "text-white" })
                                </div>
                            }

                            @*Campos Hidden*@

                            @Html.HiddenFor(model => model.id)
                            @Html.HiddenFor(model => model.clave_planta)
                            @Html.HiddenFor(model => model.id_linea)
                            @Html.HiddenFor(model => model.id_operador)
                            @Html.HiddenFor(model => model.id_supervisor)
                            @Html.HiddenFor(model => model.id_turno)
                            @Html.HiddenFor(model => model.sap_platina)
                            @Html.HiddenFor(model => model.sap_rollo)
                            @Html.HiddenFor(model => model.fecha)
                            @Html.HiddenFor(model => model.activo)
                            @Html.HiddenFor(model => model.produccion_datos_entrada.id_produccion_registro)

                            <div class="form-group row">
                                <span style="color:black"><b>MATERIAL</b></span>
                            </div>

                            <div class="form-group row">
                                <!-- Tipo de Material -->
                                <label class="control-label col-md-1" for="tipo_material">
                                    Tipo de Material
                                </label>
                                <div class="col-md-3">
                                    <input type="text" id="tipo_material" class="form-control col-md-12" value="@mm.Type_of_Material" readonly>
                                </div>
                                <!--Numero de Parte-->
                                <label class="control-label col-md-1" for="num_parte">
                                    N&uacute;mero de parte
                                </label>
                                <div class="col-md-4">
                                    <input type="text" id="num_parte" class="form-control col-md-12" value="@class_.Customer_part_number" readonly>
                                </div>
                                <!--Material-->
                                <label class="control-label col-md-1" for="material">
                                    Material
                                </label>
                                <div class="col-md-2">
                                    <input type="text" id="material" class="form-control col-md-12" value="@mm.Old_material_no_" readonly>
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.orden_sap, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.orden_sap, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.orden_sap, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.orden_sap_2, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.orden_sap_2, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.orden_sap_2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>ROLLO</b></span>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.numero_rollo, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.numero_rollo, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.numero_rollo, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.lote_rollo, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.lote_rollo, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.lote_rollo, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.piezas_por_golpe, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.piezas_por_golpe, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.piezas_por_golpe, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_etiqueta, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_etiqueta, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_etiqueta, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group row">

                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_regreso_rollo_real, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_regreso_rollo_real, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_regreso_rollo_real, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.ordenes_por_pieza, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.ordenes_por_pieza, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.ordenes_por_pieza, "", new { @class = "text-danger" })
                                </div>
                                <!--Peso rollo usado-->
                                <label class="control-label col-md-1" for="peso_rollo_usado">
                                    Peso rollo usado
                                </label>
                                <div class="col-md-2">
                                    <input type="text" id="peso_rollo_usado" class="form-control col-md-12" value="" readonly>
                                </div>
                            </div>
                            <div class="ln_solid"></div>

                            <div class="form-group row">
                                <span style="color:black"><b>LOTES</b></span>
                            </div>
                            <div id="div_lotes">
                                @foreach (Portal_2_0.Models.produccion_lotes lote in Model.produccion_lotes)
                                {
                                    <div class="form-group row" id="div_lotes_@contador">
                                        <input type="hidden" name="produccion_lotes.Index" id="produccion_lotes.Index" value="@contador" />
                                        <label class="control-label col-md-1" for="produccion_lotes[@contador].numero_lote_izquierdo">
                                            <span class="float-right">Lote Izquierdo</span>
                                        </label>
                                        <div class="col-md-2">
                                            <input style="text-align:right" type="number" min="0" step="1" max="50000" name="produccion_lotes[@contador].numero_lote_izquierdo" id="produccion_lotes[@contador].lote_izquierdo" class="form-control col-md-12" value="@lote.numero_lote_izquierdo" autocomplete="off">
                                            <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[@contador].numero_lote_izquierdo" data-valmsg-replace="true"></span>
                                        </div>
                                        <label class="control-label col-md-1" for="produccion_lotes[@contador].numero_lote_derecho">
                                            <span class="float-right">Lote Derecho</span>
                                        </label>
                                        <div class="col-md-2">
                                            <input type="number" min="0" step="1" max="50000" name="produccion_lotes[@contador].numero_lote_derecho" id="produccion_lotes[@contador].lote_derecho" class="form-control col-md-12" value="@lote.numero_lote_derecho" autocomplete="off">
                                            <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[@contador].numero_lote_derecho" data-valmsg-replace="true"></span>
                                        </div>
                                        <label class="control-label col-md-2" for="produccion_lotes[@contador].piezas_paquete">
                                            <span class="float-right">Piezas por paquete</span>
                                        </label>
                                        <div class="col-md-2">
                                            <input type="number" min="0" step="1" max="5000" name="produccion_lotes[@contador].piezas_paquete" id="produccion_lotes[@contador].piezas_paquete" class="form-control col-md-12 total_piezas" value="@lote.piezas_paquete" maxlength="10" required>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[@contador].piezas_paquete" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-md-1">
                                            <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarLote(@contador); return false;">
                                        </div>
                                    </div>

                                    contador++;
                                }
                            </div>
                            <div class="form-group row">

                            </div>
                            <div class="form-group row">
                                <div class="col-md-11">
                                    <input type="button" value="Agregar" class="btn btn-round btn-warning float-right" onclick="AgregarConcepto(); return false;">
                                </div>
                            </div>
                            <!---------------------  -----------  -----------  -----------  ------------------>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_bascula_kgs, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_bascula_kgs, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_bascula_kgs, "", new { @class = "text-danger" })
                                </div>
                                <!--Total de piezas-->
                                <label class="control-label col-md-1" for="total_piezas">
                                    Total de piezas
                                </label>
                                <div class="col-md-3">
                                    <input type="text" id="total_piezas" class="form-control col-md-12" value="" readonly>
                                </div>
                                <!--Número de golpes-->
                                <label class="control-label col-md-1" for="numero_golpes">
                                    N&uacute;mero de Golpes
                                </label>
                                <div class="col-md-3">
                                    <input type="text" id="numero_golpes" class="form-control col-md-12" value="" readonly>
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>PUNTA Y COLAS</b></span>
                            </div>
                            <div class="form-group row">

                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_despunte_kgs, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_despunte_kgs, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_despunte_kgs, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_cola_kgs, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_cola_kgs, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_cola_kgs, "", new { @class = "text-danger" })
                                </div>
                                <!--Porcentaje punta y colas-->
                                <label class="control-label col-md-1" for="porcentaje_punta_cola">
                                    Porcentaje punta y colas
                                </label>
                                <div class="col-md-3">
                                    <input type="text" id="porcentaje_punta_cola" class="form-control col-md-12" value="" readonly>
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>PIEZAS DE AJUSTE</b></span>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.total_piezas_ajuste, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.total_piezas_ajuste, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.total_piezas_ajuste, "", new { @class = "text-danger" })
                                </div>
                                <!--Peso Bruto Kgs-->
                                <label class="control-label col-md-1" for="peso_bruto_kgs">
                                    Peso Bruto Kgs
                                </label>
                                <div class="col-md-3">
                                    <input type="text" id="peso_bruto_kgs" class="form-control col-md-12" value="" readonly>
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>PESO REAL PIEZA NETO</b></span>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.peso_real_pieza_neto, new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.produccion_datos_entrada.peso_real_pieza_neto, new { htmlAttributes = new { @class = "form-control col-md-12", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.peso_real_pieza_neto, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                                    @if (!String.IsNullOrEmpty(Model.produccion_lineas.ip))
                                    {
                                        <input type="button" value="Obtener Peso Báscula" class="btn btn-round btn-info float-left" onclick="muestraModalSocket(); return false;">
                                    }
                                    else
                                    {
                                        <input type="button" value="Obtener Peso Báscula" class="btn btn-round btn-info float-left" onclick="muestraModalSocket(); return false;" disabled>
                                    }


                                </div>
                                <div class="col-md-7">
                                    <input id="modal_button" type="button" value="Captura Manual" class="btn btn-round btn-warning float-right" onclick="mostrarModal(); return false;">
                                </div>
                            </div>

                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                <span style="color:black"><b>BALANCE SCRAP</b></span>
                            </div>
                            <table id="datatable_1" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th>
                                            Peso Real Pieza Bruto
                                        </th>
                                        <th>
                                            Peso Real Pieza Neto
                                        </th>
                                        <th>
                                            Scrap Natural
                                        </th>
                                        <th>
                                            Peso Neto SAP
                                        </th>
                                        <th>
                                            Peso Bruto SAP
                                        </th>
                                        <th>
                                            Balance Scrap
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    <tr id="fila_balance_scrap">
                                        <td id="td_peso_real_pieza_bruto">
                                        </td>
                                        <td id="td_peso_real_pieza_neto">
                                        </td>
                                        <td id="td_scrap_natural">
                                        </td>
                                        <td id="td_peso_neto_sap">
                                            @mm.Net_weight
                                        </td>
                                        <td id="td_peso_bruto_sap">
                                            @mm.Gross_weight
                                        </td>
                                        <td id="td_balance_scrap">
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                            <div class="form-group row">

                            </div>
                            <div class="form-group row">
                                <span style="color:black"><b>BALANCE SCRAP REAL</b></span>
                            </div>
                            <table id="datatable_2" class="table table-striped table-bordered " cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th>
                                            &Oacute;rdenes por pieza
                                        </th>
                                        <th>
                                            Peso de Rollo Usado Real Kg
                                        </th>
                                        <th>
                                            Peso Bruto Total piezas Kg
                                        </th>
                                        <th>
                                            Peso bruto Total piezas
                                            Kg
                                        </th>
                                        <th>
                                            Scrap de ingenier&iacute;a (buenas + Ajuste)
                                            Total
                                            Piezas
                                            Kg
                                        </th>
                                        <th>
                                            Peso Neto
                                            total piezas de ajuste
                                            Kgs
                                        </th>
                                        <th>
                                            Peso puntas y colas reales
                                            Kg
                                        </th>
                                        <th>
                                            Balance de Scrap Real
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    <tr id="fila_balance_scrap_real">
                                        <td id="td_ordenes_pieza">
                                        </td>
                                        <td id="td_peso_rollo_usado_real">
                                        </td>
                                        <td id="td_peso_bruto_total_piezas">
                                        </td>
                                        <td id="td_peso_neto_total_piezas">
                                        </td>
                                        <td id="td_scrap_ingenieria">
                                        </td>
                                        <td id="td_peso_neto_total_piezas_ajuste">
                                        </td>
                                        <td id="td_peso_punta_colas_reales">
                                        </td>
                                        <td id="td_balance_scrap_reales">
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                            <div class="ln_solid"></div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.produccion_datos_entrada.comentarios, new { @class = "control-label col-md-3 col-sm-3" })
                                <div class="col-md-12 col-sm-12 ">
                                    @Html.TextAreaFor(model => model.produccion_datos_entrada.comentarios, new { @class = "form-control", @rows = "4" })
                                    @Html.ValidationMessageFor(model => model.produccion_datos_entrada.comentarios, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="item form-group">
                                <div class="col-md-12 col-sm-12 offset-md-12">
                                    <button type="submit" class="btn btn-success btn-lg float-lg-right">Guardar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    <br />

                    <a href="@Url.Action("Index", ViewBag.ControllerName, new { planta = Model.clave_planta, linea = Model.id_linea})" class="btn btn-round btn-info btm-sm" title="Volver">
                        <i class="fa fa-arrow-circle-left"></i> Volver al listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Modal Sencilla Doble -->
<div class="modal fade" id="myModalTipoPieza" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Tipo de pieza</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <!--Peso Báscula Manual-->
                    <label class="control-label col-md-5" for="peso_bruto_kgs">
                       ¿La pieza es Sencilla o Doble?
                    </label>
                  
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button  type="button" class="btn btn-primary" onclick="ObtenerPesoBascula('@Model.produccion_lineas.ip',1)">Sencilla</button>
                <button  type="button" class="btn btn-primary" onclick="ObtenerPesoBascula('@Model.produccion_lineas.ip',2)">Doble</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Peso Real Pieza neto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <!--Peso Báscula Manual-->
                    <label class="control-label col-md-5" for="peso_bruto_kgs">
                        Peso Real Pieza Neto
                    </label>
                    <div class="col-md-7">
                        <input type="text" id="peso_manual" class="form-control col-md-12" value="@Model.produccion_datos_entrada.peso_real_pieza_neto">
                        <span id="error_peso" class="text-danger">Ingrese un número válido</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button id="aceptar_modal_sencilla" type="button" class="btn btn-primary" onclick="ocultarModal(1)" disabled>Sencilla</button>
                <button  id="aceptar_modal_doble" type="button" class="btn btn-primary" onclick="ocultarModal(2)" disabled>Doble</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- SweetAlert2 -->
    @Scripts.Render(Url.Content("~/Content/vendors/sweetalert2/sweetalert2.min.js"))
    @Scripts.Render(Url.Content("~/Content/vendors/select2/js/select2.full.min.js"))
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dataTables_js")
    @Scripts.Render(Url.Content("~/Scripts/AlertasSweetAlert.js"))
    <script>

        $(document).ready(function () {

            //inicializa los data table
            $('#datatable_1').DataTable({
                "paging": false,
                "ordering": false,
                "searching": false,
                "scrollX": true,
                "info": false
            });

            //inicializa los data table
            $('#datatable_2').DataTable({
                "paging": false,
                "ordering": false,
                "searching": false,
                "scrollX": true,
                "info": false
            });


            //Convierte jqueryval a espalo
            jQuery.extend(jQuery.validator.messages, {
                required: "Este campo es obligatorio.",
                remote: "Por favor, rellena este campo.",
                email: "Por favor, escribe una dirección de correo válida",
                url: "Por favor, escribe una URL válida.",
                date: "Por favor, escribe una fecha válida.",
                dateISO: "Por favor, escribe una fecha (ISO) válida.",
                number: "Por favor, escribe un número entero válido.",
                digits: "Por favor, escribe sólo dígitos.",
                creditcard: "Por favor, escribe un número de tarjeta válido.",
                equalTo: "Por favor, escribe el mismo valor de nuevo.",
                accept: "Por favor, escribe un valor con una extensión aceptada.",
                maxlength: jQuery.validator.format("Por favor, no escribas más de {0} caracteres."),
                minlength: jQuery.validator.format("Por favor, no escribas menos de {0} caracteres."),
                rangelength: jQuery.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres."),
                range: jQuery.validator.format("Por favor, escribe un valor entre {0} y {1}."),
                max: jQuery.validator.format("Por favor, escribe un valor menor o igual a {0}."),
                min: jQuery.validator.format("Por favor, escribe un valor mayor o igual a {0}.")
            });


            //Agrega el evento a todos los input
            $(":input").each(function () {
                $(this).on('input', function (e) {
                    calculaDatos()
                });
            });

            //agrega el evento para comprobar si es un numero
            $('#peso_manual').on('input', function (e) {

                let peso_manual = $('#peso_manual').val();
                //verifica si es un numero
                if (isNaN(peso_manual)) {
                    $('#error_peso').show();
                    $('#aceptar_modal_doble').prop("disabled", true)
                    $('#aceptar_modal_sencilla').prop("disabled", true)
                } else {
                    $('#error_peso').hide();
                    $('#aceptar_modal_doble').prop("disabled", false)
                    $('#aceptar_modal_sencilla').prop("disabled", false)
                }
            });



            //calcula los datos la primera vez que carga la página
            calculaDatos();
        });

        //agranda el tamaño de la barra
        window.onload = function () {
            document.getElementById('menu_toggle').click();
        }

        //variable global para el id
        var num = 0;

        var Toast = Swal.mixin({
            toast: true,
            icon: 'success',
            title: 'General Title',
            animation: false,
            position: 'top-right',
            showConfirmButton: true,
            timer: 5000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });


        //muestra el modal de captura de peso
        function mostrarModal() {
            $('#myModal').modal('show')
            let peso_manual = $('#peso_manual').val();
            //verifica si es un numero
            if (isNaN(peso_manual)) {
                $('#error_peso').show();
                $('#aceptar_modal_doble').prop("disabled", true)
                $('#aceptar_modal_sencilla').prop("disabled", true)
            } else {
                $('#error_peso').hide();
                $('#aceptar_modal_doble').prop("disabled", false)
                $('#aceptar_modal_sencilla').prop("disabled", false)
            }
        }

        //muestra el modal de captura de peso
        function muestraModalSocket() {
            $('#myModalTipoPieza').modal('show')
        }

        //muestra el modal de captura de peso
        function ocultarModal(denominador) {
            let peso_etiqueta = $('#peso_manual').val();
            $('#myModal').modal('hide');

            //verifica si es un numero
            if (!isNaN(peso_etiqueta)) {
                let peso = TryParseFloat(peso_etiqueta, 0);
                $('#produccion_datos_entrada_peso_real_pieza_neto').val(peso_etiqueta / denominador);
                Toast.fire({
                    icon: 'success',
                    title: 'Se capturó el peso correctamente.'
                })
                calculaDatos();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Ocurrió un error',
                    text: 'Intente nuevamente o capture el peso de forma manual.'
                })
            }
        }


        //realizar llamada ajax a la báscula
        function ObtenerPesoBascula(ip, denominador) {

            //obtiene las el peso
            $.ajax({
                type: 'POST',
                url: '/ProduccionRegistros/obtienePesoBascula',
                data: { ip: ip },
                success: function (data) {
                    console.log(data);
                    if (data[0].Message == "OK") {
                        let peso = TryParseFloat(data[0].Peso, 0);
                        $('#produccion_datos_entrada_peso_real_pieza_neto').val(peso / denominador);
                        Toast.fire({
                            icon: 'success',
                            title: 'Se capturó el peso correctamente.'
                        })
                        calculaDatos();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Ocurrió un error',
                            text: 'Intente nuevamente o capture el peso de forma manual.'
                        })
                    }
                },
                async: true
            });
            $('#myModalTipoPieza').modal('hide')

        }



        //funcion que calcula los datos de lo campos readonly
        function calculaDatos() {

            //Variables
            let peso_etiqueta = TryParseFloat($('#produccion_datos_entrada_peso_etiqueta').val(), 0);
            let peso_despunte = TryParseFloat($('#produccion_datos_entrada_peso_despunte_kgs').val(), 0);
            let peso_cola = TryParseFloat($('#produccion_datos_entrada_peso_cola_kgs').val(), 0);
            let peso_real_pieza_neto = TryParseFloat($('#produccion_datos_entrada_peso_real_pieza_neto').val(), 0);  //valor de la báscula
            let peso_regreso_rollo = TryParseFloat($('#produccion_datos_entrada_peso_regreso_rollo_real').val(), 0);
            let ordenes_por_pieza = TryParseFloat($('#produccion_datos_entrada_ordenes_por_pieza').val(), 0);
            let peso_bascula = TryParseFloat($('#produccion_datos_entrada_peso_bascula_kgs').val(), 0);
            let total_piezas_ajuste = TryParseFloat($('#produccion_datos_entrada_total_piezas_ajuste').val(), 0);
            let piezas_por_golpe = TryParseFloat($('#produccion_datos_entrada_piezas_por_golpe').val(), 0);

            //variable calculadas
            let peso_rollo_usado = peso_etiqueta - peso_regreso_rollo;
            let peso_rollo_usado_real = peso_bascula - peso_regreso_rollo;
            let total_piezas = obtieneTotalPiezaLote();
            let numero_golpes = DivisionPorCero(total_piezas, piezas_por_golpe, 0)
            let peso_real_pieza_bruto = obtienePesoRealPiezaBruto();
            let peso_bruto_kgs = obtienePesoBrutoKgs();
            let peso_bruto_total_piezas = (total_piezas * peso_real_pieza_bruto * ordenes_por_pieza);
            let peso_neto_total_piezas = (total_piezas * peso_real_pieza_neto * ordenes_por_pieza);
            let scrap_natural = obtieneScrapNatural();
            let scrap_ingenieria_buenas_ajuste = ((peso_bruto_total_piezas - peso_neto_total_piezas) + (total_piezas_ajuste * scrap_natural));
            let peso_neto_total_piezas_ajuste_kgs = total_piezas_ajuste * peso_real_pieza_neto;
            let peso_punta_y_cola_reales = peso_rollo_usado_real - (peso_bruto_total_piezas + peso_bruto_kgs);
            if (peso_punta_y_cola_reales < 0)
                peso_punta_y_cola_reales = 0;

            let balance_scrap_real = (DivisionPorCero(peso_bruto_kgs + peso_punta_y_cola_reales, peso_rollo_usado_real, 0)) * 100;

            //asigna el peso de rollo usado
            $('#peso_rollo_usado').val(peso_rollo_usado);
            //calcula y asiga punta y colas
            if (peso_bascula == 0) {
                $('#porcentaje_punta_cola').val('--'); //en caso de que denominador sea cero
            } else {
                let porcentaje_punta_colas = ((peso_despunte + peso_cola) / peso_bascula) * 100;
                $('#porcentaje_punta_cola').val(porcentaje_punta_colas.toFixed(2) + " %");
            }
            //asiga total pieza lotes
            $('#total_piezas').val(total_piezas);
            //agrega el valor de la bácula a la tabla
            document.getElementById("td_peso_real_pieza_neto").innerHTML = peso_real_pieza_neto.toFixed(3);
            //asigna el peso real pieza bruto
            document.getElementById("td_peso_real_pieza_bruto").innerHTML = obtienePesoRealPiezaBruto().toFixed(6);
            //crear y llamar método para obtener el scrap natural td_scrap_natural
            document.getElementById("td_scrap_natural").innerHTML = obtieneScrapNatural().toFixed(6);
            //asiga el valor del peso bruto
            $('#peso_bruto_kgs').val(obtienePesoBrutoKgs().toFixed(6));
            //asiga el numero de golpes (VERIFICAR LA FORMULA)
            $('#numero_golpes').val(numero_golpes.toFixed(0));

            //completa el balance de scrap
            document.getElementById("td_balance_scrap").innerHTML = obtieneBalanceScrap().toFixed(2) + '%';
            //cambia el color del fondo de la celda
            cambiaColorCelda('fila_balance_scrap', obtieneBalanceScrap());

            //asigna el valor de las ordenes por pieza
            document.getElementById("td_ordenes_pieza").innerHTML = ordenes_por_pieza;
            //asiga el valor de peso rollo real usado
            document.getElementById("td_peso_rollo_usado_real").innerHTML = peso_rollo_usado_real.toFixed(4);
            //asigna el valor de peso bruto total pieza kg
            document.getElementById("td_peso_bruto_total_piezas").innerHTML = peso_bruto_total_piezas.toFixed(4);
            //asigna el valor de peso neto total pieza kg
            document.getElementById("td_peso_neto_total_piezas").innerHTML = peso_neto_total_piezas.toFixed(4);
            //asigna scrap ingenieria buenas + ajuste
            document.getElementById("td_scrap_ingenieria").innerHTML = scrap_ingenieria_buenas_ajuste.toFixed(4);
            //asigna el valor peso neto  total piezas de ajuste
            document.getElementById("td_peso_neto_total_piezas_ajuste").innerHTML = peso_neto_total_piezas_ajuste_kgs.toFixed(4);
            //asiga el valor de peso punta y cola reales
            document.getElementById("td_peso_punta_colas_reales").innerHTML = peso_punta_y_cola_reales.toFixed(4);
            //asiga el balance de scrap real
            document.getElementById("td_balance_scrap_reales").innerHTML = balance_scrap_real.toFixed(2) + ' %';
            cambiaColorCelda("fila_balance_scrap_real", balance_scrap_real);
        }



        //---- el valor de Peso real pieza bruto ---
        function obtienePesoRealPiezaBruto() {
            var peso_neto_sap = TryParseFloat(document.getElementById("td_peso_neto_sap").innerHTML, 0);
            var peso_bruto_sap = TryParseFloat(document.getElementById("td_peso_bruto_sap").innerHTML, 0);
            var peso_real_pieza_neto = TryParseFloat($('#produccion_datos_entrada_peso_real_pieza_neto').val(), 0);


            return peso_real_pieza_bruto = DivisionPorCero(peso_bruto_sap, peso_neto_sap, 0) * peso_real_pieza_neto;

        }

        //----division por cero----
        function DivisionPorCero(numerador, denominador, defecto = 0) {
            let result = defecto;

            if (denominador != 0) {
                result = numerador / denominador;

            }
            return result;
        }
        //----cambia el color de la celda----
        function cambiaColorCelda(celda, valor) {
            var celda = $('#' + celda);
            valor = Math.abs(valor);


            celda.removeClass("fondo_verde");
            celda.removeClass("fondo_amarillo");
            celda.removeClass("fondo_rojo");

            //agrega fondo segun el valor
            if (valor >= 0 && valor < 1) {
                celda.addClass("fondo_verde");
            } else if (valor >= 1 && valor < 3) {
                celda.addClass("fondo_amarillo");
            } else if (valor >= 3) {
                celda.addClass("fondo_rojo");
            }

        }
        //---- el valor de Scrap Natural ---
        function obtieneScrapNatural() {
            let peso_bruto = obtienePesoRealPiezaBruto();
            let peso_neto = TryParseFloat($('#produccion_datos_entrada_peso_real_pieza_neto').val(), 0);

            return (peso_bruto - peso_neto);

        }

        //---- el valor de Peso Bruto Kgs  ---
        function obtienePesoBrutoKgs() {
            let peso_bruto = obtienePesoRealPiezaBruto();
            let total_piezas = TryParseFloat($('#produccion_datos_entrada_total_piezas_ajuste').val(), 0);

            return (peso_bruto * total_piezas);

        }

        //---- obtiene el balance de scrap  ---
        function obtieneBalanceScrap() {
            let peso_despunte = TryParseFloat($('#produccion_datos_entrada_peso_despunte_kgs').val(), 0);
            let peso_cola = TryParseFloat($('#produccion_datos_entrada_peso_cola_kgs').val(), 0);
            let peso_bruto = obtienePesoBrutoKgs();
            let peso_etiqueta = TryParseFloat($('#produccion_datos_entrada_peso_etiqueta').val(), 0);

            return balance_scrap = DivisionPorCero((peso_despunte + peso_cola + peso_bruto), peso_etiqueta, 0) * 100;

        }

        function obtieneTotalPiezaLote() {
            var suma = 0;
            $('.total_piezas').each(function () {
                suma = suma + TryParseFloat($(this).val(), 0)
            });

            return suma;
        }

        //convierte texto a float
        function TryParseFloat(str, defaultValue) {
            var retValue = defaultValue;
            if (str !== null) {
                if (str.length > 0) {
                    if (!isNaN(str)) {
                        retValue = parseFloat(str);
                    }
                }
            }
            return retValue;
        }

        //agreaga una fila para lotes
        function AgregarConcepto() {
            //obtine los valores de lotes


            $("#div_lotes").append(

                `
                                                        <div class="form-group row" id="div_lotes_`+ num + `">
                                                                        <input type="hidden" name="produccion_lotes.Index" id="produccion_lotes.Index" value="`+ num + `" />
                                                                        <label class="control-label col-md-1" for="produccion_lotes[`+ num + `].numero_lote_izquierdo">
                                                                            <span class="float-right">Lote Izquierdo</span>
                                                                        </label>
                                                                        <div class="col-md-2">
                                                                            <input style="text-align:right" type="number" min="0" step="1" max="50000" name="produccion_lotes[`+ num + `].numero_lote_izquierdo" id="produccion_lotes[` + num + `].lote_izquierdo" class="form-control col-md-12" value="" autocomplete="off">
                                                                            <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[` + num + `].numero_lote_izquierdo" data-valmsg-replace="true"></span>
                                                                        </div>
                                                                        <label class="control-label col-md-1" for="produccion_lotes[`+ num + `].numero_lote_derecho">
                                                                            <span class="float-right">Lote Derecho</span>
                                                                        </label>
                                                                        <div class="col-md-2">
                                                                            <input type="number" min="0" step="1" max="50000" name="produccion_lotes[`+ num + `].numero_lote_derecho" id="produccion_lotes[` + num + `].lote_derecho" class="form-control col-md-12" value="" autocomplete="off">
                                                                            <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[` + num + `].numero_lote_derecho" data-valmsg-replace="true"></span>
                                                                        </div>
                                                                        <label class="control-label col-md-2" for="produccion_lotes[`+ num + `].piezas_paquete">
                                                                             <span class="float-right">Piezas por paquete</span>
                                                                        </label>
                                                                        <div class="col-md-2">
                                                                            <input type="number" min="0" step="1" max="5000" name="produccion_lotes[`+ num + `].piezas_paquete" id="produccion_lotes[` + num + `].piezas_paquete" class="form-control col-md-12 total_piezas" value="" maxlength="10" required>
                                                                               <span class="field-validation-valid text-danger" data-valmsg-for="produccion_lotes[` + num + `].piezas_paquete" data-valmsg-replace="true"></span>
                                                                            </div>
                                                                        <div class="col-md-1">
                                                                            <input type="button" value="Borrar" class="btn btn-danger" onclick="borrarLote(` + num + `); return false;">
                                                                        </div>
                                                                    </div>
                                                                `
            );
            $("#div_lotes_" + num).hide().fadeIn(700);
            num++;


            //vuelve a asigar el evento on a cada input de los lotes
            $('.total_piezas').each(function () {
                $(this).on('input', function (e) {
                    calculaDatos();
                });
            });
        }

        //borra un lote
        function borrarLote(id) {

            $("#div_lotes_" + id).fadeOut(700, function () {
                $(this).remove();
            });
        }


    </script>
}

